{"main":{"_":{"main":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"caching":{"_":{"Map":{"type":"type","base":"struct","base-types":[],"fields":{"lck":"*sync.RWMutex","lckedlvl":"int","imp":"map[interface{}]interface{}","valid":"bool"},"comments":[],"_":{"Lock":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"RLock":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"Unlock":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"RUnlock":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"Keys":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"keys":"[]interface{}"}]},"Values":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"values":"[]interface{}"}]},"Put":{"type":"func","owner":"*Map","parameters":[{"name":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Close":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Reset":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Clear":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Remove":{"type":"func","owner":"*Map","parameters":[{"name":"...interface{}"}],"comments":[],"result":[{}]},"Find":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"value":"interface{}"}]},"Push":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Shift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Pop":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"At":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"FocusAt":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"focused":"bool"}]},"Fprint":{"type":"func","owner":"*Map","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"String":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"s":"string"}]},"Focus":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"focused":"bool"}]},"Handler":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]}}},"mapKeys":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"comments":[],"result":[{"keys":"[]interface{}"}]},"mapValues":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"comments":[],"result":[{"values":"[]interface{}"}]},"mapPut":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"candispose":"bool"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"disposeMapVal":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"valdispose":"interface{}"}],"comments":[],"result":[{}]},"validMap":{"type":"func","owner":"","parameters":[{"mp":"*Map"}],"comments":[],"result":[{"valid":"bool"}]},"mapRemove":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"name":"...interface{}"}],"comments":[],"result":[{}]},"mapFind":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{"vfound":"interface{}"}]},"mapPush":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"focusCurrentMap":"bool"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"mapShift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"mapPop":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"mapUnshift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"mapAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"av":"interface{}"}]},"mapFocusAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"focused":"bool"}]},"mapFPrint":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"w":"io.Writer"}],"comments":[],"result":[{"err":"error"}]},"writeMapVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"enc":"*json.Encoder"},{"mphndlr":"*MapHandler"},{"v":"interface{}"}],"comments":[],"result":[{"err":"error"}]},"NewMap":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"GLOBALMAP":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"GLOBALMAPHANDLER":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"MapAPI":{"type":"type","base":"interface","base-types":["Remove(...interface{})","Reset(...interface{})","Clear(...interface{})","Close(...interface{})"],"fields":{"Keys(...interface{})":"[]interface{}","Values(...interface{})":"[]interface{}","Put(interface{},":"...interface{})","Find(...interface{})":"interface{}","Fprint(io.Writer,":"...interface{}) error","String(...interface{})":"string","Focus(...interface{})":"bool","Push(interface{},":"...interface{}) int","Pop(interface{},":"...interface{}) interface{}","Shift(interface{},":"...interface{}) int","Unshift(interface{},":"...interface{}) interface{}","At(interface{},":"...interface{}) interface{}","FocusAt(interface{},":"...interface{}) bool"},"comments":[]},"MapReader":{"type":"func","owner":"","parameters":[{"mapapi":"MapAPI"},{"ks":"...interface{}"}],"comments":[],"result":[{"rdr":"*iorw.EOFCloseSeekReader"}]},"MapHandler":{"type":"type","base":"struct","base-types":[],"fields":{"mp":"*Map","crntmp":"*Map","internal":"bool"},"comments":[],"_":{"currentMap":{"type":"func","owner":"*MapHandler","parameters":[],"comments":[],"result":[]},"Reset":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Focus":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"focused":"bool"}]},"Find":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"value":"interface{}"}]},"Keys":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"keys":"[]interface{}"}]},"Values":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"values":"[]interface{}"}]},"Put":{"type":"func","owner":"*MapHandler","parameters":[{"name":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Pop":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"At":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"FocusAt":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"focused":"bool"}]},"Clear":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Remove":{"type":"func","owner":"*MapHandler","parameters":[{"name":"...interface{}"}],"comments":[],"result":[{}]},"Fprint":{"type":"func","owner":"*MapHandler","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"Shift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Push":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"String":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"s":"string"}]},"Close":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Reader":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]}}},"NewMapHandler":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"mphndlr":"*MapHandler"}]}},"main":{"_":{"main":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"test":{"_":{"MapHandler":{"type":"type","base":"struct","base-types":[],"fields":{"rnble":"active.Runtime","intern":"bool","mp":"*Map","dspsng":"bool","crntmp":"*Map","crntactnstmp":"int64","hndlrs":"map[*MapHandler]*MapHandler","prnthndlr":"*MapHandler"},"comments":[],"_":{"NewBuffer":{"type":"func","owner":"*MapHandler","parameters":[],"comments":["NewBuffer helper that returns instance of *iorw.Buffer"],"result":[]},"NewList":{"type":"func","owner":"*MapHandler","parameters":[{"distinct":"...bool"}],"comments":["NewList helper that returns instance of *enumeration.List"],"result":[{"list":"*enumeration.List"}]},"Reset":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"currentmp":{"type":"func","owner":"*MapHandler","parameters":[],"comments":[],"result":[]},"Keys":{"type":"func","owner":"*MapHandler","parameters":[{"k":"...interface{}"}],"comments":[],"result":[{"ks":"[]interface{}"}]},"String":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"s":"string"}]},"Reader":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"Fprint":{"type":"func","owner":"*MapHandler","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"Values":{"type":"func","owner":"*MapHandler","parameters":[{"k":"...interface{}"}],"comments":[],"result":[{"vs":"[]interface{}"}]},"ReplaceKey":{"type":"func","owner":"*MapHandler","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"Remove":{"type":"func","owner":"*MapHandler","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"At":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"FindAt":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"Push":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Shift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Pop":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"Put":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Find":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"vfound":"interface{}"}]},"Size":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"size":"int"}]},"ValueAt":{"type":"func","owner":"*MapHandler","parameters":[{"index":"int64"},{"ks":"...interface{}"}],"comments":[],"result":[{"v":"interface{}"}]},"NewHandler":{"type":"func","owner":"*MapHandler","parameters":[],"comments":[],"result":[]},"Clear":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Close":{"type":"func","owner":"*MapHandler","parameters":[],"comments":[],"result":[]}}},"mapHandlerFinalize":{"type":"func","owner":"","parameters":[{"mphndlr":"*MapHandler"}],"comments":[],"result":[{}]},"NewMapHandler":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"mphndlr":"*MapHandler"}]},"Map":{"type":"type","base":"struct","base-types":[],"fields":{"lck":"*sync.RWMutex","keys":"*enumeration.List","kvndm":"map[*enumeration.Node]*enumeration.Node","values":"*enumeration.List","lstactn":"mapAction","lstactnstmp":"int64"},"comments":[],"_":{"lastAction":{"type":"func","owner":"*Map","parameters":[{"mphndlr":"*MapHandler"},{"nxtactn":"...mapAction"}],"comments":[],"result":[{"mpAction":"mapAction"},{"actntr":"*actionTransaction"}]},"Handler":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"Size":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"String":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"s":"string"}]},"Fprint":{"type":"func","owner":"*Map","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"Reader":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"Find":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{"vfound":"interface{}"}]},"Keys":{"type":"func","owner":"*Map","parameters":[{"k":"...interface{}"}],"comments":[],"result":[{"ks":"[]interface{}"}]},"Values":{"type":"func","owner":"*Map","parameters":[{"k":"...interface{}"}],"comments":[],"result":[{"vs":"[]interface{}"}]},"Remove":{"type":"func","owner":"*Map","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"Clear":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"comments":[],"result":[{}]},"Close":{"type":"func","owner":"*Map","parameters":[],"comments":[],"result":[]},"ValueAt":{"type":"func","owner":"*Map","parameters":[{"index":"int64"},{"ks":"...interface{}"}],"comments":[],"result":[{"v":"interface{}"}]},"Shift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"FindAt":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"At":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"arv":"interface{}"}]},"Push":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"Pop":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"Put":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"ReplaceKey":{"type":"func","owner":"*Map","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]}}},"mapFinalize":{"type":"func","owner":"","parameters":[{"mp":"*Map"}],"comments":[],"result":[{}]},"NewMap":{"type":"func","owner":"","parameters":[],"comments":["NewMap return instance of *Map"],"result":[]},"actionTransaction":{"type":"type","base":"struct","base-types":[],"fields":{"crntactn":"mapAction","cntxt":"context.Context"},"comments":[]},"mapSize":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{"size":"int"}]},"mapString":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{"s":"string"}]},"mapFprint":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"w":"io.Writer"},{"ks":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"encodeMapAVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"val":"interface{}"},{"ks":"...interface{}"}],"comments":[],"result":[{}]},"encodeMapVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"val":"interface{}"},{"isLastVal":"bool"},{"ks":"...interface{}"}],"comments":[],"result":[{}]},"encodeMap":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{}]},"mapReader":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"mapFind":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{"vfound":"interface{}"}]},"mapRemove":{"type":"func","owner":"","parameters":[{"forceRemove":"bool"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"disposeValue":{"type":"func","owner":"","parameters":[{"v":"interface{}"}],"comments":[],"result":[{}]},"mapClear":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"comments":[],"result":[{}]},"mapClose":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"comments":[],"result":[{}]},"mapValueAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"index":"int64"},{"ks":"...interface{}"}],"comments":[],"result":[{"v":"interface{}"}]},"mapShift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"mapFindAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"av":"interface{}"}]},"mapAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"av":"interface{}"}]},"mapPush":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"length":"int"}]},"mapPop":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"pop":"interface{}"}]},"mapUnshift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{"unshift":"interface{}"}]},"mapPut":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"mapReplaceKey":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"GLOBALMAP":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"GLOBALMAPHANDLER":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}}},"chnls":{"_":{"Action":{"type":"type","base":"struct","base-types":[],"fields":{"rqst":"*Request","rspath":"string","prvactn":"*Action"},"comments":["Action - struct"],"_":{"Path":{"type":"func","owner":"*Action","parameters":[],"comments":["Path of resource action thats currently processing"],"result":[]},"ActionHandler":{"type":"func","owner":"*Action","parameters":[],"comments":["ActionHandler - handle individual action io"],"result":[]},"Close":{"type":"func","owner":"*Action","parameters":[],"comments":["Close - action"],"result":[]}}},"newAction":{"type":"func","owner":"","parameters":[{"rqst":"*Request"},{"rspath":"string"}],"comments":[],"result":[{"actn":"*Action"}]},"executeAction":{"type":"func","owner":"","parameters":[{"actn":"*Action"}],"comments":[],"result":[{"err":"error"}]},"ActionHandler":{"type":"type","base":"struct","base-types":[],"fields":{"actn":"*Action","actnrdr":"io.Reader","actnrnrdr":"io.RuneReader","hndlMaxSize":"int64","raw":"bool","active":"bool"},"comments":["ActionHandler - struct"],"_":{"ReadRune":{"type":"func","owner":"*ActionHandler","parameters":[],"comments":[],"result":[]},"Read":{"type":"func","owner":"*ActionHandler","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*ActionHandler","parameters":[],"comments":["Close - refer to io.Closer"],"result":[]}}},"NewActionHandler":{"type":"func","owner":"","parameters":[{"actn":"*Action"}],"comments":["NewActionHandler - for Action io"],"result":[{"actnhndl":"*ActionHandler"}]},"Channel":{"type":"type","base":"struct","base-types":[],"fields":{"objmap":"map[string]interface{}","lstnr":"*listen.Listener","schdls":"*scheduling.Schedules","mqttmngr":"*mqtt.MQTTManager"},"comments":[],"_":{"Listener":{"type":"func","owner":"*Channel","parameters":[],"comments":["Listener - *listen.Listener listener for Channel"],"result":[]},"MQTT":{"type":"func","owner":"*Channel","parameters":[],"comments":[],"result":[]},"Schedules":{"type":"func","owner":"*Channel","parameters":[],"comments":["Schedules - *scheduling.Schedules schedules for Channel"],"result":[]},"NewSchedule":{"type":"func","owner":"*Channel","parameters":[{"schdl":"*scheduling.Schedule"},{"a":"...interface{}"}],"comments":["NewSchedule - implement scheduling.ScheduleHandler NewScheduler()"],"result":[{"scdhlhndlr":"scheduling.ScheduleHandler"}]},"internalServePath":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"internalServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"ServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"comments":["ServeHTTP - refer http.Handler"],"result":[{}]},"ServeRW":{"type":"func","owner":"*Channel","parameters":[{"r":"io.Reader"},{"w":"io.Writer"},{"a":"...interface{}"}],"comments":["ServeRW - serve Reader Writer"],"result":[{}]},"Stdio":{"type":"func","owner":"*Channel","parameters":[{"out":"*os.File"},{"in":"*os.File"},{"err":"*os.File"},{"a":"...interface{}"}],"comments":["Stdio - os.Stdout, os.Stdin"],"result":[{}]},"Send":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":["Send inline request"],"result":[{"rspr":"iorw.Reader"},{"err":"error"}]},"DefaultServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"io.Writer"},{"method":"string"},{"url":"string"},{"body":"io.Reader"},{"a":"...interface{}"}],"comments":["DefaultServeHTTP - helper to perform dummy ServeHttp request on channel"],"result":[{}]},"DefaultServePath":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"DefaultServeRW":{"type":"func","owner":"*Channel","parameters":[{"w":"io.Writer"},{"url":"string"},{"r":"io.Reader"},{"a":"...interface{}"}],"comments":["DefaultServeRW - helper to perform dummy ServeRW request on channel"],"result":[{}]}}},"NewChannel":{"type":"func","owner":"","parameters":[],"comments":["NewChannel - instance"],"result":[]},"GLOBALCHNL":{"type":"func","owner":"","parameters":[],"comments":["GLOBALCHNL - Global app *Channel"],"result":[]},"Request":{"type":"type","base":"struct","base-types":[],"fields":{"atv":"*active.Active","actnslst":"*enumeration.List","lstexctngactng":"*Action","rqstrsngmngr":"*resources.ResourcingManager","chnl":"*Channel","rqstoffset":"int64","rqstendoffset":"int64","rqstoffsetmax":"int64","rqstmaxsize":"int64","mediarqst":"bool","initPath":"string","settings":"map[string]interface{}","args":"[]interface{}","startedWriting":"bool","startedReading":"bool","mimetype":"string","httpw":"http.ResponseWriter","httpstatus":"int","flshr":"http.Flusher","prms":"*parameters.Parameters","wbytes":"[]byte","wbytesi":"int","rqstw":"io.Writer","httpr":"*http.Request","cchdrqstcntnt":"*iorw.Buffer","cchdrqstcntntrdr":"*iorw.BuffReader","prtclmethod":"string","prtcl":"string","rmtHost":"string","lclHost":"string","zpw":"*gzip.Writer","rqstr":"iorw.Reader","Interrupted":"bool","objmap":"map[string]interface{}","intrnbuffs":"map[*iorw.Buffer]*iorw.Buffer","isFirstRequest":"bool","mphndlr":"*caching.MapHandler","dbms":"*rqstdbms","activecns":"map[string]*database.Connection","cmnds":"map[int]*osprc.Command","schdl":"*scheduling.Schedule","prntrqst":"*Request","fsutils":"*fsutils.FSUtils","webclient":"*web.ClientHandle","mqttmsg":"mqtt.Message","mqttevent":"mqtt.MqttEvent"},"comments":["Request -"],"_":{"RemoteAddr":{"type":"func","owner":"*Request","parameters":[],"comments":["RemoteAddr return remote Address of any network request"],"result":[]},"LocalAddr":{"type":"func","owner":"*Request","parameters":[],"comments":["LocalAddr return local Address of any network request"],"result":[]},"Resource":{"type":"func","owner":"*Request","parameters":[{"path":"string"}],"comments":["Resource - return mapped resource interface{} by path"],"result":[{"rs":"interface{}"}]},"ProtoMethod":{"type":"func","owner":"*Request","parameters":[],"comments":["ProtoMethod - http e.g request METHOD"],"result":[]},"Proto":{"type":"func","owner":"*Request","parameters":[],"comments":["Proto - protocol of request e.g HTTP/1.1"],"result":[]},"Interrupt":{"type":"func","owner":"*Request","parameters":[],"comments":["Interrupt - Request execution"],"result":[]},"AddPath":{"type":"func","owner":"*Request","parameters":[{"path":"...string"}],"comments":["AddPath - next resource path(s) to process"],"result":[{}]},"ResponseHeaders":{"type":"func","owner":"*Request","parameters":[],"comments":["ResponseHeaders wrap arround current ResponseWriter.Header"],"result":[]},"ResponseHeader":{"type":"func","owner":"*Request","parameters":[],"comments":["ResponseHeader wrap arround current ResponseWriter.Header"],"result":[]},"SetResponseHeader":{"type":"func","owner":"*Request","parameters":[{"status":"int"}],"comments":["SetResponseStatus  set Response Status"],"result":[{"hdr":"http.Header"}]},"RequestHeaders":{"type":"func","owner":"*Request","parameters":[],"comments":["RequestHeaders wrap arround current Request.Header"],"result":[]},"RequestHeader":{"type":"func","owner":"*Request","parameters":[],"comments":["RequestHeader wrap arround current Request.Header"],"result":[]},"Parameters":{"type":"func","owner":"*Request","parameters":[],"comments":["Parameters - Request web Parameters"],"result":[]},"RequestBodyS":{"type":"func","owner":"*Request","parameters":[{"cached":"...bool"}],"comments":["RequestBodyS - wrap request.RequestBody() as string"],"result":[{"s":"string"}]},"RequestBody":{"type":"func","owner":"*Request","parameters":[{"cached":"...bool"}],"comments":["RequestBody - RequestBody as bufio.Reader"],"result":[{"bf":"*bufio.Reader"}]},"Close":{"type":"func","owner":"*Request","parameters":[],"comments":["Close - refer io.Closer"],"result":[]},"execute":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"comments":[],"result":[{}]},"internWrite":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"internRead":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"Write":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"startReading":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"Read":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"WebClient":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"templateLookup":{"type":"func","owner":"*Request","parameters":[{"actn":"*Action"},{"tmpltpath":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"rdr":"io.Reader"},{"rdrerr":"error"}]},"processPaths":{"type":"func","owner":"*Request","parameters":[{"wrapup":"bool"}],"comments":[],"result":[{}]},"Print":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":["Print helper Print(...interface) over *Request"],"result":[{}]},"Println":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":["Println helper Println(...interface) over *Request"],"result":[{}]},"Readln":{"type":"func","owner":"*Request","parameters":[],"comments":["Readln helper Readln() over *Request"],"result":[]},"ReadLines":{"type":"func","owner":"*Request","parameters":[],"comments":["ReadLines helper ReadLines() over *Request"],"result":[]},"ReadAll":{"type":"func","owner":"*Request","parameters":[],"comments":["ReadAll helper ReadAll() over *Request"],"result":[]},"copy":{"type":"func","owner":"*Request","parameters":[{"r":"io.Reader"},{"altw":"io.Writer"},{"istext":"bool"},{"isactive":"bool"},{"initpath":"string"}],"comments":[],"result":[{}]},"wrapup":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"startWriting":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"executeHTTP":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"comments":[],"result":[{}]},"executePath":{"type":"func","owner":"*Request","parameters":[{"path":"string"},{"interrupt":"func("}],"comments":[],"result":[{}]},"ismediaExt":{"type":"func","owner":"*Request","parameters":[{"ext":"string"}],"comments":[],"result":[{}]},"executeRW":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"comments":[],"result":[{")":"(err error)"}]},"detachAction":{"type":"func","owner":"*Request","parameters":[{"actn":"*Action"}],"comments":[],"result":[{}]},"ExecutePath":{"type":"func","owner":"*Request","parameters":[{"path":"string"}],"comments":[],"result":[{"err":"error"}]},"invokeAtv":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"removeCommand":{"type":"func","owner":"*Request","parameters":[{"cmdprcid":"int"}],"comments":[],"result":[{}]},"removeBuffer":{"type":"func","owner":"*Request","parameters":[{"buff":"*iorw.Buffer"}],"comments":[],"result":[{}]},"FS":{"type":"func","owner":"*Request","parameters":[],"comments":["FS return fsutils.FSUtils implementation for *Request"],"result":[]},"rscngmnger":{"type":"func","owner":"*Request","parameters":[],"comments":[],"result":[]},"fsfind":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"}]},"fsls":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"}]},"fsmkdir":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...interface{}"}],"comments":[],"result":[{}]},"fsmkdirall":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...interface{}"}],"comments":[],"result":[{}]},"fsrm":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"fstouch":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"fsset":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"fsappend":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"fsmv":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"destpath":"string"}],"comments":[],"result":[{}]},"fscat":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"fscats":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"fspipe":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"fspipes":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"comments":[],"result":[{}]},"Schedule":{"type":"func","owner":"*Request","parameters":[],"comments":["Schedule refer to scheduling.ScheduleHandler - StartedSchedule()"],"result":[]},"StartedSchedule":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":["StartedSchedule refer to scheduling.ScheduleHandler - StartedSchedule()"],"result":[{"err":"error"}]},"StoppedSchedule":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":["StoppedSchedule refer to scheduling.ScheduleHandler - StoppedSchedule()"],"result":[{"err":"error"}]},"ShutdownSchedule":{"type":"func","owner":"*Request","parameters":[],"comments":["ShutdownSchedule refer to scheduling.ScheduleHandler - ShutdownSchedule()"],"result":[]},"executeSchdlRequest":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"executeSchdlDbms":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"executeSchdlCommand":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"executeSchdlScript":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"executeScheduleAction":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"PrepActionArgs":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"comments":["PrepActionArgs refer to scheduling.ScheduleHandler - PrepActionArgs()"],"result":[{"preppedargs":"[]interface{}"},{"err":"error"}]}}},"rqstdbms":{"type":"type","base":"struct","base-types":[],"fields":{"dbms":"*database.DBMS","rqst":"*Request"},"comments":[],"_":{"Query":{"type":"func","owner":"*rqstdbms","parameters":[{"a":"interface{}"},{"qryargs":"...interface{}"}],"comments":[],"result":[{"reader":"*database.Reader"}]},"Execute":{"type":"func","owner":"*rqstdbms","parameters":[{"a":"interface{}"},{"excargs":"...interface{}"}],"comments":[],"result":[{"exctr":"*database.Executor"}]},"InOutS":{"type":"func","owner":"*rqstdbms","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"out":"string"},{"err":"error"}]},"InOut":{"type":"func","owner":"*rqstdbms","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"Connection":{"type":"func","owner":"*rqstdbms","parameters":[{"alias":"string"}],"comments":[],"result":[{"cn":"*database.Connection"}]},"Connections":{"type":"func","owner":"*rqstdbms","parameters":[],"comments":[],"result":[]},"RegisterConnection":{"type":"func","owner":"*rqstdbms","parameters":[{"alias":"string"},{"driver":"string"},{"datasource":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"registered":"bool"}]}}},"Response":{"type":"type","base":"struct","base-types":[],"fields":{"r":"*http.Request","w":"io.Writer","statusCode":"int","header":"http.Header","canWriteHeader":"bool"},"comments":["Response - struct"],"_":{"Header":{"type":"func","owner":"*Response","parameters":[],"comments":["Header refer to http.Header"],"result":[]},"Write":{"type":"func","owner":"*Response","parameters":[{"p":"[]byte"}],"comments":["Writer refer to io.Writer"],"result":[{"n":"int"},{"err":"error"}]},"WriteHeader":{"type":"func","owner":"*Response","parameters":[{"statusCode":"int"}],"comments":["WriteHeader - refer to http.ResponseWriter -> WriteHeader"],"result":[{}]},"Flush":{"type":"func","owner":"*Response","parameters":[],"comments":["Flush refer to http.Flusher"],"result":[]}}},"NewResponse":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"r":"*http.Request"}],"comments":["NewResponse - Instance of Response http.ResponseWriter helper"],"result":[{"resp":"*Response"}]},"internalNewRequest":{"type":"func","owner":"","parameters":[{"initPath":"string"},{"chnl":"*Channel"},{"prntrqst":"*Request"},{"rdr":"io.Reader"},{"wtr":"io.Writer"},{"httpw":"http.ResponseWriter"},{"httpr":"*http.Request"},{"httpflshr":"http.Flusher"},{"a":"...interface{}"}],"comments":[],"result":[{"rqst":"*Request"},{"interrupt":"func()"}]},"internalExecuteRequest":{"type":"func","owner":"","parameters":[{"rqst":"*Request"},{"interrupt":"func("}],"comments":[],"result":[{}]},"processingRequestIO":{"type":"func","owner":"","parameters":[{"initpath":"string"},{"chnl":"*Channel"},{"prntrqst":"*Request"},{"rdr":"io.Reader"},{"wtr":"io.Writer"},{"httpw":"http.ResponseWriter"},{"httpflshr":"http.Flusher"},{"httpr":"*http.Request"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"RequestScheduleAction":{"type":"type","base":"struct","base-types":["*scheduling.ScheduleAction"],"fields":{"rqst":"*Request","atvfunc":"func(goja.FunctionCall) goja.Value"},"comments":["RequestScheduleAction - struct implementing scheduling.ActionHandler and wrapping *Request"],"_":{"OnExecuteAction":{"type":"func","owner":"*RequestScheduleAction","parameters":[{"a":"...interface{}"}],"comments":["OnExecuteAction implementioan that is called by *scheduling.ScheduleAction ExecuteAction()"],"result":[{"result":"bool"},{"err":"error"}]}}}}},"database":{"_":{"Connection":{"type":"type","base":"struct","base-types":[],"fields":{"dbms":"*DBMS","driverName,":"dataSourceName string","dbi":"interface{}","db":"*sql.DB","args":"[]interface{}","dbinvoker":"func(string, ...interface{}) (*sql.DB, error)"},"comments":["Connection - struct"],"_":{"IsRemote":{"type":"func","owner":"*Connection","parameters":[],"comments":[],"result":[]},"Ping":{"type":"func","owner":"*Connection","parameters":[],"comments":[],"result":[]},"DataSource":{"type":"func","owner":"*Connection","parameters":[],"comments":[],"result":[]},"Driver":{"type":"func","owner":"*Connection","parameters":[],"comments":[],"result":[]},"IsConnected":{"type":"func","owner":"*Connection","parameters":[],"comments":[],"result":[]},"GblExecute":{"type":"func","owner":"*Connection","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"comments":["GblExecute - public for query()*Executor"],"result":[{"exctr":"*Executor"},{"err":"error"}]},"GblQuery":{"type":"func","owner":"*Connection","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"comments":["GblQuery - public for query() *Reader"],"result":[{"reader":"*Reader"},{"err":"error"}]},"inReaderOut":{"type":"func","owner":"*Connection","parameters":[{"rin":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"inMapOut":{"type":"func","owner":"*Connection","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"InOut":{"type":"func","owner":"*Connection","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":["InOut - OO{ in interface{} -> out io.Writer } loop till no input"],"result":[{}]}}},"runeReaderToString":{"type":"func","owner":"","parameters":[{"rnr":"io.RuneReader"}],"comments":[],"result":[{"s":"string"}]},"parseParam":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"},{"prmval":"interface{}"},{"argi":"int"}],"comments":[],"result":[{"s":"string"}]},"queryToStatement":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"},{"query":"interface{}"},{"args":"...interface{}"}],"comments":[],"result":[{"stmnt":"string"},{"validNames":"[]string"},{"mappedVals":"map[string]interface{}"}]},"internquery":{"type":"func","owner":"","parameters":[{"cn":"*Connection"},{"query":"interface{}"},{"noreader":"bool"},{},{},{"onfinalize":"interface{}"},{"args":"...interface{}"}],"comments":[],"result":[{"reader":"*Reader"},{"exctr":"*Executor"},{"err":"error"}]},"invokeError":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"err":"error"},{"onerror":"interface{}"}],"comments":[],"result":[{}]},"invokeSuccess":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onsuccess":"interface{}"},{"args":"...interface{}"}],"comments":[],"result":[{}]},"invokeFinalize":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onfinalize":"interface{}"}],"comments":[],"result":[{}]},"NewConnection":{"type":"func","owner":"","parameters":[{"dbms":"*DBMS"},{},{"dataSourceName":"string"}],"comments":["NewConnection - dbms,driver name and datasource name (cn-string)"],"result":[{"cn":"*Connection"}]},"CSVReader":{"type":"type","base":"struct","base-types":[],"fields":{"rdr":"*Reader","bfr":"*bufio.Reader","err":"error","Headers":"bool","ColDelim":"string","RowDelim":"string","IncludeEOF":"bool","AltHeaders":"[]string","pr":"*io.PipeReader","pw":"*io.PipeWriter"},"comments":["CSVReader -"],"_":{"Read":{"type":"func","owner":"*CSVReader","parameters":[{"p":"[]byte"}],"comments":["Read - refer to io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*CSVReader","parameters":[],"comments":["ReadRune - refer to io.RuneReader"],"result":[]}}},"NewCSVReader":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"},{"err":"error"},{"a":"...interface{}"}],"comments":["NewCSVReader - over rdr*Reader"],"result":[{"csvr":"*CSVReader"}]},"DBMS":{"type":"type","base":"struct","base-types":[],"fields":{"cnctns":"map[string]*Connection","drivers":"map[string]func(string, ...interface{}) (*sql.DB, error)"},"comments":["DBMS - struct"],"_":{"Connections":{"type":"func","owner":"*DBMS","parameters":[],"comments":["Connections return list of registered connection aliases"],"result":[]},"RegisterConnection":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"driver":"string"},{"datasource":"string"},{"a":"...interface{}"}],"comments":["RegisterConnection - alias, driverName, dataSourceName"],"result":[{"registered":"bool"}]},"RegisterDriver":{"type":"func","owner":"*DBMS","parameters":[{"driver":"string"},{"invokedbcall":"func(string"},{}],"comments":["RegisterDriver - register driver name for invokable db call"],"result":[{},{}]},"AliasExists":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"}],"comments":["AliasExists - alias exist <= exist[true], dbcn[*Connection]"],"result":[{"exists":"bool"},{"dbcn":"*Connection"}]},"driverDbInvoker":{"type":"func","owner":"*DBMS","parameters":[{"driver":"string"}],"comments":[],"result":[{"dbinvoker":"func(string"},{"...interface{})":"(*sql.DB"},{},{"hasdbinvoker":"bool"}]},"Query":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"query":"interface{}"},{"prms":"...interface{}"}],"comments":[],"result":[{"reader":"*Reader"}]},"QueryJSON":{"type":"func","owner":"*DBMS","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"comments":[],"result":[{"reader":"*Reader"}]},"inReaderOut":{"type":"func","owner":"*DBMS","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"inMapOut":{"type":"func","owner":"*DBMS","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"InOutS":{"type":"func","owner":"*DBMS","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"comments":["InOutS - OO{ in io.Reader -> out string } loop till no input"],"result":[{"out":"string"},{"err":"error"}]},"InOut":{"type":"func","owner":"*DBMS","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"result":[{"err":"error"}]},"Execute":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"query":"interface{}"},{"prms":"...interface{}"}],"comments":[],"result":[{"exctr":"*Executor"}]}}},"NewDBMS":{"type":"func","owner":"","parameters":[],"comments":["NewDBMS - instance"],"result":[]},"GLOBALDBMS":{"type":"func","owner":"","parameters":[],"comments":["GLOBALDBMS - Global DBMS instance"],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"Executor":{"type":"type","base":"struct","base-types":[],"fields":{"orgstmnt":"string","stmnt":"string","jsndcdr":"*json.Decoder","lastdlm":"string","tknlvl":"int","db":"*sql.DB","cn":"*Connection","stmt":"*sql.Stmt","lasterr":"error","lastInsertID":"int64","rowsAffected":"int64","mappedArgs":"map[string]interface{}","argNames":"[]string","qryArgs":"[]interface{}","OnSuccess":"interface{}","OnError":"interface{}","OnFinalize":"interface{}","script":"active.Runtime","canRepeat":"bool"},"comments":["Executor - struct"],"_":{"isRemote":{"type":"func","owner":"*Executor","parameters":[],"comments":[],"result":[]},"execute":{"type":"func","owner":"*Executor","parameters":[{"forrows":"...bool"}],"comments":[],"result":[{"rws":"*sql.Rows"},{"cltpes":"[]*ColumnType"},{"cls":"[]string"}]},"webquery":{"type":"func","owner":"*Executor","parameters":[{"forrows":"bool"},{"out":"io.Writer"},{"iorags":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"Repeat":{"type":"func","owner":"*Executor","parameters":[{"args":"...interface{}"}],"comments":["Repeat - repeat last query by repopulating parameters but dont regenerate last statement"],"result":[{"err":"error"}]},"ToJSON":{"type":"func","owner":"*Executor","parameters":[{"w":"io.Writer"}],"comments":["ToJSON write *Executor out to json"],"result":[{"err":"error"}]},"JSONReader":{"type":"func","owner":"*Executor","parameters":[],"comments":["JSONReader return *JSONReader"],"result":[]},"JSON":{"type":"func","owner":"*Executor","parameters":[],"comments":["JSON execute *Executor and return json as string"],"result":[]},"Close":{"type":"func","owner":"*Executor","parameters":[],"comments":["Close - Executor"],"result":[]},"Err":{"type":"func","owner":"*Executor","parameters":[],"comments":["Err - return last Error"],"result":[]}}},"newExecutor":{"type":"func","owner":"","parameters":[{"cn":"*Connection"},{"db":"*sql.DB"},{"query":"interface{}"},{"canRepeat":"bool"},{"script":"active.Runtime"},{},{},{"onfinalize":"interface{}"},{"args":"...interface{}"}],"comments":[],"result":[{"exctr":"*Executor"}]},"getTypeByName":{"type":"func","owner":"","parameters":[{"tpmn":"string"}],"comments":[],"result":[{"t":"reflect.Type"}]},"ExecError":{"type":"type","base":"struct","base-types":[],"fields":{"err":"error","stmnt":"string"},"comments":["ExecError - struct"],"_":{"Statement":{"type":"func","owner":"*ExecError","parameters":[],"comments":["Statement return statement executed that caused error"],"result":[]},"Error":{"type":"func","owner":"*ExecError","parameters":[],"comments":[],"result":[]}}},"newExecErr":{"type":"func","owner":"","parameters":[{"err":"error"},{"stmnt":"string"}],"comments":[],"result":[{"execerr":"*ExecError"}]},"JSONReader":{"type":"type","base":"struct","base-types":[],"fields":{"rdr":"*Reader","bfr":"*bufio.Reader","exctr":"*Executor","pr":"*io.PipeReader","pw":"*io.PipeWriter","err":"error"},"comments":["JSONReader - struct"],"_":{"Read":{"type":"func","owner":"*JSONReader","parameters":[{"p":"[]byte"}],"comments":["Read - refer to io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*JSONReader","parameters":[],"comments":["ReadRune - refer to io.RuneReader"],"result":[]}}},"NewJSONReader":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"},{"exctr":"*Executor"},{"err":"error"}],"comments":["NewJSONReader - over rdr*Reader or exctr*Executor"],"result":[{"jsnr":"*JSONReader"}]},"ReaderHandle":{"type":"type","base":"interface","base-types":[],"fields":{"ColumnTypes()":"[]ColumnTypeHandle","Columns()":"[]string","Data()":"[]interface{}","Next()":"(bool, error)","ToJSON(w":"io.Writer) error","JSON()":"(string, error)","Close()":"error"},"comments":[]},"JSONEntry":{"type":"type","base":"interface","base-types":[],"fields":{"JSON()":"string"},"comments":[]},"JSONDataEntry":{"type":"type","base":"interface","base-types":[],"fields":{"JSON()":"string"},"comments":[]},"Reader":{"type":"type","base":"struct","base-types":["*Executor"],"fields":{"rws":"*sql.Rows","rownr":"int64","strtrdng":"bool","isfocused":"bool","islast":"bool","isfirst":"bool","cls":"[]string","cltpes":"[]*ColumnType","data":"[]interface{}","datamap":"map[string]interface{}","dispdata":"[]interface{}","dataref":"[]interface{}","OnColumns":"interface{}","OnRow":"interface{}","OnValidData":"interface{}"},"comments":["Reader - struct"],"_":{"ColumnTypes":{"type":"func","owner":"*Reader","parameters":[],"comments":["ColumnTypes return Column types in form of a slice, 'array', of []*ColumnType values"],"result":[]},"Columns":{"type":"func","owner":"*Reader","parameters":[],"comments":["Columns return Column names in form of a slice, 'array', of string values"],"result":[]},"Data":{"type":"func","owner":"*Reader","parameters":[],"comments":["Data return Displayable data in the form of a slice, 'array', of interface{} values"],"result":[]},"DataMap":{"type":"func","owner":"*Reader","parameters":[],"comments":["DataMap return Displayable data in the form of a map[string]interface{} column and values"],"result":[]},"DATAJSONFPrintln":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{"err":"error"}]},"DATAJSONFPrint":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{"err":"error"}]},"IsFocused":{"type":"func","owner":"*Reader","parameters":[],"comments":["IsFocused - indicate if Reader focus is on a record"],"result":[]},"IsMore":{"type":"func","owner":"*Reader","parameters":[],"comments":["IsMore - indicate if Reader is able to more records"],"result":[]},"IsLast":{"type":"func","owner":"*Reader","parameters":[],"comments":["IsLast - indicate if Reader focus is on last record"],"result":[]},"IsFirst":{"type":"func","owner":"*Reader","parameters":[],"comments":["IsFirst - indicate if Reader focus is on first record"],"result":[]},"internNext":{"type":"func","owner":"*Reader","parameters":[],"comments":[],"result":[]},"Next":{"type":"func","owner":"*Reader","parameters":[],"comments":[" or false if the end is reached","Next return true if able to move focus of Reader to the next underlying record"],"result":[]},"ToJSON":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"comments":["ToJSON write *Reader out to json"],"result":[{"err":"error"}]},"JSON":{"type":"func","owner":"*Reader","parameters":[],"comments":["JSON readall *Readee and return json as string"],"result":[]},"Close":{"type":"func","owner":"*Reader","parameters":[],"comments":["After this action the Reader is 'empty' or cleaned up in a golang world","Close the Reader as well as the underlying Executor related to this Reader"],"result":[]},"Repeat":{"type":"func","owner":"*Reader","parameters":[{"a":"...interface{}"}],"comments":["Repeat - repeat last query by repopulating parameters but dont regenerate last statement"],"result":[{"err":"error"}]},"execute":{"type":"func","owner":"*Reader","parameters":[],"comments":[],"result":[]}}},"populateRecordData":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"}],"comments":[],"result":[{"err":"error"}]},"cleanupStringData":{"type":"func","owner":"","parameters":[{"str":"string"}],"comments":[],"result":[{"strcleaned":"string"}]},"castSQLTypeValue":{"type":"func","owner":"","parameters":[{"valToCast":"interface{}"},{"colType":"*ColumnType"}],"comments":[],"result":[{"castedVal":"interface{}"}]},"ColumnTypeHandle":{"type":"type","base":"interface","base-types":[],"fields":{"Name()":"string","Numeric()":"bool","HasNullable()":"bool","HasLength()":"bool","HasPrecisionScale()":"bool","Nullable()":"bool","Length()":"int64","DatabaseType()":"string","Precision()":"int64","Scale()":"int64","Type()":"reflect.Type"},"comments":["ColumnTypeHandle interface defining column type api"]},"ColumnType":{"type":"type","base":"struct","base-types":[],"fields":{"name":"string","hasNullable":"bool","hasLength":"bool","hasPrecisionScale":"bool","nullable":"bool","length":"int64","databaseType":"string","precision":"int64","scale":"int64","scanType":"reflect.Type"},"comments":["ColumnType structure defining column definition"],"_":{"Name":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Name ColumnType.Name()"],"result":[]},"Numeric":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Numeric ColumnType is Numeric() bool"],"result":[]},"HasNullable":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["HasNullable ColumnType content has NULL able content"],"result":[]},"HasLength":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["HasLength ColumnType content has Length definition"],"result":[]},"HasPrecisionScale":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["HasPrecisionScale ColumnType content has PrecisionScale"],"result":[]},"Nullable":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Nullable ColumnType content is Nullable"],"result":[]},"Length":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Length ColumnType content lenth must be used in conjunction with HasLength"],"result":[]},"DatabaseType":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["DatabaseType ColumnType underlying db type as defined by driver of Connection"],"result":[]},"Precision":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Precision ColumnType numeric Precision. Used in conjunction with HasPrecisionScale"],"result":[]},"Scale":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Scale ColumnType Scale. Used in conjunction with HasPrecisionScale"],"result":[]},"Type":{"type":"func","owner":"*ColumnType","parameters":[],"comments":["Type ColumnType reflect.Type as specified by golang sql/database"],"result":[]}}},"Field":{"type":"type","base":"struct","base-types":[],"fields":{"rdr":"*Reader","index":"int"},"comments":["Field - struct"],"_":{"Value":{"type":"func","owner":"*Field","parameters":[],"comments":["Value - of Field"],"result":[]},"Name":{"type":"func","owner":"*Field","parameters":[],"comments":["Name - of Field"],"result":[]},"Type":{"type":"func","owner":"*Field","parameters":[],"comments":["Type - ColumnType of Field"],"result":[]}}},"newReader":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"}],"comments":[],"result":[{"rdr":"*Reader"}]},"invokeDataValid":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"ondatavalid":"interface{}"},{"rownr":"int64"},{"rdr":"*Reader"}],"comments":[],"result":[{"validdata":"bool"}]},"invokeRow":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onrow":"interface{}"},{"rownr":"int64"},{"rdr":"*Reader"}],"comments":[],"result":[{"nextrow":"bool"}]},"invokeColumns":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"oncolumns":"interface{}"},{"rdr":"*Reader"}],"comments":[],"result":[{}]},"columnTypes":{"type":"func","owner":"","parameters":[{"sqlcoltypes":"[]*sql.ColumnType"},{"cls":"[]string"}],"comments":[],"result":[{"coltypes":"[]*ColumnType"}]},"Statement":{"type":"type","base":"struct","base-types":[],"fields":{"cn":"*Connection"},"comments":["Statement - struct"]}},"db2":{"_":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"comments":["Open -wrap sql.Open(\"mysql\", datasource)"],"result":[{},{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"mysql":{"_":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"comments":["Open -wrap sql.Open(\"mysql\", datasource)"],"result":[{},{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"ora":{"_":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"comments":["Open -wrap sql.Open(\"oracle\", datasource)"],"result":[{},{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"postgres":{"_":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"comments":["Open -wrap sql.Open(\"pgx\", datasource)"],"result":[{},{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"sqlserver":{"_":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"comments":["Open -wrap sql.Open(\"sqlserver\", datasource)"],"result":[{},{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}}},"enumeration":{"_":{"Chain":{"type":"type","base":"struct","base-types":[],"fields":{"head":"*Link","tale":"*Link","reversemap":"map[*Link]*Link","forwardmap":"map[*Link]*Link","DoLink":"func(*Link) (bool, error)","DoneLink":"func(*Link) error","ErrorDoneLink":"func(*Link, error) bool","ErrorDoLink":"func(*Link, error) bool"},"comments":["Chain struct"],"_":{"newLink":{"type":"func","owner":"*Chain","parameters":[{"value":"interface{}"},{"settings":"...map[string]interface{}"}],"comments":[],"result":[{"lnk":"*Link"}]},"Add":{"type":"func","owner":"*Chain","parameters":[{"value":"interface{}"},{"settings":"...map[string]interface{}"}],"comments":["Add value interface{} and return *Link in *Chain that represents value interface{}"],"result":[{"lnk":"*Link"}]},"InsertBefore":{"type":"func","owner":"*Chain","parameters":[{"settings":"map[string]interface{}"},{"lnk":"*Link"},{"values":"...interface{}"}],"comments":["InsertBefore insert values ...interface{} before lnk*Link"],"result":[{}]},"InsertAfter":{"type":"func","owner":"*Chain","parameters":[{"settings":"map[string]interface{}"},{"lnk":"*Link"},{"values":"...interface{}"}],"comments":["InsertAfter insert values ...interface{} after lnk*Link"],"result":[{}]},"Remove":{"type":"func","owner":"*Chain","parameters":[{"link":"...*Link"}],"comments":["Remove ...*Link from *Chain - note *Link is also disposed"],"result":[{"rmvd":"bool"}]},"Back":{"type":"func","owner":"*Chain","parameters":[],"comments":["Back of chain"],"result":[]},"Front":{"type":"func","owner":"*Chain","parameters":[],"comments":["Front of chain"],"result":[]},"Size":{"type":"func","owner":"*Chain","parameters":[],"comments":["Size of chain"],"result":[]},"Do":{"type":"func","owner":"*Chain","parameters":[{"dolnk":"FuncDoLink"},{"errdolnk":"FuncErrorDoLink"},{"donelnk":"FuncDoneLink"},{"errdonelnk":"FuncErrorDoneLink"}],"comments":[" iterate until end or dolnk return true or error","Do dolnk (func(*Link) (boolm,error)) iterate over *Chain"],"result":[{"diddo":"bool"}]}}},"NewChain":{"type":"func","owner":"","parameters":[{"settings":"...map[string]interface{}"}],"comments":["NewChain isntance"],"result":[{"chn":"*Chain"}]},"Link":{"type":"type","base":"struct","base-types":[],"fields":{"chn":"*Chain","value":"interface{}","done":"bool","DoLink":"func(*Link) (bool, error)","DoneLink":"func(*Link) error","ErrorDoneLink":"func(*Link, error) bool","ErrorDoLink":"func(*Link, error) bool","Removed":"func(*Link)"},"comments":["Link struct"],"_":{"Done":{"type":"func","owner":"*Link","parameters":[],"comments":["Done  set lnk.done to true"],"result":[]},"Value":{"type":"func","owner":"*Link","parameters":[],"comments":["Value of *Link"],"result":[]},"Next":{"type":"func","owner":"*Link","parameters":[],"comments":["Next *Link"],"result":[]},"NextValue":{"type":"func","owner":"*Link","parameters":[],"comments":["NextValue *Link value interface{}"],"result":[]},"Prev":{"type":"func","owner":"*Link","parameters":[],"comments":["Prev *Link"],"result":[]},"PrevValue":{"type":"func","owner":"*Link","parameters":[],"comments":["PrevValue *Link value interface{}"],"result":[]}}},"insert":{"type":"func","owner":"","parameters":[{"cm":"chainmode"},{"chn":"*Chain"},{"lnk":"*Link"},{"slnks":"...*Link"}],"comments":[],"result":[{}]},"Node":{"type":"type","base":"struct","base-types":[],"fields":{"lst":"*List","val":"interface{}"},"comments":[],"_":{"Value":{"type":"func","owner":"*Node","parameters":[],"comments":[],"result":[]},"Next":{"type":"func","owner":"*Node","parameters":[],"comments":[],"result":[]},"Previous":{"type":"func","owner":"*Node","parameters":[],"comments":[],"result":[]},"InsertAfter":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"InsertBefore":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Set":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"forceset":"...bool"}],"comments":[],"result":[{}]},"Dispose":{"type":"func","owner":"*Node","parameters":[{"eventRemoved":"func(nde *Node"},{"val":"interface{}"}],"comments":[],"result":[{},{"disposingRemoving":"func(nde *Node"},{"val":"interface{}))"}]}}},"List":{"type":"type","base":"struct","base-types":[],"fields":{"head":"*Node","tail":"*Node","vnds":"map[interface{}]*Node","reversemap":"map[*Node]*Node","forwardmap":"map[*Node]*Node","distinct":"bool"},"comments":[],"_":{"Head":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"Tail":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"IsDistinct":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"newNode":{"type":"func","owner":"*List","parameters":[{"val":"interface{}"}],"comments":[],"result":[{"nde":"*Node"}]},"Length":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"ValueNode":{"type":"func","owner":"*List","parameters":[{"val":"interface{}"}],"comments":[],"result":[{"nde":"*Node"}]},"Dispose":{"type":"func","owner":"*List","parameters":[{"eventRemoving":"func(*Node"},{}],"comments":[],"result":[{},{"eventDisposing":"func(*Node"},{}]},"Push":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"comments":[],"result":[{},{"mdfied":"func(bool"},{},{},{},{},{"val":"...interface{}) int"}]},"Shift":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"comments":[],"result":[{},{"mdfied":"func(bool"},{},{},{},{},{"val":"...interface{}) int"}]},"Pop":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"Unshift":{"type":"func","owner":"*List","parameters":[],"comments":[],"result":[]},"InsertBefore":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"comments":[],"result":[{},{"mdfied":"func(bool"},{},{},{},{},{"ndefrm":"*Node"},{"val":"...interface{})"}]},"InsertAfter":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"comments":[],"result":[{},{"mdfied":"func(bool"},{},{},{},{},{"ndefrm":"*Node"},{"val":"...interface{})"}]}}},"NewList":{"type":"func","owner":"","parameters":[{"distinct":"...bool"}],"comments":[],"result":[{"lst":"*List"}]},"previousNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"}],"comments":[],"result":[{"prvnde":"*Node"}]},"nextNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"}],"comments":[],"result":[{"nxtnde":"*Node"}]},"disposeNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"},{"eventRemoved":"func(*Node"},{}],"comments":[],"result":[{},{"eventDisposing":"func(*Node"},{}]},"internalInput":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"modifying":"func(value interface{}"}],"comments":[],"result":[{},{"modified":"func(changed bool"},{"validval":"bool"},{"vindex":"int"},{"node":"*Node"},{"value":"interface{})"},{"ndefrm":"*Node"},{"action":"listaction"},{"val":"...interface{})"}]}}},"env":{"_":{"ShutdownEnvironment":{"type":"func","owner":"","parameters":[],"comments":["ShutdownEnvironment - cleanup (shutdown) environment"],"result":[]},"WrapupCall":{"type":"func","owner":"","parameters":[{"wrpupcall":"...func("}],"comments":["WrapupCall - set WrapupCall"],"result":[{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"fsutils":{"_":{"LS":{"type":"func","owner":"","parameters":[{"path":"string"},{"altpath":"...string"}],"comments":["LS List dir content"],"result":[{"finfos":"[]FileInfo"},{"err":"error"}]},"internalFind":{"type":"func","owner":"","parameters":[{"fi":"os.FileInfo"},{"rootpath":"string"},{"altrootpath":"string"}],"comments":[],"result":[{"finfos":"[]os.FileInfo"},{"fipath":"string"},{"fialtpath":"string"},{"err":"error"}]},"FileInfo":{"type":"type","base":"interface","base-types":[],"fields":{"Name()":"string","Path()":"string","AbsolutePath()":"string","Size()":"int64","Mode()":"os.FileMode","ModTime()":"time.Time","IsDir()":"bool","JSON()":"string"},"comments":[" A FileInfo describes a file"]},"fileInfo":{"type":"type","base":"struct","base-types":[],"fields":{"name":"string","path":"string","absolutepath":"string","size":"int64","mode":"os.FileMode","modtime":"time.Time"},"comments":[],"_":{"Name":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"Path":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"AbsolutePath":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"Size":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"Mode":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"ModTime":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"IsDir":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]},"JSON":{"type":"func","owner":"*fileInfo","parameters":[],"comments":[],"result":[]}}},"FIND":{"type":"func","owner":"","parameters":[{"path":"string"},{"altpath":"...string"}],"comments":["FIND list recursive dir content"],"result":[{"finfos":"[]FileInfo"},{"err":"error"}]},"MKDIR":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["MKDIR make directory"],"result":[{}]},"MKDIRALL":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["MKDIRALL make directory with all necessary parents"],"result":[{}]},"RM":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["RM Remove file or directory recursive"],"result":[{"err":"error"}]},"MV":{"type":"func","owner":"","parameters":[{"path":"string"},{"destpath":"string"}],"comments":["MV Move file or directory"],"result":[{"err":"error"}]},"TOUCH":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":[" if the file already exists then update the modified time of the file","TOUCH Create an empty file if the file doesn’t already exist or"],"result":[{"err":"error"}]},"CAT":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["CAT return file content if file exists else empty string"],"result":[{"r":"io.Reader"},{"err":"error"}]},"CATS":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["CATS return file content if file exists else empty string"],"result":[{"cntnt":"string"},{"err":"error"}]},"PIPE":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["PIPE return file content if file exists else empty string"],"result":[{"r":"io.Reader"},{"err":"error"}]},"PIPES":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":["PIPES return file content if file exists else empty string"],"result":[{"cntnt":"string"},{"err":"error"}]},"SET":{"type":"func","owner":"","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":["SET if file exists replace content else create file and append content"],"result":[{"err":"error"}]},"APPEND":{"type":"func","owner":"","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":["APPEND if file exists append content else create file and append content"],"result":[{"err":"error"}]},"FINFOPATHSJSON":{"type":"func","owner":"","parameters":[{"a":"...FileInfo"}],"comments":["FINFOPATHSJSON []FileInfo to JSON array"],"result":[{"s":"string"}]},"FSUtils":{"type":"type","base":"struct","base-types":[],"fields":{"LS":"func(path ...string) (finfos []FileInfo) `json:\"ls\"`","FIND":"func(path ...string) (finfos []FileInfo) `json:\"find\"`","MKDIR":"func(path ...interface{}) bool `json:\"mkdir\"`","MKDIRALL":"func(path ...interface{}) bool `json:\"mkdirall\"`","RM":"func(path string) bool `json:\"rm\"`","MV":"func(path string, destpath string) bool `json:\"mv\"`","TOUCH":"func(path string) bool `json:\"touch\"`","FINFOPATHSJSON":"func(a ...FileInfo) (s string) `json:\"finfopathsjson\"`","PIPE":"func(path string) (r io.Reader) `json:\"pipe\"`","PIPES":"func(path string) (s string) `json:\"pipes\"`","CAT":"func(path string) (r io.Reader) `json:\"cat\"`","CATS":"func(path string) (s string) `json:\"cats\"`","SET":"func(path string, a ...interface{}) bool `json:\"set\"`","APPEND":"func(path string, a ...interface{}) bool `json:\"append\"`","DUMMYFINFO":"func(name string, path string, absolutepath string, size int64, mod os.FileMode, modtime time.Time) FileInfo `json:\"dummyfino\"`"},"comments":["FSUtils struct"]},"NewFSUtils":{"type":"func","owner":"","parameters":[],"comments":["NewFSUtils return instance of FSUtils"],"result":[]}}},"iorw":{"_":{"Printer":{"type":"type","base":"interface","base-types":[],"fields":{"Print(a":"...interface{})","Println(a":"...interface{})","Write(p":"[]byte) (int, error)"},"comments":["Printer - interface"]},"Reader":{"type":"type","base":"interface","base-types":[],"fields":{"Read([]byte)":"(int, error)","ReadRune()":"(rune, int, error)","Readln()":"(string, error)","Readlines()":"([]string, error)","ReadAll()":"(string, error)"},"comments":["Reader - interface"]},"PrinterReader":{"type":"type","base":"interface","base-types":["Printer","Reader"],"fields":{},"comments":["PrinterReader - interface"]},"Fprint":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"comments":["Fprint - refer to fmt.Fprint"],"result":[{}]},"Fprintln":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"comments":["Fprintln - refer to fmt.Fprintln"],"result":[{}]},"ReadLines":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"comments":["ReadLines from r io.Reader as lines []string"],"result":[{"lines":"[]string"},{"err":"error"}]},"ReadLine":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"comments":["ReadLine from r io.Reader as s string"],"result":[{"s":"string"},{"err":"error"}]},"ReaderToString":{"type":"func","owner":"","parameters":[{"r":"interface{}"}],"comments":["ReaderToString read reader and return content as string"],"result":[{"s":"string"},{"err":"error"}]},"ReadRunesEOFFunc":{"type":"func","owner":"","parameters":[{"r":"interface{}"},{"fncrne":"func(rune"}],"comments":["ReadRunesEOFFunc read runes from r io.Reader and call fncrne func(rune) error"],"result":[{"error)":"(err error)"}]},"RunesToUTF8":{"type":"func","owner":"","parameters":[{"rs":"[]rune"}],"comments":[],"result":[{}]},"Buffer":{"type":"type","base":"struct","base-types":[],"fields":{"buffer":"[][]byte","bytes":"[]byte","bytesi":"int","lck":"*sync.RWMutex","bufrs":"map[*BuffReader]*BuffReader","OnClose":"func(*Buffer)"},"comments":["Buffer -"],"_":{"BuffersLen":{"type":"func","owner":"*Buffer","parameters":[],"comments":["BuffersLen - return len() of internal byte[][] buffer"],"result":[]},"Clone":{"type":"func","owner":"*Buffer","parameters":[],"comments":["Clone - return *Buffer clone"],"result":[]},"Print":{"type":"func","owner":"*Buffer","parameters":[{"a":"...interface{}"}],"comments":["Print - same as fmt.Print just on buffer"],"result":[{}]},"Println":{"type":"func","owner":"*Buffer","parameters":[{"a":"...interface{}"}],"comments":["Println - same as fmt.Println just on buffer"],"result":[{}]},"SubString":{"type":"func","owner":"*Buffer","parameters":[{"offset":"...int64"}],"comments":["SubString - return buffer as string value based on offset ...int64"],"result":[{"s":"string"}]},"String":{"type":"func","owner":"*Buffer","parameters":[],"comments":["String - return buffer as string value"],"result":[]},"Size":{"type":"func","owner":"*Buffer","parameters":[],"comments":["Size - total size of Buffer"],"result":[]},"ReadFrom":{"type":"func","owner":"*Buffer","parameters":[{"r":"io.Reader"}],"comments":["ReadFrom - fere io.ReaderFrom"],"result":[{"n":"int64"},{"err":"error"}]},"WriteRune":{"type":"func","owner":"*Buffer","parameters":[{"r":"rune"}],"comments":["WriteRune - Write singe rune"],"result":[{"err":"error"}]},"WriteRunes":{"type":"func","owner":"*Buffer","parameters":[{"p":"...rune"}],"comments":["WriteRunes - Write runes"],"result":[{"err":"error"}]},"Write":{"type":"func","owner":"*Buffer","parameters":[{"p":"[]byte"}],"comments":["Write - refer io.Writer"],"result":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*Buffer","parameters":[],"comments":["Close - refer io.Closer"],"result":[]},"Clear":{"type":"func","owner":"*Buffer","parameters":[],"comments":["Clear - Buffer"],"result":[]}}},"NewBuffer":{"type":"func","owner":"","parameters":[],"comments":["NewBuffer -"],"result":[]},"BuffReader":{"type":"type","base":"struct","base-types":[],"fields":{"buffer":"*Buffer","rnr":"*bufio.Reader","MaxRead":"int64","roffset":"int64","rbufferi":"int","rbytes":"[]byte","rbytesi":"int"},"comments":["BuffReader -"],"_":{"WriteTo":{"type":"func","owner":"*BuffReader","parameters":[{"w":"io.Writer"}],"comments":["WriteTo - helper for io.Copy"],"result":[{"n":"int64"},{"err":"error"}]},"Close":{"type":"func","owner":"*BuffReader","parameters":[],"comments":["Close - refer io.Closer"],"result":[]},"RuneAt":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"int64"}],"comments":["RuneAt - rune at offset int64"],"result":[{"rn":"rune"}]},"LastIndex":{"type":"func","owner":"*BuffReader","parameters":[{"s":"string"},{"offset":"...int64"}],"comments":["LastIndex - Last index of s string - n int64"],"result":[{}]},"LastByteIndexWithinOffsets":{"type":"func","owner":"*BuffReader","parameters":[{},{"endoffset":"int64"},{"bs":"...byte"}],"comments":["LastByteIndexWithinOffsets - Last index of bs byte... - n int64 within startoffset and endoffset"],"result":[{"index":"int64"}]},"Index":{"type":"func","owner":"*BuffReader","parameters":[{"s":"string"}],"comments":["Index - Index of s string - n int64"],"result":[{}]},"ByteIndex":{"type":"func","owner":"*BuffReader","parameters":[{"bs":"...byte"}],"comments":["ByteIndex - Index of bs ...byte - n int64"],"result":[{"index":"int64"}]},"Read":{"type":"func","owner":"*BuffReader","parameters":[{"p":"[]byte"}],"comments":["Read - refer io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"SubString":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"...int64"}],"comments":["SubString - return buffer as string value based on offset ...int64"],"result":[{"s":"string"}]},"ReadRune":{"type":"func","owner":"*BuffReader","parameters":[],"comments":["ReadRune - refer io.RuneReader"],"result":[]},"Readln":{"type":"func","owner":"*BuffReader","parameters":[],"comments":[],"result":[]},"Readlines":{"type":"func","owner":"*BuffReader","parameters":[],"comments":[],"result":[]},"ReadAll":{"type":"func","owner":"*BuffReader","parameters":[],"comments":[],"result":[]},"Seek":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"int64"},{"whence":"int"}],"comments":["Seek - refer to io.Seeker","\tReadAll() (string, error)","\tReadlines() ([]string, error)","\tReadln() (string, error)"],"result":[{"n":"int64"},{"err":"error"}]}}},"CachingReader":{"type":"type","base":"struct","base-types":[],"fields":{"refr":"io.Reader","refs":"io.Seeker","refc":"io.Closer","rnr":"io.RuneReader","buffer":"*Buffer","maxbuffersize":"int64","choffset":"int64","bufr":"*BuffReader"},"comments":["CachingReader - struct"],"_":{"Read":{"type":"func","owner":"*CachingReader","parameters":[{"p":"[]byte"}],"comments":["Read - refer io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*CachingReader","parameters":[],"comments":["ReadRune - refer io.RuneReader"],"result":[]},"Close":{"type":"func","owner":"*CachingReader","parameters":[],"comments":["Close - refer io.Closer"],"result":[]},"WriteTo":{"type":"func","owner":"*CachingReader","parameters":[{"w":"io.Writer"}],"comments":["WriteTo - helper for io.Copy"],"result":[{"n":"int64"},{"err":"error"}]},"Seek":{"type":"func","owner":"*CachingReader","parameters":[{"offset":"int64"},{"whence":"int"}],"comments":["Seek - refer to io.Seeker"],"result":[{"n":"int64"},{"err":"error"}]}}},"NewCachingReader":{"type":"func","owner":"","parameters":[{"r":"io.Reader"},{"maxbuffersize":"int64"}],"comments":["NewCachingReader - instance"],"result":[{"chngrdr":"*CachingReader"}]},"EOFCloseSeekReader":{"type":"type","base":"struct","base-types":[],"fields":{"r":"io.Reader","rc":"io.Closer","rs":"io.Seeker","size":"int64","bfr":"*bufio.Reader","canclose":"bool"},"comments":[],"_":{"ReadRune":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"Readln":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"Readlines":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"ReadAll":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"Size":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"Seek":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[{"offset":"int64"},{"whence":"int"}],"comments":[],"result":[{"n":"int64"},{"err":"error"}]},"Read":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"disposeReader":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]},"Close":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"comments":[],"result":[]}}},"NewEOFCloseSeekReader":{"type":"func","owner":"","parameters":[{"r":"io.Reader"},{"canclose":"...bool"}],"comments":[],"result":[{"eofclsr":"*EOFCloseSeekReader"}]}},"active":{"_":{"Active":{"type":"type","base":"struct","base-types":["*atvruntime"],"fields":{"Namespace":"string","Print":"func(a ...interface{})","Println":"func(a ...interface{})","FPrint":"func(w io.Writer, a ...interface{})","FPrintLn":"func(w io.Writer, a ...interface{})","Readln":"func() (string, error)","ReadLines":"func() ([]string, error)","ReadAll":"func() (string, error)","FReadln":"func(r io.Reader) (string, error)","FReadLines":"func(r io.Reader) ([]string, error)","FReadAll":"func(r io.Reader) (string, error)","LookupTemplate":"func(string, ...interface{}) (io.Reader, error)","ObjectMapRef":"func() map[string]interface{}","lckprnt":"*sync.Mutex","InterruptVM":"func(v interface{})"},"comments":["Active - struct"],"_":{"InvokeFunction":{"type":"func","owner":"*Active","parameters":[{"functocall":"interface{}"},{"args":"...interface{}"}],"comments":["InvokeFunction ivoke *Acive.actvruntime function"],"result":[{"result":"interface{}"}]},"ExtractGlobals":{"type":"func","owner":"*Active","parameters":[{"extrglbs":"map[string]interface{}"}],"comments":["ExtractGlobals extract globals from atv.atvruntime"],"result":[{}]},"ImportGlobals":{"type":"func","owner":"*Active","parameters":[{"imprtglbs":"map[string]interface{}"}],"comments":["ImportGlobals import globals into atv.atvruntime"],"result":[{}]},"namespace":{"type":"func","owner":"*Active","parameters":[],"comments":[],"result":[]},"print":{"type":"func","owner":"*Active","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"println":{"type":"func","owner":"*Active","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"readln":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"comments":[],"result":[{"ln":"string"},{"err":"error"}]},"readlines":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"comments":[],"result":[{"lines":"[]string"},{"err":"error"}]},"readAll":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"comments":[],"result":[{"s":"string"},{"err":"error"}]},"InvokeVM":{"type":"func","owner":"*Active","parameters":[{"callback":"func(vm *goja.Runtime"}],"comments":["InvokeVM invoke vm"],"result":[{}]},"vm":{"type":"func","owner":"*Active","parameters":[],"comments":[],"result":[]},"atvrun":{"type":"func","owner":"*Active","parameters":[{"prsng":"*parsing"}],"comments":[],"result":[{"err":"error"}]},"Eval":{"type":"func","owner":"*Active","parameters":[{"wout":"io.Writer"},{"rin":"io.Reader"},{"initpath":"string"},{"a":"...interface{}"}],"comments":["Eval - parse a ...interface{} arguments, execute if neaded and output to wou io.Writer"],"result":[{"err":"error"}]},"Close":{"type":"func","owner":"*Active","parameters":[],"comments":["Close - refer to  io.Closer"],"result":[]},"Interrupt":{"type":"func","owner":"*Active","parameters":[],"comments":["Interrupt - Active processing"],"result":[]}}},"NewActive":{"type":"func","owner":"","parameters":[{"namespace":"...string"}],"comments":["NewActive - instance"],"result":[{"atv":"*Active"}]},"CodeException":{"type":"type","base":"struct","base-types":[],"fields":{"cde":"string","err":"error","execpath":"string"},"comments":[],"_":{"Error":{"type":"func","owner":"*CodeException","parameters":[],"comments":[],"result":[]}}},"codeException":{"type":"func","owner":"","parameters":[{"cde":"string"},{"execpath":"string"},{"err":"error"}],"comments":[],"result":[{"cdeerr":"*CodeException"}]},"parsing":{"type":"type","base":"struct","base-types":["*iorw.Buffer"],"fields":{"rnrdrsbeingparsed":"*enumeration.List","crntrnrdrbeingparsed":"io.RuneReader","tmpltbuf":"*iorw.Buffer","tmpltmap":"map[string][]int64","atv":"*Active","wout":"io.Writer","rin":"io.Reader","prntrs":"[]io.Writer","rdrs":"[]io.Reader","prslbli":"[]int","prslblprv":"[]rune","prntprsng":"*parsing","foundcde":"bool","hascde":"bool","cdetxt":"rune","cdebuf":"*iorw.Buffer","cdeoffsetstart":"int64","cdeoffsetend":"int64","cdemap":"map[int][]int64","cder":"[]rune","cderi":"int","psvoffsetstart":"int64","psvoffsetend":"int64","psvmap":"map[int][]int64","psvr":"[]rune","psvri":"int","tmpbuf":"*iorw.Buffer","elmlbli":"[]int","elmoffset":"int","elmprvrns":"[]rune","prvelmrn":"rune","crntpsvsctn":"*psvsection","headpsvsctn":"*psvsection","tailpsvsctn":"*psvsection","prsvpth":"string"},"comments":[],"_":{"tempbuf":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"cdeBuff":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"tmpltBuf":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"tmpltMap":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"tmpltrdr":{"type":"func","owner":"*parsing","parameters":[{"tmpltnme":"string"}],"comments":[],"result":[{"rdr":"*iorw.BuffReader"},{"mxlen":"int64"}]},"print":{"type":"func","owner":"*parsing","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"println":{"type":"func","owner":"*parsing","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"incprint":{"type":"func","owner":"*parsing","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{}]},"resetprint":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"decprint":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"readLn":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"readLines":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"readAll":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"incread":{"type":"func","owner":"*parsing","parameters":[{"r":"io.Reader"}],"comments":[],"result":[{}]},"resetread":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"decread":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"dispose":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"topprsng":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"setcdepos":{"type":"func","owner":"*parsing","parameters":[{"startoffset":"int64"},{"endoffset":"int64"}],"comments":[],"result":[{}]},"setpsvpos":{"type":"func","owner":"*parsing","parameters":[{"startoffset":"int64"},{"endoffset":"int64"}],"comments":[],"result":[{"pos":"int"}]},"writePsv":{"type":"func","owner":"*parsing","parameters":[{"p":"...rune"}],"comments":[],"result":[{"err":"error"}]},"writeCde":{"type":"func","owner":"*parsing","parameters":[{"p":"[]rune"}],"comments":[],"result":[{"err":"error"}]},"foundCode":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"flushPsv":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"flushCde":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]},"ReadRune":{"type":"func","owner":"*parsing","parameters":[],"comments":[],"result":[]}}},"parsepsvrunes":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"p":"[]rune"}],"comments":[],"result":[{"err":"error"}]},"parseatvrunes":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"p":"[]rune"}],"comments":[],"result":[{"err":"error"}]},"loadRuneReaders":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"parseprsng":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"canexec":"bool"},{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"parseprsngrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"prslbli":"[]int"},{"prslblprv":"[]rune"},{"pr":"rune"}],"comments":[],"result":[{"err":"error"}]},"nextparsing":{"type":"func","owner":"","parameters":[{"atv":"*Active"},{"prntprsng":"*parsing"},{"rin":"io.Reader"},{"wout":"io.Writer"},{"initpath":"string"}],"comments":[],"result":[{"prsng":"*parsing"}]},"atvruntime":{"type":"type","base":"struct","base-types":[],"fields":{"prsng":"*parsing","atv":"*Active","vm":"*goja.Runtime","intrnbuffs":"map[*iorw.Buffer]*iorw.Buffer","includedpgrms":"map[string]*goja.Program","rntmeche":"map[int]map[string]interface{}"},"comments":[],"_":{"decrntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"comments":[],"result":[]},"incrntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"comments":[],"result":[]},"rntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"comments":[],"result":[]},"InvokeFunction":{"type":"func","owner":"*atvruntime","parameters":[{"functocall":"interface{}"},{"args":"...interface{}"}],"comments":[],"result":[{"result":"interface{}"}]},"run":{"type":"func","owner":"*atvruntime","parameters":[],"comments":[],"result":[]},"corerun":{"type":"func","owner":"*atvruntime","parameters":[{"code":"string"},{"objmapref":"map[string]interface{}"},{"includelibs":"...string"}],"comments":[],"result":[{"val":"interface{}"},{"err":"error"}]},"parseEval":{"type":"func","owner":"*atvruntime","parameters":[{"forceCode":"bool"},{"a":"...interface{}"}],"comments":[],"result":[{"val":"interface{}"},{"err":"error"}]},"removeBuffer":{"type":"func","owner":"*atvruntime","parameters":[{"buff":"*iorw.Buffer"}],"comments":[],"result":[{}]},"code":{"type":"func","owner":"*atvruntime","parameters":[{"coords":"...int64"}],"comments":[],"result":[{"c":"string"}]},"passiveout":{"type":"func","owner":"*atvruntime","parameters":[{"i":"int"}],"comments":[],"result":[{}]},"dispose":{"type":"func","owner":"*atvruntime","parameters":[],"comments":[],"result":[]}}},"transformCode":{"type":"func","owner":"","parameters":[{"code":"string"},{"namespace":"string"},{"opts":"map[string]interface{}"}],"comments":[],"result":[{"trsnfrmdcde":"string"},{"isrequired":"bool"},{"err":"error"}]},"defaultAtvRuntimeInternMap":{"type":"func","owner":"","parameters":[{"atvrntme":"*atvruntime"}],"comments":[],"result":[{"internmapref":"map[string]interface{}"}]},"atvruntimeFinalize":{"type":"func","owner":"","parameters":[{"atvrntme":"*atvruntime"}],"comments":[],"result":[{}]},"newatvruntime":{"type":"func","owner":"","parameters":[{"atv":"*Active"},{"parsing":"*parsing"}],"comments":[],"result":[{"atvrntme":"*atvruntime"},{"err":"error"}]},"init":{"type":"func","owner":"","parameters":[],"comments":["var GlobelModules map[string]*"],"result":[]},"parsepsvrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"rn":"rune"}],"comments":[],"result":[{"err":"error"}]},"parsepsvphrase":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"psvsctn":"*psvsection"},{"phrslbli":"[]int"},{"rn":"rune"}],"comments":[],"result":[{"err":"error"}]},"parseelmpsvrrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmoffset":"int"},{"elmlbli":"[]int"},{"elmprvrns":"[]rune"},{"rn":"rune"}],"comments":[],"result":[{"err":"error"}]},"validElemParsing":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmoffset":"int"},{"crntpsvsctn":"*psvsection"}],"comments":[],"result":[{"valid":"bool"},{"elmTpe":"elemtype"},{"psvsctn":"*psvsection"},{"err":"error"}]},"psvsection":{"type":"type","base":"struct","base-types":[],"fields":{"prsng":"*parsing","elmtpe":"elemtype","tmpbuf":"*iorw.Buffer","prvsctn":"*psvsection","nxtsctn":"*psvsection","chcdbf":"*iorw.Buffer","phrsbuf":"*iorw.Buffer","phrstmpltbuf":"*iorw.Buffer","phrsmap":"map[string][]int64","canphrs":"bool","phrslbli":"[]int","phrsprvrn":"rune","tmpltpath":"string","tmpstrti":"int64","tmpendi":"int16"},"comments":[],"_":{"dispose":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]},"PhraseBuf":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]},"PhraseTemplateBuf":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]},"path":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]},"Elemtype":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]},"CachedBuf":{"type":"func","owner":"*psvsection","parameters":[],"comments":[],"result":[]}}},"removePsvSection":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"psvsctn":"*psvsection"}],"comments":[],"result":[{}]},"newPsvSection":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmtpe":"elemtype"},{"tmpbuf":"*iorw.Buffer"},{"crntsctn":"*psvsection"}],"comments":[],"result":[{"psvsctn":"*psvsection"}]},"processPsvSection":{"type":"func","owner":"","parameters":[{"psvsctn":"*psvsection"}],"comments":[],"result":[{"err":"error"}]},"decpsvcsection":{"type":"func","owner":"","parameters":[{"psvsctn":"*psvsection"}],"comments":[],"result":[{}]},"Runtime":{"type":"type","base":"interface","base-types":[],"fields":{"InvokeFunction(interface{},":"...interface{}) interface{}"},"comments":["Runtime - interface"]},"parseatvrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"rn":"rune"}],"comments":[],"result":[{"err":"error"}]}}},"jsonrw":{"_":{"ReaderParser":{"type":"type","base":"struct","base-types":[],"fields":{"rdr":"io.Reader","dcdr":"*json.Decoder","Delim":"json.Delim","IsDelim":"bool","String":"string","IsString":"bool","IsNumber":"bool","Float":"float64","Int":"int64","IsFloat":"bool","IsBool":"bool","Bool":"bool","IsNull":"bool","PrevToken":"json.Token","Token":"json.Token","Depth":"int"},"comments":["ReaderParser - struct"],"_":{"PopulateMap":{"type":"func","owner":"*ReaderParser","parameters":[{"mptopop":"map[string]interface{}"}],"comments":["PopulateMap - populate map[string]interface{}"],"result":[{"err":"error"}]},"PopulateArray":{"type":"func","owner":"*ReaderParser","parameters":[{"arr":"[]interface{}"}],"comments":["PopulateArray - populate []interface{}"],"result":[{"err":"error"}]},"setValueState":{"type":"func","owner":"*ReaderParser","parameters":[],"comments":[],"result":[]},"More":{"type":"func","owner":"*ReaderParser","parameters":[{"jsonevent":"...func(*ReaderParser"},{}],"comments":["More - wrap arround json.Decoder.More"],"result":[{"error)":"(more bool"},{"err":"error)"}]}}},"NewReaderParser":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"comments":["NewReaderParser - JSON Reader Parser"],"result":[{"jsnr":"*ReaderParser"}]}}},"messaging":{"_":{"MessageManager":{"type":"type","base":"struct","base-types":[],"fields":{"messangers":"map[string]*Messanger"},"comments":["MessageManager - struct"],"_":{"Print":{"type":"func","owner":"*MessageManager","parameters":[{"pr":"iorw.PrinterReader"},{"a":"...interface{}"}],"comments":["Print print to"],"result":[{"err":"error"}]}}},"Messanger":{"type":"type","base":"struct","base-types":[],"fields":{"guid":"string","name":"string","prntrdr":"iorw.PrinterReader"},"comments":["Messanger - struct"]}}}},"listen":{"_":{"lstnrserver":{"type":"type","base":"struct","base-types":[],"fields":{"h2s":"*http2.Server","srvr":"*http.Server","addr":"string"},"comments":[],"_":{"startListening":{"type":"func","owner":"*lstnrserver","parameters":[{"lstnr":"*Listener"},{"backlog":"...int"}],"comments":[],"result":[{}]},"stopListening":{"type":"func","owner":"*lstnrserver","parameters":[{"lstnr":"*Listener"}],"comments":[],"result":[{}]}}},"ListnerHandler":{"type":"type","base":"struct","base-types":[],"fields":{"ln":"net.Listener","backlog":"int","backcon":"chan *ConnHandler","backLogStarted":"bool","lck":"*sync.Mutex"},"comments":[],"_":{"Accept":{"type":"func","owner":"*ListnerHandler","parameters":[],"comments":[" Accept waits for and returns the next connection to the listener."],"result":[]},"Close":{"type":"func","owner":"*ListnerHandler","parameters":[],"comments":[" Any blocked Accept operations will be unblocked and return errors."," Close closes the listener."],"result":[]},"Addr":{"type":"func","owner":"*ListnerHandler","parameters":[],"comments":[" Addr returns the listener's network address."],"result":[]}}},"ConnHandler":{"type":"type","base":"struct","base-types":[],"fields":{"con":"*net.TCPConn","maxread":"int64","maxwrite":"int64"},"comments":[],"_":{"Read":{"type":"func","owner":"*ConnHandler","parameters":[{"b":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"Write":{"type":"func","owner":"*ConnHandler","parameters":[{"b":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"Readln":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"Readlines":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"ReadAll":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"Print":{"type":"func","owner":"*ConnHandler","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"Println":{"type":"func","owner":"*ConnHandler","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{}]},"Close":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"LocalAddr":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"RemoteAddr":{"type":"func","owner":"*ConnHandler","parameters":[],"comments":[],"result":[]},"SetDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"comments":[],"result":[{"err":"error"}]},"SetReadDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"comments":[],"result":[{"err":"error"}]},"SetWriteDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"comments":[],"result":[{"err":"error"}]}}},"newConnHandler":{"type":"func","owner":"","parameters":[{"con":"net.Conn"}],"comments":[],"result":[{"cnhdnlr":"*ConnHandler"}]},"contextKey":{"type":"type","base":"struct","base-types":[],"fields":{"key":"string"},"comments":[]},"newlstnrserver":{"type":"func","owner":"","parameters":[{"hndlr":"http.Handler"},{"addr":"string"},{"unencrypted":"bool"}],"comments":[],"result":[{"lstnrsrvr":"*lstnrserver"}]},"Listener":{"type":"type","base":"struct","base-types":[],"fields":{"hndlr":"http.Handler","lstnrservers":"map[string]*lstnrserver","dne":"chan bool"},"comments":["Listener - struct"],"_":{"ServeHTTP":{"type":"func","owner":"*Listener","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"comments":["ServeHTTP - refer http.Handler"],"result":[{}]},"Shutdown":{"type":"func","owner":"*Listener","parameters":[],"comments":["Shutdown - Listener gracefully"],"result":[]},"WaitOnShutdown":{"type":"func","owner":"*Listener","parameters":[],"comments":["WaitOnShutdown - wait on internal done chan to close"],"result":[]},"Listen":{"type":"func","owner":"*Listener","parameters":[{"addr":"string"},{"ish2c":"...bool"}],"comments":["Listen - on addr and indicate if ish2c"],"result":[{}]}}},"NewListener":{"type":"func","owner":"","parameters":[{"hndlr":"http.Handler"}],"comments":["NewListener - instance"],"result":[{"lstnr":"*Listener"}]},"Listening":{"type":"func","owner":"","parameters":[],"comments":["Listening - Global Listening"],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"logging":{"_":{"Log":{"type":"type","base":"struct","base-types":[],"fields":{},"comments":[],"_":{"Write":{"type":"func","owner":"*Log","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"WriteLevel":{"type":"func","owner":"*Log","parameters":[{"level":"zerolog.Level"},{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]}}},"NewLogger":{"type":"func","owner":"","parameters":[{"lg":"*Log"}],"comments":[],"result":[{"lggr":"interface{}"}]}}},"mimes":{"_":{"MimeTypesCSV":{"type":"func","owner":"","parameters":[],"comments":["MimeTypesCSV - return Mime Types CSV reader"],"result":[]},"FindMimeType":{"type":"func","owner":"","parameters":[{"ext":"string"},{"defaulttype":"string"}],"comments":["FindMimeType - ext or defaulttype"],"result":[{"mimetype":"string"},{"texttype":"bool"}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"mqtt":{"_":{"mqttsubscription":{"type":"type","base":"struct","base-types":[],"fields":{"topic":"string","qos":"byte"},"comments":[],"_":{"String":{"type":"func","owner":"*mqttsubscription","parameters":[],"comments":[],"result":[]},"Fprint":{"type":"func","owner":"*mqttsubscription","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{}]}}},"MQTTConnection":{"type":"type","base":"struct","base-types":[],"fields":{"mqttmngr":"*MQTTManager","pahomqtt":"mqtt.Client","connectHandler":"mqtt.OnConnectHandler","messagePubHandler":"mqtt.MessageHandler","connectLostHandler":"mqtt.ConnectionLostHandler","ClientId":"string","broker":"string","port":"int","user":"string","password":"string","autoack":"bool","subscrptns":"map[string]*mqttsubscription","lcksubscrptns":"*sync.RWMutex"},"comments":[],"_":{"Fprint":{"type":"func","owner":"*MQTTConnection","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{}]},"String":{"type":"func","owner":"*MQTTConnection","parameters":[],"comments":[],"result":[]},"IsConnected":{"type":"func","owner":"*MQTTConnection","parameters":[],"comments":[],"result":[]},"Disconnect":{"type":"func","owner":"*MQTTConnection","parameters":[{"quiesce":"uint"}],"comments":[],"result":[{"err":"error"}]},"Connect":{"type":"func","owner":"*MQTTConnection","parameters":[],"comments":[],"result":[]},"UpdateConnection":{"type":"func","owner":"*MQTTConnection","parameters":[{"autoconnect":"bool"},{"broker":"string"},{"port":"int"},{"user":"string"},{"password":"string"}],"comments":[],"result":[{}]},"Publish":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"},{"qos":"byte"},{"retained":"bool"},{"message":"string"}],"comments":[],"result":[{"err":"error"}]},"IsSubscribed":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"}],"comments":[],"result":[{"issbscrbed":"bool"}]},"Subscriptions":{"type":"func","owner":"*MQTTConnection","parameters":[{"alreadylck":"...bool"}],"comments":[],"result":[{"subscrptns":"[]*mqttsubscription"}]},"SubscribedTopics":{"type":"func","owner":"*MQTTConnection","parameters":[{"alreadylck":"...bool"}],"comments":[],"result":[{"subscrbdtpcs":"[]string"}]},"Subscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"},{"qos":"byte"}],"comments":[],"result":[{"err":"error"}]},"Resubscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"unsubscribefirst":"bool"},{"topic":"...string"}],"comments":[],"result":[{"err":"error"}]},"UnsubscribeAll":{"type":"func","owner":"*MQTTConnection","parameters":[],"comments":[],"result":[]},"Unsubscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"...string"}],"comments":[],"result":[{"err":"error"}]}}},"newMQTTOptions":{"type":"func","owner":"","parameters":[{"clientid":"string"},{"broker":"string"},{"port":"int"},{"user":"string"},{"password":"string"}],"comments":[],"result":[{"pahooptions":"*mqtt.ClientOptions"}]},"NewMQTTConnections":{"type":"func","owner":"","parameters":[{"clientid":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"mqttcn":"*MQTTConnection"}]},"newPahoMqttClient":{"type":"func","owner":"","parameters":[{"pahooptions":"*mqtt.ClientOptions"}],"comments":[],"result":[{"pahomqtt":"mqtt.Client"}]},"Message":{"type":"type","base":"interface","base-types":["Ack()"],"fields":{"Duplicate()":"bool","Qos()":"byte","Retained()":"bool","Topic()":"string","MessageID()":"uint16","Payload()":"[]byte","Connection()":"*MQTTConnection","TopicPath()":"string","Manager()":"*MQTTManager"},"comments":[]},"mqttMessage":{"type":"type","base":"struct","base-types":[],"fields":{"mqttcn":"*MQTTConnection","mqttmmng":"*MQTTManager","msg":"mqtt.Message","tokenpath":"string"},"comments":[],"_":{"FPrint":{"type":"func","owner":"*mqttMessage","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{}]},"String":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"TopicPath":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Duplicate":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Qos":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Retained":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Topic":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"MessageID":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Payload":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Connection":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Manager":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]},"Ack":{"type":"func","owner":"*mqttMessage","parameters":[],"comments":[],"result":[]}}},"subscribetotopic":{"type":"func","owner":"","parameters":[{"mqttcn":"*MQTTConnection"},{"topic":"string"},{"qos":"byte"}],"comments":[],"result":[{"err":"error"}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"Topic":{"type":"type","base":"interface","base-types":[],"fields":{"Topic()":"string","TopicPath()":"string"},"comments":[]},"activeTopic":{"type":"type","base":"struct","base-types":[],"fields":{"topic":"string","topicpath":"string"},"comments":[],"_":{"TopicPath":{"type":"func","owner":"*activeTopic","parameters":[],"comments":[],"result":[]},"processMessage":{"type":"func","owner":"*activeTopic","parameters":[{"mqttmsng":"MqttMessaging"},{"message":"Message"}],"comments":[],"result":[{"err":"error"}]}}},"MqttEvent":{"type":"type","base":"interface","base-types":[],"fields":{"Event()":"string","EventPath()":"string","MqttConnection()":"*MQTTConnection","MqttManager()":"*MQTTManager","Args()":"map[string]interface{}"},"comments":[]},"mqttEvent":{"type":"type","base":"struct","base-types":[],"fields":{"event":"string","eventpath":"string","mqttcn":"*MQTTConnection","mqttmngr":"*MQTTManager","args":"map[string]interface{}"},"comments":[],"_":{"Event":{"type":"func","owner":"*mqttEvent","parameters":[],"comments":[],"result":[]},"EventPath":{"type":"func","owner":"*mqttEvent","parameters":[],"comments":[],"result":[]},"MqttConnection":{"type":"func","owner":"*mqttEvent","parameters":[],"comments":[],"result":[]},"MqttManager":{"type":"func","owner":"*mqttEvent","parameters":[],"comments":[],"result":[]},"Args":{"type":"func","owner":"*mqttEvent","parameters":[],"comments":[],"result":[]}}},"mqttEventContainer":{"type":"type","base":"struct","base-types":[],"fields":{"event":"string","eventpath":"string","args":"map[string]interface{}"},"comments":[]},"MQTTManager":{"type":"type","base":"struct","base-types":[],"fields":{"lck":"*sync.RWMutex","cntns":"map[string]*MQTTConnection","activeTopics":"map[string]*activeTopic","defaulttopicpath":"string","lcktpcs":"*sync.RWMutex","MqttMessaging":"MqttMessaging","mqttevents":"map[string]*mqttEventContainer","lckevents":"*sync.RWMutex","MqttEventing":"MqttEventing","defaulteventpath":"string"},"comments":[],"_":{"ActiveTopics":{"type":"func","owner":"*MQTTManager","parameters":[],"comments":[],"result":[]},"Connections":{"type":"func","owner":"*MQTTManager","parameters":[],"comments":[],"result":[]},"Connection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"mqttcn":"*MQTTConnection"}]},"ConnectionInfo":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"mqttcninfo":"string"}]},"ConnectionExist":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"exists":"bool"}]},"RegisterConnection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Fprint":{"type":"func","owner":"*MQTTManager","parameters":[{"w":"io.Writer"}],"comments":[],"result":[{}]},"String":{"type":"func","owner":"*MQTTManager","parameters":[],"comments":[],"result":[]},"UnregisterConnection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"...string"}],"comments":[],"result":[{}]},"messageReceived":{"type":"func","owner":"*MQTTManager","parameters":[{"mqttcn":"*MQTTConnection"},{"alias":"string"},{"msg":"*mqttMessage"}],"comments":[],"result":[{}]},"Connected":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{}]},"fireAliasEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"event":"string"},{"err":"error"}],"comments":[],"result":[{}]},"Disconnected":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"err":"error"}],"comments":[],"result":[{}]},"IsConnect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"connected":"bool"}]},"Connect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"err":"error"}]},"Disconnect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"quiesce":"uint"}],"comments":[],"result":[{"err":"error"}]},"IsSubscribed":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"}],"comments":[],"result":[{"issbscrbed":"bool"}]},"Subscriptions":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"comments":[],"result":[{"subscrptns":"[]*mqttsubscription"}]},"Subscribe":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"},{"qos":"byte"}],"comments":[],"result":[{"err":"error"}]},"Unsubscribe":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"}],"comments":[],"result":[{"err":"error"}]},"Publish":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"},{"qos":"byte"},{"retained":"bool"},{"message":"string"}],"comments":[],"result":[{"err":"error"}]},"ActivateTopic":{"type":"func","owner":"*MQTTManager","parameters":[{"topic":"string"},{"topicpath":"...string"}],"comments":[],"result":[{}]},"DeactivateTopic":{"type":"func","owner":"*MQTTManager","parameters":[{"topic":"string"}],"comments":[],"result":[{}]},"ValidEvents":{"type":"func","owner":"*MQTTManager","parameters":[],"comments":[],"result":[]},"ActivateEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"event":"string"},{"eventpath":"string"},{"args":"...map[string]interface{}"}],"comments":[],"result":[{}]},"DeactivateEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"event":"string"}],"comments":[],"result":[{}]}}},"NewMQTTManager":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"comments":[],"result":[{"mqttmngr":"*MQTTManager"}]},"GLOBALMQTTMANAGER":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"osprc":{"_":{"Command":{"type":"type","base":"struct","base-types":[],"fields":{"excmd":"*exec.Cmd","OnClose":"func(int)","excmdprcid":"int","ctx":"context.Context","ctxcancel":"context.CancelFunc","cmdin":"io.WriteCloser","bfr":"*bufio.Reader","cmdout":"io.ReadCloser","cmdoutp":"chan []byte","cmdouterr":"chan error","cmdtmpp":"[]byte","cmdtmppi":"int","cmdtmppl":"int","stdinpark":"[]byte","stdinparkl":"int","stdinparki":"int","cancmdout":"bool","milseconds":"int64"},"comments":["Command - struct"],"_":{"SetReadTimeout":{"type":"func","owner":"*Command","parameters":[{"milseconds":"int64"}],"comments":["SetReadTimeout set read timeout in milliseconds int64"],"result":[{}]},"PrcID":{"type":"func","owner":"*Command","parameters":[],"comments":["PrcID underlying os Process ID"],"result":[]},"Print":{"type":"func","owner":"*Command","parameters":[{"a":"...interface{}"}],"comments":["Print - similar to fmt.Fprint just direct on *Command"],"result":[{}]},"Println":{"type":"func","owner":"*Command","parameters":[{"a":"...interface{}"}],"comments":["Println - similar to fmt.Fprint just direct on *Command"],"result":[{}]},"Readln":{"type":"func","owner":"*Command","parameters":[],"comments":["Readln - read line from cmd and return s string or err error"],"result":[]},"Readlines":{"type":"func","owner":"*Command","parameters":[],"comments":["Readlines - read lines []string from cmd or err error"],"result":[]},"ReadAll":{"type":"func","owner":"*Command","parameters":[],"comments":["ReadAll read and return content as s string or err error"],"result":[]},"Close":{"type":"func","owner":"*Command","parameters":[],"comments":["Close - *Command"],"result":[]},"ReadRune":{"type":"func","owner":"*Command","parameters":[],"comments":["ReadRune - refer to io.RuneReader"],"result":[]},"Dir":{"type":"func","owner":"*Command","parameters":[],"comments":["Dir return executing command directory"],"result":[]},"Read":{"type":"func","owner":"*Command","parameters":[{"p":"[]byte"}],"comments":["Read - refer to io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"Write":{"type":"func","owner":"*Command","parameters":[{"p":"[]byte"}],"comments":["Write - refer to io.Writer"],"result":[{"n":"int"},{"err":"error"}]}}},"NewCommand":{"type":"func","owner":"","parameters":[{"execpath":"string"},{"execargs":"...string"}],"comments":["NewCommand return cmd *Command instance or err error"],"result":[{"cmd":"*Command"},{"err":"error"}]}}},"parameters":{"_":{"Parameters":{"type":"type","base":"struct","base-types":[],"fields":{"standard":"map[string][]string","filesdata":"map[string][]interface{}"},"comments":["Parameters -> structure containing parameters"],"_":{"StandardKeys":{"type":"func","owner":"*Parameters","parameters":[],"comments":["StandardKeys - list of standard parameters names (keys)"],"result":[]},"FileKeys":{"type":"func","owner":"*Parameters","parameters":[],"comments":["FileKeys - list of file parameters names (keys)"],"result":[]},"SetParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"clear":"bool"},{"pvalue":"...string"}],"comments":["clear : clear existing value of parameter","pvalue : value of strings to add","pname : name","SetParameter -> set or append parameter value"],"result":[{}]},"ContainsParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"comments":["pname : name","ContainsParameter -> check if parameter exist"],"result":[{}]},"RemoveParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"comments":["RemoveParameter  -> remove parameter and return any slice of string value"],"result":[{"value":"[]string"}]},"SetFileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"clear":"bool"},{"pfile":"...interface{}"}],"comments":["clear : clear existing value of parameter","pfile : value of interface to add either FileHeader from mime/multipart or any io.Reader implementation","pname : name","SetFileParameter -> set or append file parameter value"],"result":[{}]},"ContainsFileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"comments":["pname : name","ContainsFileParameter -> check if file parameter exist"],"result":[{}]},"Parameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"comments":["Parameter - return a specific parameter values"],"result":[{}]},"StringParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"sep":"string"},{"index":"...int"}],"comments":["StringParameter return parameter as string concatenated with sep"],"result":[{"s":"string"}]},"FileReader":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"comments":["FileReader return file parameter - array of io.Reader"],"result":[{"rdrs":"[]io.Reader"}]},"FileName":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"comments":["FileName return file parameter name - array of string"],"result":[{"nmes":"[]string"}]},"FileSize":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"comments":["FileSize return file parameter size - array of int64)"],"result":[{"sizes":"[]int64"}]},"FileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"comments":["FileParameter return file paramater - array of file"],"result":[{}]},"CleanupParameters":{"type":"func","owner":"*Parameters","parameters":[],"comments":["CleanupParameters function that can be called to assist in cleaning up instance of Parameter container"],"result":[]}}},"NewParameters":{"type":"func","owner":"","parameters":[],"comments":["NewParameters return new instance of Paramaters container"],"result":[]},"LoadParametersFromRawURL":{"type":"func","owner":"","parameters":[{"params":"*Parameters"},{"rawURL":"string"}],"comments":["LoadParametersFromRawURL - populate paramaters just from raw url"],"result":[{}]},"LoadParametersFromHTTPRequest":{"type":"func","owner":"","parameters":[{"params":"*Parameters"},{"r":"*http.Request"}],"comments":["LoadParametersFromHTTPRequest - Load Parameters from http.Request"],"result":[{}]}}},"requirejs":{"_":{"RequireJS":{"type":"func","owner":"","parameters":[],"comments":["RequireJS return io.Reader of require.js code"],"result":[]},"RequireJSString":{"type":"func","owner":"","parameters":[],"comments":["RequireJSString return string of require.js code"],"result":[]},"RequireMinJS":{"type":"func","owner":"","parameters":[],"comments":["RequireMinJS return io.Reader of require.min.js code"],"result":[]},"RequireMinJSString":{"type":"func","owner":"","parameters":[],"comments":["RequireMinJSString return string of require.min.js code"],"result":[]}}},"resources":{"_":{"Resource":{"type":"type","base":"struct","base-types":[],"fields":{"rsngepnt":"*ResourcingEndpoint","rspath":"string","isText":"bool","isBin":"bool","r":"io.Reader","rs":"io.Seeker","rc":"io.Closer"},"comments":["Resource - struct"],"_":{"Seek":{"type":"func","owner":"*Resource","parameters":[{"offset":"int64"},{"whence":"int"}],"comments":["Seek - refer to io.Seeker"],"result":[{"n":"int64"},{"err":"error"}]},"Read":{"type":"func","owner":"*Resource","parameters":[{"p":"[]byte"}],"comments":[],"result":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*Resource","parameters":[],"comments":["Close - refer to io.Closer"],"result":[]}}},"newRS":{"type":"func","owner":"","parameters":[{"rsngepnt":"*ResourcingEndpoint"},{"rspath":"string"},{"r":"io.Reader"}],"comments":[],"result":[{"rs":"*Resource"}]},"EmbeddedResource":{"type":"type","base":"struct","base-types":["*iorw.Buffer"],"fields":{"rscngendpnt":"*ResourcingEndpoint","modified":"time.Time","path":"string"},"comments":[],"_":{"Name":{"type":"func","owner":"*EmbeddedResource","parameters":[],"comments":[],"result":[]},"Clear":{"type":"func","owner":"*EmbeddedResource","parameters":[],"comments":[],"result":[]},"Close":{"type":"func","owner":"*EmbeddedResource","parameters":[],"comments":[],"result":[]}}},"NewEmbeddedResource":{"type":"func","owner":"","parameters":[{"rscngendpnt":"*ResourcingEndpoint"}],"comments":[],"result":[{"embdrs":"*EmbeddedResource"}]},"ResourcingEndpoint":{"type":"type","base":"struct","base-types":[],"fields":{"fsutils":"*fsutils.FSUtils","path":"string","epnttype":"string","isLocal":"bool","isRemote":"bool","isEmbedded":"bool","remoteHeaders":"map[string]string","host":"string","schema":"string","querystring":"string","embeddedResources":"map[string]*EmbeddedResource","rsngmngr":"*ResourcingManager"},"comments":["ResourcingEndpoint - struct"],"_":{"FS":{"type":"func","owner":"*ResourcingEndpoint","parameters":[],"comments":["FS return fsutils.FSUtils implementation for *ResourcingEndPoint"],"result":[]},"fsappend":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"fsset":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"fscat":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"r":"io.Reader"}]},"fscats":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"s":"string"}]},"fspipe":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"r":"io.Reader"}]},"fspipes":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"s":"string"}]},"fstouch":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{}]},"fsmv":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"destpath":"string"}],"comments":[],"result":[{}]},"fsrm":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"rmvd":"bool"}]},"fsmkdirall":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{}]},"fsmkdir":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{}]},"fsls":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"}]},"fsfind":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"},{"err":"error"}]},"dispose":{"type":"func","owner":"*ResourcingEndpoint","parameters":[],"comments":[],"result":[]},"findRS":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":[],"result":[{"rs":"io.ReadCloser"},{"err":"error"}]},"RemoveResource":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"comments":["RemoveResource - remove inline resource - true if found and removed and false if not exists"],"result":[{"rmvd":"bool"}]}}},"isValidLocalPath":{"type":"func","owner":"","parameters":[{"path":"string"}],"comments":[],"result":[{}]},"nextResourcingEndpoint":{"type":"func","owner":"","parameters":[{"rsngmngr":"*ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"rsngepnt":"*ResourcingEndpoint"},{"rsngepntpath":"string"}]},"ResourcingManager":{"type":"type","base":"struct","base-types":[],"fields":{"fsutils":"*fsutils.FSUtils","rsngpaths":"map[string]string","rsngrootpaths":"map[string]*ResourcingEndpoint"},"comments":["ResourcingManager - struct"],"_":{"FS":{"type":"func","owner":"*ResourcingManager","parameters":[],"comments":["FS return fsutils.FSUtils implementation for *ResourcingManager"],"result":[]},"findrsendpnt":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"epnt":"*ResourcingEndpoint"},{"rpath":"string"}]},"findrsendpnts":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"comments":[],"result":[{"epnts":"[]*ResourcingEndpoint"},{"epnttphs":"[]string"}]},"findrsendpntpaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"comments":[],"result":[{"epnts":"[]*ResourcingEndpoint"},{},{"paths":"[]string"}]},"fsappend":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"fnd":"bool"}]},"fsset":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"set":"bool"}]},"fscat":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"r":"io.Reader"}]},"fscats":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"s":"string"}]},"fspipe":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"r":"io.Reader"}]},"fspipes":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"s":"string"}]},"fstouch":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"tchd":"bool"}]},"fsmv":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"destpath":"string"}],"comments":[],"result":[{"mvd":"bool"}]},"fsrm":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":[],"result":[{"rmd":"bool"}]},"fsmkdirall":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...interface{}"}],"comments":[],"result":[{"mkdall":"bool"}]},"fsmkdir":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...interface{}"}],"comments":[],"result":[{"mkd":"bool"}]},"fsls":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"}]},"fsfind":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"comments":[],"result":[{"finfos":"[]fsutils.FileInfo"},{"err":"error"}]},"RemovePathResource":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["RemovePathResource - Remove Endpoint Resource via path"],"result":[{"rmvd":"bool"}]},"EndpointViaRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"rootpath":"string"}],"comments":["EndpointViaRootPath return ResourcingEndpoint via root path"],"result":[{"rsngendpt":"*ResourcingEndpoint"}]},"EndpointViaPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["EndpointViaPath return ResourcingEndpoint via path"],"result":[{"rsngendpt":"*ResourcingEndpoint"}]},"EndpointResource":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["EndpointResource - Endpoint embedded resource via path"],"result":[{"epntrs":"interface{}"}]},"UnregisterPaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"comments":["UnregisterPaths unregister multiple paths"],"result":[{}]},"RegisteredRootPaths":{"type":"func","owner":"*ResourcingManager","parameters":[],"comments":["RegisteredRootPaths return registered rootpaths"],"result":[]},"IsRegisteredPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["IsRegisteredPath return true indicating if a path is registered"],"result":[{"exists":"bool"}]},"IsRegisteredRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"rootpath":"string"}],"comments":["IsRegisteredRootPath return true indicating if a rootpath is registered"],"result":[{"exists":"bool"}]},"RegisteredPaths":{"type":"func","owner":"*ResourcingManager","parameters":[],"comments":["RegisteredPaths return registered paths"],"result":[]},"UnregisterPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["UnregisterPath - register path string"],"result":[{"rmvd":"bool"}]},"UnregisterRootPaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"epntpath":"...string"}],"comments":["UnregisterRootPaths unregister multiple RootPaths and their ResourcingEndPoints"],"result":[{}]},"UnregisterRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"epntpath":"string"}],"comments":["UnregisterRootPath unregister RootPath and dispose the ResourcingEndPoint"],"result":[{"rmvd":"bool"}]},"RegisterEndpoints":{"type":"func","owner":"*ResourcingManager","parameters":[{"args":"...interface{}"}],"comments":["RegisterEndpoints register multiple Endpoints"],"result":[{}]},"RegisterEndpoint":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"rootpath":"string"},{"prms":"...interface{}"}],"comments":["RegisterEndpoint - register ResourcingEndPoint"],"result":[{}]},"FindRSString":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["FindRSString - find Resource"],"result":[{"s":"string"},{"err":"error"}]},"FindRS":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"comments":["FindRS - find Resource"],"result":[{"rs":"io.ReadCloser"},{"err":"error"}]},"Close":{"type":"func","owner":"*ResourcingManager","parameters":[],"comments":["Close *ResouringManager"],"result":[]}}},"NewResourcingManager":{"type":"func","owner":"","parameters":[],"comments":["NewResourcingManager - instance"],"result":[]},"GLOBALRSNG":{"type":"func","owner":"","parameters":[],"comments":["GLOBALRSNG - GLOBAL Resourcing for app"],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"scheduling":{"_":{"ScheduleHandler":{"type":"type","base":"interface","base-types":[],"fields":{"StartedSchedule(...interface{})":"error","StoppedSchedule(...interface{})":"error","ShutdownSchedule()":"error","PrepActionArgs(...interface{})":"([]interface{}, error)","Schedule()":"*Schedule"},"comments":["ScheduleHandler - interface"]},"Schedule":{"type":"type","base":"struct","base-types":[],"fields":{"actnmde":"scheduleactiontype","initstart":"bool","schdlid":"string","once":"bool","schdlhndlr":"ScheduleHandler","From":"time.Time","To":"time.Time","schdlrs":"*Schedules","actns":"*enumeration.Chain","initactns":"*enumeration.Chain","wrapupactns":"*enumeration.Chain","actnslck":"*sync.Mutex","StartArgs":"[]interface{}","OnError":"func(*Schedules, *Schedule, error)","OnStart":"func(a ...interface{}) error","StopArgs":"[]interface{}","OnStop":"func(a ...interface{}) error","OnShutdown":"func() error","Milliseconds":"int64","Seconds":"int64","Minutes":"int64","Hours":"int64","prcintrvl":"int64","intrvl":"time.Duration","running":"bool","wg":"*sync.WaitGroup"},"comments":["Schedule - struct"],"_":{"AddAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"comments":["AddAction - add action(s) to *Schedule"],"result":[{"err":"error"}]},"AddInitAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"comments":["AddInitAction - add action(s) to *Schedule that will be execute initially"],"result":[{"err":"error"}]},"AddWrapupAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"comments":[" main list fo action(s) to execute","AddWrapupAction - add action(s) to *Schedule that will be execute when there are no more"],"result":[{"err":"error"}]},"internalAction":{"type":"func","owner":"*Schedule","parameters":[{"actntpe":"scheduleactiontype"},{"a":"...interface{}"}],"comments":[],"result":[{"err":"error"}]},"doLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"}],"comments":[],"result":[{"done":"bool"},{"err":"error"}]},"errDoLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"},{"err":"error"}],"comments":[],"result":[{"done":"bool"}]},"doneLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"}],"comments":[],"result":[{"err":"error"}]},"errDoneLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"},{"err":"error"}],"comments":[],"result":[{"done":"bool"}]},"executeMain":{"type":"func","owner":"*Schedule","parameters":[],"comments":[],"result":[]},"executeInit":{"type":"func","owner":"*Schedule","parameters":[],"comments":[],"result":[]},"execute":{"type":"func","owner":"*Schedule","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*Schedule","parameters":[],"comments":["Start - Schedule"],"result":[]},"ticking":{"type":"func","owner":"*Schedule","parameters":[],"comments":[],"result":[]},"process":{"type":"func","owner":"*Schedule","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*Schedule","parameters":[],"comments":["Stop - Schedule"],"result":[]},"Shutdown":{"type":"func","owner":"*Schedule","parameters":[],"comments":["after this Schedule is destroyed adn not accessable anymore","Shutdown - Schedule"],"result":[]},"inMapOut":{"type":"func","owner":"*Schedule","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"inReaderOut":{"type":"func","owner":"*Schedule","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"InOut":{"type":"func","owner":"*Schedule","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"result":[{"err":"error"}]}}},"newSchedule":{"type":"func","owner":"","parameters":[{"schdlrs":"*Schedules"},{"a":"...interface{}"}],"comments":[],"result":[{"schdl":"*Schedule"}]},"addactns":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actntpe":"scheduleactiontype"},{"schdlactns":"...*schdlaction"}],"comments":[],"result":[{}]},"addactn":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actntpe":"scheduleactiontype"},{"schdlactn":"*schdlaction"}],"comments":[],"result":[{}]},"removeactns":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"schdlactns":"...*schdlaction"}],"comments":[],"result":[{}]},"removeactn":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"schdlactn":"*schdlaction"}],"comments":[],"result":[{}]},"schdlaction":{"type":"type","base":"struct","base-types":[],"fields":{"schdl":"*Schedule","prvactn":"*schdlaction","nxtactn":"*schdlaction","args":"[]interface{}","actn":"func(...interface{}) error","valid":"bool"},"comments":[],"_":{"dispose":{"type":"func","owner":"*schdlaction","parameters":[],"comments":[],"result":[]},"execute":{"type":"func","owner":"*schdlaction","parameters":[],"comments":[],"result":[]}}},"newSchdlAction":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actn":"func(...interface{}"}],"comments":[],"result":[{},{"a":"...interface{}) (scdhlactn *schdlaction)"}]},"ScheduleAction":{"type":"type","base":"struct","base-types":[],"fields":{"schdl":"*Schedule","schdls":"*Schedules","settings":"map[string]interface{}","actnargs":"[]interface{}","OnExecute":"func(...interface{}) (bool, error)"},"comments":["ScheduleAction - struct core implementation of ActionHandler"],"_":{"ExecuteAction":{"type":"func","owner":"*ScheduleAction","parameters":[{"a":"...interface{}"}],"comments":["ExecuteAction implementation of ActionHandler"],"result":[{"result":"bool"},{"err":"error"}]}}},"NewScheduleAction":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"settings":"map[string]interface{}"},{"args":"...interface{}"}],"comments":["NewScheduleAction return new ScheduleAction instance"],"result":[{"schdlactn":"*ScheduleAction"}]},"SchedulesHandler":{"type":"type","base":"interface","base-types":[],"fields":{"NewSchedule(*Schedule,":"...interface{}) ScheduleHandler","Schedules()":"*Schedules"},"comments":["SchedulesHandler - interface"]},"Schedules":{"type":"type","base":"struct","base-types":[],"fields":{"schdls":"map[string]*Schedule","schdlshndlr":"SchedulesHandler","lck":"*sync.Mutex"},"comments":["Schedules - struct"],"_":{"InOutS":{"type":"func","owner":"*Schedules","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"comments":["InOutS - OO{ in io.Reader -> out string } loop till no input"],"result":[{"out":"string"},{"err":"error"}]},"inMapOut":{"type":"func","owner":"*Schedules","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"inReaderOut":{"type":"func","owner":"*Schedules","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":[],"result":[{"hasoutput":"bool"},{"err":"error"}]},"InOut":{"type":"func","owner":"*Schedules","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"comments":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"result":[{"err":"error"}]},"Get":{"type":"func","owner":"*Schedules","parameters":[{"schdlname":"string"}],"comments":["Get - Scheduler by schdlname"],"result":[{"schdl":"*Schedule"}]},"RegisterSchedule":{"type":"func","owner":"*Schedules","parameters":[{"schdlname":"string"},{"a":"...interface{}"}],"comments":[" will the schedule be registered","RegisterSchedule - If schedule  with same name do not exists"],"result":[{"schdl":"*Schedule"}]},"ScheduleExists":{"type":"func","owner":"*Schedules","parameters":[{"scdhkid":"string"}],"comments":["ScheduleExists returns true if *Schedule with schdlid string exists"],"result":[{"schdlexist":"bool"},{"schdl":"*Schedule"}]},"removeSchedule":{"type":"func","owner":"*Schedules","parameters":[{"schdl":"*Schedule"}],"comments":[],"result":[{}]}}},"NewSchedules":{"type":"func","owner":"","parameters":[{"schdlshndlr":"SchedulesHandler"}],"comments":["NewSchedules instance"],"result":[{"schdls":"*Schedules"}]},"GLOBALSCHEDULES":{"type":"func","owner":"","parameters":[],"comments":["GLOBALSCHEDULES - Global *Schedules instance"],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"service":{"_":{"LnkService":{"type":"type","base":"struct","base-types":["*serving.Service"],"fields":{"brkrfnc":"func(exenme string, exealias string, args ...string)"},"comments":["LnkService LnkService"],"_":{"startLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"comments":[],"result":[{}]},"runLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"comments":[],"result":[{}]},"stopLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"comments":[],"result":[{}]}}},"NewLnkService":{"type":"func","owner":"","parameters":[{"name":"string"},{"displayName":"string"},{"description":"string"},{"brokerfunc":"...interface{}"}],"comments":["NewLnkService NewLnkService"],"result":[{"lnksrvs":"*LnkService"},{"err":"error"}]},"RunService":{"type":"func","owner":"","parameters":[{"args":"...string"}],"comments":["RunService - startup Service pasing args...string"],"result":[{}]},"RunBroker":{"type":"func","owner":"","parameters":[{"exename":"string"},{"exealias":"string"},{"args":"...string"}],"comments":["RunBroker - RunBroker command as request in global channel"],"result":[{}]}}},"serving":{"_":{"Service":{"type":"type","base":"struct","base-types":[],"fields":{"isService":"bool","isConsole":"bool","isBroker":"bool","start":"func(*Service, ...string)","run":"func(*Service, ...string)","stop":"func(*Service, ...string)","execname":"string","execfolder":"string","name":"string","displayName":"string","description":"string","svcConfig":"*service.Config","args":"[]string"},"comments":["Service struct"],"_":{"Start":{"type":"func","owner":"*Service","parameters":[{"s":"service.Service"}],"comments":["Start Service"],"result":[{}]},"exec":{"type":"func","owner":"*Service","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*Service","parameters":[{"s":"service.Service"}],"comments":["Stop Service"],"result":[{}]},"IsBroker":{"type":"func","owner":"*Service","parameters":[],"comments":["IsBroker Service"],"result":[]},"IsConsole":{"type":"func","owner":"*Service","parameters":[],"comments":["IsConsole Service"],"result":[]},"IsService":{"type":"func","owner":"*Service","parameters":[],"comments":["IsService Service"],"result":[]},"ServiceExeName":{"type":"func","owner":"*Service","parameters":[],"comments":["ServiceExeName Service Executable Name"],"result":[]},"ServiceName":{"type":"func","owner":"*Service","parameters":[],"comments":["ServiceName Service Name"],"result":[]},"ServiceExeFolder":{"type":"func","owner":"*Service","parameters":[],"comments":["ServiceExeFolder local folder where Service Executable resides"],"result":[]},"ServiceDisplayName":{"type":"func","owner":"*Service","parameters":[],"comments":["ServiceDisplayName Service Display Name"],"result":[]},"ServiceDescription":{"type":"func","owner":"*Service","parameters":[],"comments":["ServiceDescription Service Description"],"result":[]},"Execute":{"type":"func","owner":"*Service","parameters":[{"args":"...string"}],"comments":["args - args from os gets passed into here","called in main() func of golang app,","Execute main Service Execute method when executing Service"],"result":[{"err":"error"}]}}},"executableClean":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"executable":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"Executable":{"type":"func","owner":"","parameters":[],"comments":[" It may not be valid after the current program exits."," re-invoke the current program."," Executable returns an absolute path that can be used to"],"result":[]},"ExecutableFolder":{"type":"func","owner":"","parameters":[],"comments":[" path. Excludes the executable name and any trailing slash."," ExecutableFolder returns same path as Executable, returns just the folder"],"result":[]}},"service":{"_":{"consoleLogger":{"type":"type","base":"struct","base-types":[],"fields":{"info,":"warn, err *log.Logger"},"comments":[],"_":{"Error":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Warning":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Info":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Errorf":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Warningf":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Infof":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]}}},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"getPidOfSvcMaster":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"isInteractive":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"aixService":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface"},"comments":[],"_":{"String":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Run":{"type":"func","owner":"*aixService","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*aixService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*aixService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]}}},"darwinLaunchdService":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","userService":"bool"},"comments":[],"_":{"String":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"getHomeDir":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"getServiceFilePath":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Run":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*darwinLaunchdService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*darwinLaunchdService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]}}},"freebsdService":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface"},"comments":[],"_":{"String":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Run":{"type":"func","owner":"*freebsdService","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*freebsdService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*freebsdService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]}}},"linuxSystemService":{"type":"type","base":"struct","base-types":[],"fields":{"name":"string","detect":"func() bool","interactive":"func() bool","new":"func(i Interface, platform string, c *Config) (Service, error)"},"comments":[],"_":{"String":{"type":"func","owner":"linuxSystemService","parameters":[],"comments":[],"result":[]},"Detect":{"type":"func","owner":"linuxSystemService","parameters":[],"comments":[],"result":[]},"Interactive":{"type":"func","owner":"linuxSystemService","parameters":[],"comments":[],"result":[]},"New":{"type":"func","owner":"linuxSystemService","parameters":[{"i":"Interface"},{"c":"*Config"}],"comments":[],"result":[{},{}]}}},"isInContainer":{"type":"func","owner":"","parameters":[{"cgroupPath":"string"}],"comments":[" container."," isInContainer checks if the service is being executed in docker or lxc"],"result":[{},{}]},"solarisService":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","Prefix":"string"},"comments":[],"_":{"String":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"getFMRI":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Run":{"type":"func","owner":"*solarisService","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*solarisService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*solarisService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]}}},"isSystemd":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"systemd":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","platform":"string"},"comments":[],"_":{"String":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"getSystemdVersion":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"hasOutputFileSupport":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*systemd","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*systemd","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"Run":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*systemd","parameters":[],"comments":[],"result":[]}}},"newSystemdService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"comments":[],"result":[{},{}]},"sysv":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","platform":"string"},"comments":[],"_":{"String":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*sysv","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*sysv","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"Run":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*sysv","parameters":[],"comments":[],"result":[]}}},"newSystemVService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"comments":[],"result":[{},{}]},"newSysLogger":{"type":"func","owner":"","parameters":[{"name":"string"},{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"sysLogger":{"type":"type","base":"struct","base-types":["*syslog.Writer"],"fields":{"errs":"chan<- error"},"comments":[],"_":{"send":{"type":"func","owner":"sysLogger","parameters":[{"err":"error"}],"comments":[],"result":[{}]},"Error":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Warning":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Info":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"comments":[],"result":[{}]},"Errorf":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Warningf":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]},"Infof":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[],"result":[{}]}}},"run":{"type":"func","owner":"","parameters":[{"command":"string"},{"arguments":"...string"}],"comments":[],"result":[{}]},"runWithOutput":{"type":"func","owner":"","parameters":[{"command":"string"},{"arguments":"...string"}],"comments":[],"result":[{},{},{}]},"runCommand":{"type":"func","owner":"","parameters":[{"command":"string"},{"readStdout":"bool"},{"arguments":"...string"}],"comments":[],"result":[{},{},{}]},"isExitError":{"type":"func","owner":"","parameters":[{"err":"error"}],"comments":[],"result":[{},{}]},"isUpstart":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"upstart":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","platform":"string"},"comments":[],"_":{"String":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"configPath":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"hasKillStanza":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"hasSetUIDStanza":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"getUpstartVersion":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"template":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Install":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Logger":{"type":"func","owner":"*upstart","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*upstart","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"Run":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*upstart","parameters":[],"comments":[],"result":[]}}},"newUpstartService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"comments":[],"result":[{},{}]},"windowsService":{"type":"type","base":"struct","base-types":["*Config"],"fields":{"i":"Interface","errSync":"sync.Mutex","stopStartErr":"error"},"comments":[],"_":{"String":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Platform":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"setError":{"type":"func","owner":"*windowsService","parameters":[{"err":"error"}],"comments":[],"result":[{}]},"getError":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Execute":{"type":"func","owner":"*windowsService","parameters":[{"args":"[]string"},{"r":"<-chan svc.ChangeRequest"},{"changes":"chan<- svc.Status"}],"comments":[],"result":[{},{}]},"Install":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Uninstall":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Run":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Status":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Start":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Stop":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"Restart":{"type":"func","owner":"*windowsService","parameters":[],"comments":[],"result":[]},"stopWait":{"type":"func","owner":"*windowsService","parameters":[{"s":"*mgr.Service"}],"comments":[],"result":[{}]},"Logger":{"type":"func","owner":"*windowsService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]},"SystemLogger":{"type":"func","owner":"*windowsService","parameters":[{"errs":"chan<- error"}],"comments":[],"result":[{},{}]}}},"WindowsLogger":{"type":"type","base":"struct","base-types":[],"fields":{"ev":"*eventlog.Log","errs":"chan<- error"},"comments":[" WindowsLogger allows using windows specific logging methods."],"_":{"send":{"type":"func","owner":"WindowsLogger","parameters":[{"err":"error"}],"comments":[],"result":[{}]},"Error":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"comments":[" Error logs an error message."],"result":[{}]},"Warning":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"comments":[" Warning logs an warning message."],"result":[{}]},"Info":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"comments":[" Info logs an info message."],"result":[{}]},"Errorf":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[" Errorf logs an error message."],"result":[{}]},"Warningf":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[" Warningf logs an warning message."],"result":[{}]},"Infof":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"comments":[" Infof logs an info message."],"result":[{}]},"NError":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"comments":[" NError logs an error message and an event ID."],"result":[{}]},"NWarning":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"comments":[" NWarning logs an warning message and an event ID."],"result":[{}]},"NInfo":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"comments":[" NInfo logs an info message and an event ID."],"result":[{}]},"NErrorf":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"comments":[" NErrorf logs an error message and an event ID."],"result":[{}]},"NWarningf":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"comments":[" NWarningf logs an warning message and an event ID."],"result":[{}]},"NInfof":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"comments":[" NInfof logs an info message and an event ID."],"result":[{}]}}},"getStopTimeout":{"type":"func","owner":"","parameters":[],"comments":[" getStopTimeout fetches the time before windows will kill the service."],"result":[]},"Config":{"type":"type","base":"struct","base-types":[],"fields":{"Name":"string","DisplayName":"string","Description":"string","UserName":"string","Arguments":"[]string","Executable":"string","Dependencies":"[]string","WorkingDirectory":"string","ChRoot":"string","Option":"KeyValue"},"comments":[" Config provides the setup for a Service. The Name field is required."]},"New":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"c":"*Config"}],"comments":[" New creates a new service based on a service interface and configuration."],"result":[{},{}]},"Platform":{"type":"func","owner":"","parameters":[],"comments":[" Platform returns a description of the system service."],"result":[]},"Interactive":{"type":"func","owner":"","parameters":[],"comments":[" and true otherwise."," Interactive returns false if running under the OS service manager"],"result":[]},"newSystem":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"ChooseSystem":{"type":"func","owner":"","parameters":[{"a":"...System"}],"comments":[" Calling this may change what Interactive and Platform return."," SystemServices are considered in the order they are suggested."," ChooseSystem chooses a system from the given system services."],"result":[{}]},"ChosenSystem":{"type":"func","owner":"","parameters":[],"comments":[" ChosenSystem returns the system that service will use."],"result":[]},"AvailableSystems":{"type":"func","owner":"","parameters":[],"comments":[" when choosing the system service."," AvailableSystems returns the list of system services considered"],"result":[]},"System":{"type":"type","base":"interface","base-types":[],"fields":{"String()":"string","Detect()":"bool","Interactive()":"bool","New(i":"Interface, c *Config) (Service, error)"},"comments":[" System represents the service manager that is available."]},"Interface":{"type":"type","base":"interface","base-types":[],"fields":{"Start(s":"Service) error","Stop(s":"Service) error"},"comments":["   9. User program should quickly exit.","   8. Service.Run returns.","      - For a successful exit, os.Exit should not be called in Interface.Stop().","   7. Interface.Stop() is called and quickly returns.","   6. OS service manager signals the user program to stop.","   5. User program runs.","   4. Interface.Start() is called and quickly returns.","   3. User program calls Service.Run() which blocks.","   2. User program sees it is executed from a service manager (IsInteractive is false).","   1. OS service manager executes user program.",""," the hosting process is granted control and Stop runs when control is returned."," Interface represents the service interface for a program. Start runs before"]},"Service":{"type":"type","base":"interface","base-types":[],"fields":{"Run()":"error","Start()":"error","Stop()":"error","Restart()":"error","Install()":"error","Uninstall()":"error","Logger(errs":"chan<- error) (Logger, error)","SystemLogger(errs":"chan<- error) (Logger, error)","String()":"string","Platform()":"string","Status()":"(Status, error)"},"comments":[" Service represents a service that can be run or controlled."," TODO: Add Configure to Service interface."]},"Control":{"type":"func","owner":"","parameters":[{"s":"Service"},{"action":"string"}],"comments":[" Control issues control functions to the service from a given action string."],"result":[{}]},"Logger":{"type":"type","base":"interface","base-types":[],"fields":{"Error(v":"...interface{}) error","Warning(v":"...interface{}) error","Info(v":"...interface{}) error","Errorf(format":"string, a ...interface{}) error","Warningf(format":"string, a ...interface{}) error","Infof(format":"string, a ...interface{}) error"},"comments":[" Logger writes to the system log."]},"versionAtMost":{"type":"func","owner":"","parameters":[{},{"max":"[]int"}],"comments":[" versionAtMost will return true if the provided version is less than or equal to max"],"result":[{},{}]},"versionCompare":{"type":"func","owner":"","parameters":[{},{"v2":"[]int"}],"comments":[" 1  - v1 is greater than v2"," 0  - v1 is equal to v2"," -1 - v1 is less than v2"," Return values are as follows"," An error will be returned if there is an array length mismatch."," versionCompare take to versions split into integer arrays and attempts to compare them"],"result":[{},{}]},"parseVersion":{"type":"func","owner":"","parameters":[{"v":"string"}],"comments":[" This does not fully support semver style versions."," parseVersion will parse any integer type version seperated by periods."],"result":[{}]}}}},"sourcemap_test":{"_":{"BenchmarkParse":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"comments":[],"result":[{}]},"BenchmarkSource":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"comments":[],"result":[{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"sourceMapTest":{"type":"type","base":"struct","base-types":[],"fields":{"genLine":"int","genColumn":"int","wantedSource":"string","wantedName":"string","wantedLine":"int","wantedColumn":"int"},"comments":[],"_":{"String":{"type":"func","owner":"*sourceMapTest","parameters":[],"comments":[],"result":[]},"assert":{"type":"func","owner":"*sourceMapTest","parameters":[{"t":"*testing.T"},{"smap":"*sourcemap.Consumer"}],"comments":[],"result":[{}]}}},"TestSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"TestIndexedSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"testSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"},{"json":"string"}],"comments":[],"result":[{}]},"TestSourceRootURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"TestEmptySourceRootURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"TestAbsSourceURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"testAbsSourceURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"},{},{"jsonStr":"string"}],"comments":[],"result":[{}]},"TestJQuerySourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"j":{"type":"func","owner":"","parameters":[{"v":"interface{}"}],"comments":[],"result":[{}]},"sourceMap":{"type":"type","base":"struct","base-types":[],"fields":{"Version":"int `json:\"version\"`","File":"string `json:\"file\"`","SourceRoot":"string `json:\"sourceRoot\"`","Sources":"[]string `json:\"sources\"`","SourcesContent":"[]string `json:\"sourcesContent\"`","Names":"[]json.RawMessage `json:\"names,string\"`","Mappings":"string `json:\"mappings\"`","mappings":"[]mapping"},"comments":[],"_":{"parse":{"type":"func","owner":"*sourceMap","parameters":[{"sourcemapURL":"string"}],"comments":[],"result":[{}]},"absSource":{"type":"func","owner":"*sourceMap","parameters":[{"root":"*url.URL"},{"source":"string"}],"comments":[],"result":[{}]},"name":{"type":"func","owner":"*sourceMap","parameters":[{"idx":"int"}],"comments":[],"result":[{}]}}},"v3":{"type":"type","base":"struct","base-types":["sourceMap"],"fields":{"Sections":"[]section `json:\"sections\"`"},"comments":[]},"section":{"type":"type","base":"struct","base-types":[],"fields":{"Offset":"struct {","Line":"int `json:\"line\"`","Column":"int `json:\"column\"`","}":"`json:\"offset\"`","Map":"*sourceMap `json:\"map\"`"},"comments":[]},"Consumer":{"type":"type","base":"struct","base-types":[],"fields":{"sourcemapURL":"string","file":"string","sections":"[]section"},"comments":[],"_":{"SourcemapURL":{"type":"func","owner":"*Consumer","parameters":[],"comments":[],"result":[]},"File":{"type":"func","owner":"*Consumer","parameters":[],"comments":[" that this source map is associated with."," File returns an optional name of the generated code"],"result":[]},"SourceContent":{"type":"func","owner":"*Consumer","parameters":[{"source":"string"}],"comments":[" SourceContent returns the original source content for the source."],"result":[{}]}}},"Parse":{"type":"func","owner":"","parameters":[{"sourcemapURL":"string"},{"b":"[]byte"}],"comments":[],"result":[{},{}]},"checkVersion":{"type":"func","owner":"","parameters":[{"version":"int"}],"comments":[],"result":[{}]},"reverse":{"type":"func","owner":"","parameters":[{"ss":"[]section"}],"comments":[],"result":[{}]},"ExampleParse":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"mapping":{"type":"type","base":"struct","base-types":[],"fields":{"genLine":"int32","genColumn":"int32","sourcesInd":"int32","sourceLine":"int32","sourceColumn":"int32","namesInd":"int32"},"comments":[]},"mappings":{"type":"type","base":"struct","base-types":[],"fields":{"rd":"*strings.Reader","dec":"base64vlq.Decoder","hasName":"bool","value":"mapping","values":"[]mapping"},"comments":[],"_":{"parse":{"type":"func","owner":"*mappings","parameters":[],"comments":[],"result":[]},"pushValue":{"type":"func","owner":"*mappings","parameters":[],"comments":[],"result":[]}}},"parseMappings":{"type":"func","owner":"","parameters":[{"s":"string"}],"comments":[],"result":[{},{}]},"mappingsNumber":{"type":"func","owner":"","parameters":[{"s":"string"}],"comments":[],"result":[{}]},"parseGenCol":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"comments":[],"result":[{},{}]},"parseSourcesInd":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"comments":[],"result":[{},{}]},"parseSourceLine":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"comments":[],"result":[{},{}]},"parseSourceCol":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"comments":[],"result":[{},{}]},"parseNamesInd":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"comments":[],"result":[{},{}]}},"internal":{"base64vlq_test":{"_":{"TestEncodeDecode":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"comments":[],"result":[{}]},"BenchmarkEncode":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"comments":[],"result":[{}]},"BenchmarkEncodeDecode":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"comments":[],"result":[{}]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"toVLQSigned":{"type":"func","owner":"","parameters":[{"n":"int32"}],"comments":[],"result":[{}]},"fromVLQSigned":{"type":"func","owner":"","parameters":[{"n":"int32"}],"comments":[],"result":[{}]},"Encoder":{"type":"type","base":"struct","base-types":[],"fields":{"w":"io.ByteWriter"},"comments":[],"_":{"Encode":{"type":"func","owner":"Encoder","parameters":[{"n":"int32"}],"comments":[],"result":[{}]}}},"NewEncoder":{"type":"func","owner":"","parameters":[{"w":"io.ByteWriter"}],"comments":[],"result":[{}]},"Decoder":{"type":"type","base":"struct","base-types":[],"fields":{"r":"io.ByteReader"},"comments":[],"_":{"Decode":{"type":"func","owner":"Decoder","parameters":[],"comments":[],"result":[]}}},"NewDecoder":{"type":"func","owner":"","parameters":[{"r":"io.ByteReader"}],"comments":[],"result":[{}]}}}}},"ssh":{"_":{"SSHConnection":{"type":"type","base":"struct","base-types":[],"fields":{"host":"string","user":"string","password":"string","sshclnts":"map[*sshclient]*sshclient"},"comments":[],"_":{"Connect":{"type":"func","owner":"*SSHConnection","parameters":[],"comments":[],"result":[]}}},"sshclient":{"type":"type","base":"struct","base-types":[],"fields":{"sshcn":"*SSHConnection","sshclnt":"*ssh.Client"},"comments":[]},"NewSSHConnection":{"type":"func","owner":"","parameters":[{"host":"string"},{"username":"string"},{"password":"string"}],"comments":[],"result":[{"sshcn":"*SSHConnection"}]},"newSSHClient":{"type":"func","owner":"","parameters":[{"sshcn":"*SSHConnection"}],"comments":[],"result":[{},{}]},"SSHAgent":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"web":{"_":{"ClientHandle":{"type":"type","base":"struct","base-types":["*Client"],"fields":{"SendReceive":"func(rqstpath string, a ...interface{}) (rw ReaderWriter, err error)","SendRespondString":"func(rqstpath string, a ...interface{}) (rspstr string, err error)","Send":"func(rqstpath string, a ...interface{}) (rspr io.Reader, err error)","Close":"func()"},"comments":[]},"Client":{"type":"type","base":"struct","base-types":[],"fields":{"httpclient":"*http.Client"},"comments":["Client - struct"],"_":{"Close":{"type":"func","owner":"*Client","parameters":[],"comments":["Close *Client"],"result":[]},"SendReceive":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"comments":["SendReceive return ReaderWriter that implement io.Reader,io.Writer"],"result":[{"rw":"ReaderWriter"},{"err":"error"}]},"SendRespondString":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"comments":["SendRespondString - Client Send but return response as string"],"result":[{"rspstr":"string"},{"err":"error"}]},"Send":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"comments":["Send - Client send"],"result":[{"rspr":"iorw.Reader"},{"err":"error"}]},"Do":{"type":"func","owner":"*Client","parameters":[{"rqst":"*http.Request"}],"comments":["Do - refer tp http.Client Do interface"],"result":[{"rspnse":"*http.Response"},{"err":"error"}]}}},"NewClient":{"type":"func","owner":"","parameters":[],"comments":["NewClient - instance"],"result":[]},"ReaderWriter":{"type":"type","base":"interface","base-types":["iorw.PrinterReader","io.ReadWriteCloser"],"fields":{"Flush()":"error"},"comments":["ReaderWriter interface"]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"webactions":{"_":{"WebactionsJS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"JqueryJS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"ParsingJS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"WebactionsBundleJS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"ws":{"_":{"ReaderWriter":{"type":"type","base":"struct","base-types":[],"fields":{"ws":"*websocket.Conn","r":"io.Reader","rbuf":"*bufio.Reader","rerr":"error","w":"io.WriteCloser","wbuf":"*bufio.Writer","werr":"error","isText":"bool","isBinary":"bool"},"comments":["ReaderWriter - struct"],"_":{"ReadRune":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["ReadRune - refer to io.RuneReader"],"result":[]},"WriteRune":{"type":"func","owner":"*ReaderWriter","parameters":[{"r":"rune"}],"comments":["WriteRune - refer to bufio.Writer - WriteRune"],"result":[{"size":"int"},{"err":"error"}]},"CanRead":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["CanRead - can Read"],"result":[]},"CanWrite":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["CanWrite - can Write"],"result":[]},"Read":{"type":"func","owner":"*ReaderWriter","parameters":[{"p":"[]byte"}],"comments":["Read - refer io.Reader"],"result":[{"n":"int"},{"err":"error"}]},"Readln":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["Readln - read single line"],"result":[]},"Readlines":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["Readlines - return lines []string slice"],"result":[]},"ReadAll":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["ReadAll - return all read content as string"],"result":[]},"socketIOType":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":[],"result":[]},"Flush":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["Flush - flush invoke done onmessage"],"result":[]},"Print":{"type":"func","owner":"*ReaderWriter","parameters":[{"a":"...interface{}"}],"comments":["Print - refer to fmt.Fprint"],"result":[{}]},"Println":{"type":"func","owner":"*ReaderWriter","parameters":[{"a":"...interface{}"}],"comments":["Println - refer to fmt.Fprintln"],"result":[{}]},"Write":{"type":"func","owner":"*ReaderWriter","parameters":[{"p":"[]byte"}],"comments":["Write - refer io.Writer"],"result":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*ReaderWriter","parameters":[],"comments":["Close - refer io.Closer"],"result":[]}}},"NewServerReaderWriter":{"type":"func","owner":"","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"comments":["NewServerReaderWriter - instance"],"result":[{"wsrw":"*ReaderWriter"},{"err":"error"}]},"NewClientReaderWriter":{"type":"func","owner":"","parameters":[{"rqstpath":"string"},{"headers":"http.Header"}],"comments":[],"result":[{"wsrw":"*ReaderWriter"},{"resp":"*http.Response"},{"err":"error"}]}}},"ecma":{"jsext":{"_":{"Register_jsext_consoleutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"Register_jsext_executils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"Register_jsext_fsutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"EntryInfo":{"type":"type","base":"struct","base-types":[],"fields":{"Name":"string `json:\"name\"`","Path":"string `json:\"path\"`","Type":"string `json:\"type\"`","Size":"int64 `json:\"size\"`"},"comments":[]},"Register_jsext_gfxutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"Register_jsext_httputils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"Register_jsext_osutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]},"Register":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"comments":[],"result":[{}]}}}},"examples":{"main":{"_":{"main":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"myconnect":{"type":"func","owner":"","parameters":[{"datasource":"string"},{"a":"...interface{}"}],"comments":[],"result":[{"db":"*sql.DB"},{"err":"error"}]}}}},"fonts":{"material":{"_":{"MaterialCSS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"MaterialdesigniconsWebfontEOT":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"MaterialdesigniconsWebfontTTF":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"MaterialdesigniconsWebfontWOFF":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"MaterialdesigniconsWebfontWOFF2":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}},"robotov27latin":{"_":{"IndexCSS":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"RobotoV27LatinRegularWOFF":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]},"init":{"type":"func","owner":"","parameters":[],"comments":[],"result":[]}}}}}