{"/legent":{"/scope-global":"/g/","/scope-local":"/p/","/inherits":"==","/returns":"<<","/comments":"/../","/fields":"/f/","/methods":"/m/","/package-paths":"/-/"},"/-/":["main","caching","caching","caching","chnls","chnls","chnls","chnls","chnls","chnls","chnls","database","database","database","database","database","database","database","enumeration","enumeration","env","fsutils","iorw","iorw","iorw","iorw","listen","listen","logging","mimes","mqtt","mqtt","osprc","parameters","requirejs","resources","resources","resources","scheduling","scheduling","scheduling","service","serving","sourcemap_test","sourcemap_test","sourcemap_test","sourcemap_test","sourcemap_test","ssh","web","webactions","ws","caching.main","caching.test","database.db2","database.mysql","database.ora","database.postgres","database.sqlserver","ecma.jsext","ecma.jsext","ecma.jsext","ecma.jsext","ecma.jsext","ecma.jsext","ecma.jsext","examples.main","examples.main","examples.main","examples.main","fonts.material","fonts.robotov27latin","iorw.active","iorw.active","iorw.active","iorw.active","iorw.jsonrw","iorw.messaging","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","serving.service","sourcemap_test.internal.base64vlq_test","sourcemap_test.internal.base64vlq_test"],"main":{"/":{"/g/":{},"/p/":{"main":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"caching":{"/":{"/g/":{"Map":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"lck":"*sync.RWMutex","lckedlvl":"int","imp":"map[interface{}]interface{}","valid":"bool"}},"==":[],"/../":[],"/m/":{"/g/":{"Lock":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"RLock":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"Unlock":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"RUnlock":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"Keys":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"keys":"[]interface{}"}]},"Values":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"values":"[]interface{}"}]},"Put":{"type":"func","owner":"*Map","parameters":[{"name":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Close":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Reset":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Clear":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Remove":{"type":"func","owner":"*Map","parameters":[{"name":"...interface{}"}],"/../":[],"<<":[{}]},"Find":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"value":"interface{}"}]},"Push":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Shift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Pop":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"At":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"FocusAt":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"focused":"bool"}]},"Fprint":{"type":"func","owner":"*Map","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"String":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"s":"string"}]},"Focus":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"focused":"bool"}]},"Handler":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"NewMap":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"GLOBALMAP":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"GLOBALMAPHANDLER":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"MapAPI":{"type":"type","base":"interface","/f/":{"/g/":{"Keys":"(...interface{}) []interface{}","Values":"(...interface{}) []interface{}","Put":"(interface{}, ...interface{})","Remove":"(...interface{})","Find":"(...interface{}) interface{}","Fprint":"(io.Writer, ...interface{}) error","String":"(...interface{}) string","Focus":"(...interface{}) bool","Reset":"(...interface{})","Clear":"(...interface{})","Close":"(...interface{})","Push":"(interface{}, ...interface{}) int","Pop":"(interface{}, ...interface{}) interface{}","Shift":"(interface{}, ...interface{}) int","Unshift":"(interface{}, ...interface{}) interface{}","At":"(interface{}, ...interface{}) interface{}","FocusAt":"(interface{}, ...interface{}) bool"},"/p/":{}},"==":[],"/../":[]},"MapReader":{"type":"func","owner":"","parameters":[{"mapapi":"MapAPI"},{"ks":"...interface{}"}],"/../":[],"<<":[{"rdr":"*iorw.EOFCloseSeekReader"}]},"MapHandler":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"mp":"*Map","crntmp":"*Map","internal":"bool"}},"==":[],"/../":[],"/m/":{"/g/":{"Reset":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Focus":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"focused":"bool"}]},"Find":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"value":"interface{}"}]},"Keys":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"keys":"[]interface{}"}]},"Values":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"values":"[]interface{}"}]},"Put":{"type":"func","owner":"*MapHandler","parameters":[{"name":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Pop":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"At":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"FocusAt":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"focused":"bool"}]},"Clear":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Remove":{"type":"func","owner":"*MapHandler","parameters":[{"name":"...interface{}"}],"/../":[],"<<":[{}]},"Fprint":{"type":"func","owner":"*MapHandler","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"Shift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Push":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"String":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"s":"string"}]},"Close":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Reader":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]}},"/p/":{"currentMap":{"type":"func","owner":"*MapHandler","parameters":[],"/../":[],"<<":[]}}}},"NewMapHandler":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"mphndlr":"*MapHandler"}]}},"/p/":{"mapKeys":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"/../":[],"<<":[{"keys":"[]interface{}"}]},"mapValues":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"/../":[],"<<":[{"values":"[]interface{}"}]},"mapPut":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"candispose":"bool"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"disposeMapVal":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"valdispose":"interface{}"}],"/../":[],"<<":[{}]},"validMap":{"type":"func","owner":"","parameters":[{"mp":"*Map"}],"/../":[],"<<":[{"valid":"bool"}]},"mapRemove":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"name":"...interface{}"}],"/../":[],"<<":[{}]},"mapFind":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{"vfound":"interface{}"}]},"mapPush":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"focusCurrentMap":"bool"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"mapShift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"mapPop":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"mapUnshift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"mapAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"av":"interface{}"}]},"mapFocusAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"focused":"bool"}]},"mapFPrint":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"w":"io.Writer"}],"/../":[],"<<":[{"err":"error"}]},"writeMapVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"enc":"*json.Encoder"},{"mphndlr":"*MapHandler"},{"v":"interface{}"}],"/../":[],"<<":[{"err":"error"}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}},"main":{"/":{"/g/":{},"/p/":{"main":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"test":{"/":{"/g/":{"MapHandler":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rnble":"active.Runtime","intern":"bool","mp":"*Map","dspsng":"bool","crntmp":"*Map","crntactnstmp":"int64","hndlrs":"map[*MapHandler]*MapHandler","prnthndlr":"*MapHandler"}},"==":[],"/../":[],"/m/":{"/g/":{"NewBuffer":{"type":"func","owner":"*MapHandler","parameters":[],"/../":["NewBuffer helper that returns instance of *iorw.Buffer"],"<<":[]},"NewList":{"type":"func","owner":"*MapHandler","parameters":[{"distinct":"...bool"}],"/../":["NewList helper that returns instance of *enumeration.List"],"<<":[{"list":"*enumeration.List"}]},"Reset":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Keys":{"type":"func","owner":"*MapHandler","parameters":[{"k":"...interface{}"}],"/../":[],"<<":[{"ks":"[]interface{}"}]},"String":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"s":"string"}]},"Reader":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"Fprint":{"type":"func","owner":"*MapHandler","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"Values":{"type":"func","owner":"*MapHandler","parameters":[{"k":"...interface{}"}],"/../":[],"<<":[{"vs":"[]interface{}"}]},"ReplaceKey":{"type":"func","owner":"*MapHandler","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Remove":{"type":"func","owner":"*MapHandler","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"At":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"FindAt":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"Push":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Shift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Pop":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"Put":{"type":"func","owner":"*MapHandler","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Find":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"vfound":"interface{}"}]},"Size":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"size":"int"}]},"ValueAt":{"type":"func","owner":"*MapHandler","parameters":[{"index":"int64"},{"ks":"...interface{}"}],"/../":[],"<<":[{"v":"interface{}"}]},"NewHandler":{"type":"func","owner":"*MapHandler","parameters":[],"/../":[],"<<":[]},"Clear":{"type":"func","owner":"*MapHandler","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Close":{"type":"func","owner":"*MapHandler","parameters":[],"/../":[],"<<":[]}},"/p/":{"currentmp":{"type":"func","owner":"*MapHandler","parameters":[],"/../":[],"<<":[]}}}},"NewMapHandler":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"mphndlr":"*MapHandler"}]},"Map":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"lck":"*sync.RWMutex","keys":"*enumeration.List","kvndm":"map[*enumeration.Node]*enumeration.Node","values":"*enumeration.List","lstactn":"mapAction","lstactnstmp":"int64"}},"==":[],"/../":[],"/m/":{"/g/":{"Handler":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"Size":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"String":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"s":"string"}]},"Fprint":{"type":"func","owner":"*Map","parameters":[{"w":"io.Writer"},{"ks":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"Reader":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"Find":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{"vfound":"interface{}"}]},"Keys":{"type":"func","owner":"*Map","parameters":[{"k":"...interface{}"}],"/../":[],"<<":[{"ks":"[]interface{}"}]},"Values":{"type":"func","owner":"*Map","parameters":[{"k":"...interface{}"}],"/../":[],"<<":[{"vs":"[]interface{}"}]},"Remove":{"type":"func","owner":"*Map","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Clear":{"type":"func","owner":"*Map","parameters":[{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"Close":{"type":"func","owner":"*Map","parameters":[],"/../":[],"<<":[]},"ValueAt":{"type":"func","owner":"*Map","parameters":[{"index":"int64"},{"ks":"...interface{}"}],"/../":[],"<<":[{"v":"interface{}"}]},"Shift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"FindAt":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"At":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"arv":"interface{}"}]},"Push":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"Pop":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"Unshift":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"Put":{"type":"func","owner":"*Map","parameters":[{"k":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"ReplaceKey":{"type":"func","owner":"*Map","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]}},"/p/":{"lastAction":{"type":"func","owner":"*Map","parameters":[{"mphndlr":"*MapHandler"},{"nxtactn":"...mapAction"}],"/../":[],"<<":[{"mpAction":"mapAction"},{"actntr":"*actionTransaction"}]}}}},"NewMap":{"type":"func","owner":"","parameters":[],"/../":["NewMap return instance of *Map"],"<<":[]},"GLOBALMAP":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"GLOBALMAPHANDLER":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"mapHandlerFinalize":{"type":"func","owner":"","parameters":[{"mphndlr":"*MapHandler"}],"/../":[],"<<":[{}]},"mapFinalize":{"type":"func","owner":"","parameters":[{"mp":"*Map"}],"/../":[],"<<":[{}]},"actionTransaction":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"crntactn":"mapAction","cntxt":"context.Context"}},"==":[],"/../":[]},"mapSize":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{"size":"int"}]},"mapString":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{"s":"string"}]},"mapFprint":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"w":"io.Writer"},{"ks":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"encodeMapAVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"val":"interface{}"},{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"encodeMapVal":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"val":"interface{}"},{"isLastVal":"bool"},{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"encodeMap":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"jsnenc":"*json.Encoder"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"mapReader":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{"mprdr":"*iorw.EOFCloseSeekReader"}]},"mapFind":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{"vfound":"interface{}"}]},"mapRemove":{"type":"func","owner":"","parameters":[{"forceRemove":"bool"},{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"disposeValue":{"type":"func","owner":"","parameters":[{"v":"interface{}"}],"/../":[],"<<":[{}]},"mapClear":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"ks":"...interface{}"}],"/../":[],"<<":[{}]},"mapClose":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"}],"/../":[],"<<":[{}]},"mapValueAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"index":"int64"},{"ks":"...interface{}"}],"/../":[],"<<":[{"v":"interface{}"}]},"mapShift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"mapFindAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"av":"interface{}"}]},"mapAt":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"av":"interface{}"}]},"mapPush":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"length":"int"}]},"mapPop":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"pop":"interface{}"}]},"mapUnshift":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{"unshift":"interface{}"}]},"mapPut":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"mapReplaceKey":{"type":"func","owner":"","parameters":[{"mp":"*Map"},{"mphndlr":"*MapHandler"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}}},"chnls":{"/":{"/g/":{"Action":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rqst":"*Request","rspath":"string","prvactn":"*Action"}},"==":[],"/../":["Action - struct"],"/m/":{"/g/":{"Path":{"type":"func","owner":"*Action","parameters":[],"/../":["Path of resource action thats currently processing"],"<<":[]},"ActionHandler":{"type":"func","owner":"*Action","parameters":[],"/../":["ActionHandler - handle individual action io"],"<<":[]},"Close":{"type":"func","owner":"*Action","parameters":[],"/../":["Close - action"],"<<":[]}},"/p/":{}}},"ActionHandler":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"actn":"*Action","actnrdr":"io.Reader","actnrnrdr":"io.RuneReader","hndlMaxSize":"int64","raw":"bool","active":"bool"}},"==":[],"/../":["ActionHandler - struct"],"/m/":{"/g/":{"ReadRune":{"type":"func","owner":"*ActionHandler","parameters":[],"/../":[],"<<":[]},"Read":{"type":"func","owner":"*ActionHandler","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*ActionHandler","parameters":[],"/../":["Close - refer to io.Closer"],"<<":[]}},"/p/":{}}},"NewActionHandler":{"type":"func","owner":"","parameters":[{"actn":"*Action"}],"/../":["NewActionHandler - for Action io"],"<<":[{"actnhndl":"*ActionHandler"}]},"Channel":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"objmap":"map[string]interface{}","lstnr":"*listen.Listener","schdls":"*scheduling.Schedules","mqttmngr":"*mqtt.MQTTManager"}},"==":[],"/../":[],"/m/":{"/g/":{"Listener":{"type":"func","owner":"*Channel","parameters":[],"/../":["Listener - *listen.Listener listener for Channel"],"<<":[]},"MQTT":{"type":"func","owner":"*Channel","parameters":[],"/../":[],"<<":[]},"Schedules":{"type":"func","owner":"*Channel","parameters":[],"/../":["Schedules - *scheduling.Schedules schedules for Channel"],"<<":[]},"NewSchedule":{"type":"func","owner":"*Channel","parameters":[{"schdl":"*scheduling.Schedule"},{"a":"...interface{}"}],"/../":["NewSchedule - implement scheduling.ScheduleHandler NewScheduler()"],"<<":[{"scdhlhndlr":"scheduling.ScheduleHandler"}]},"ServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"/../":["ServeHTTP - refer http.Handler"],"<<":[{}]},"ServeRW":{"type":"func","owner":"*Channel","parameters":[{"r":"io.Reader"},{"w":"io.Writer"},{"a":"...interface{}"}],"/../":["ServeRW - serve Reader Writer"],"<<":[{}]},"Stdio":{"type":"func","owner":"*Channel","parameters":[{"out":"*os.File"},{"in":"*os.File"},{"err":"*os.File"},{"a":"...interface{}"}],"/../":["Stdio - os.Stdout, os.Stdin"],"<<":[{}]},"Send":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":["Send inline request"],"<<":[{"rspr":"iorw.Reader"},{"err":"error"}]},"DefaultServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"io.Writer"},{"method":"string"},{"url":"string"},{"body":"io.Reader"},{"a":"...interface{}"}],"/../":["DefaultServeHTTP - helper to perform dummy ServeHttp request on channel"],"<<":[{}]},"DefaultServePath":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"DefaultServeRW":{"type":"func","owner":"*Channel","parameters":[{"w":"io.Writer"},{"url":"string"},{"r":"io.Reader"},{"a":"...interface{}"}],"/../":["DefaultServeRW - helper to perform dummy ServeRW request on channel"],"<<":[{}]}},"/p/":{"internalServePath":{"type":"func","owner":"*Channel","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"internalServeHTTP":{"type":"func","owner":"*Channel","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"},{"a":"...interface{}"}],"/../":[],"<<":[{}]}}}},"NewChannel":{"type":"func","owner":"","parameters":[],"/../":["NewChannel - instance"],"<<":[]},"GLOBALCHNL":{"type":"func","owner":"","parameters":[],"/../":["GLOBALCHNL - Global app *Channel"],"<<":[]},"Request":{"type":"type","base":"struct","/f/":{"/g/":{"Interrupted":"bool"},"/p/":{"atv":"*active.Active","actnslst":"*enumeration.List","lstexctngactng":"*Action","rqstrsngmngr":"*resources.ResourcingManager","chnl":"*Channel","rqstoffset":"int64","rqstendoffset":"int64","rqstoffsetmax":"int64","rqstmaxsize":"int64","mediarqst":"bool","initPath":"string","settings":"map[string]interface{}","args":"[]interface{}","startedWriting":"bool","startedReading":"bool","mimetype":"string","httpw":"http.ResponseWriter","httpstatus":"int","flshr":"http.Flusher","prms":"*parameters.Parameters","wbytes":"[]byte","wbytesi":"int","rqstw":"io.Writer","httpr":"*http.Request","cchdrqstcntnt":"*iorw.Buffer","cchdrqstcntntrdr":"*iorw.BuffReader","prtclmethod":"string","prtcl":"string","rmtHost":"string","lclHost":"string","zpw":"*gzip.Writer","rqstr":"iorw.Reader","objmap":"map[string]interface{}","intrnbuffs":"map[*iorw.Buffer]*iorw.Buffer","isFirstRequest":"bool","mphndlr":"*caching.MapHandler","dbms":"*rqstdbms","activecns":"map[string]*database.Connection","cmnds":"map[int]*osprc.Command","schdl":"*scheduling.Schedule","prntrqst":"*Request","fsutils":"*fsutils.FSUtils","webclient":"*web.ClientHandle","mqttmsg":"mqtt.Message","mqttevent":"mqtt.MqttEvent"}},"==":[],"/../":["Request -"],"/m/":{"/g/":{"RemoteAddr":{"type":"func","owner":"*Request","parameters":[],"/../":["RemoteAddr return remote Address of any network request"],"<<":[]},"LocalAddr":{"type":"func","owner":"*Request","parameters":[],"/../":["LocalAddr return local Address of any network request"],"<<":[]},"Resource":{"type":"func","owner":"*Request","parameters":[{"path":"string"}],"/../":["Resource - return mapped resource interface{} by path"],"<<":[{"rs":"interface{}"}]},"ProtoMethod":{"type":"func","owner":"*Request","parameters":[],"/../":["ProtoMethod - http e.g request METHOD"],"<<":[]},"Proto":{"type":"func","owner":"*Request","parameters":[],"/../":["Proto - protocol of request e.g HTTP/1.1"],"<<":[]},"Interrupt":{"type":"func","owner":"*Request","parameters":[],"/../":["Interrupt - Request execution"],"<<":[]},"AddPath":{"type":"func","owner":"*Request","parameters":[{"path":"...string"}],"/../":["AddPath - next resource path(s) to process"],"<<":[{}]},"ResponseHeaders":{"type":"func","owner":"*Request","parameters":[],"/../":["ResponseHeaders wrap arround current ResponseWriter.Header"],"<<":[]},"ResponseHeader":{"type":"func","owner":"*Request","parameters":[],"/../":["ResponseHeader wrap arround current ResponseWriter.Header"],"<<":[]},"SetResponseHeader":{"type":"func","owner":"*Request","parameters":[{"status":"int"}],"/../":["SetResponseStatus  set Response Status"],"<<":[{"hdr":"http.Header"}]},"RequestHeaders":{"type":"func","owner":"*Request","parameters":[],"/../":["RequestHeaders wrap arround current Request.Header"],"<<":[]},"RequestHeader":{"type":"func","owner":"*Request","parameters":[],"/../":["RequestHeader wrap arround current Request.Header"],"<<":[]},"Parameters":{"type":"func","owner":"*Request","parameters":[],"/../":["Parameters - Request web Parameters"],"<<":[]},"RequestBodyS":{"type":"func","owner":"*Request","parameters":[{"cached":"...bool"}],"/../":["RequestBodyS - wrap request.RequestBody() as string"],"<<":[{"s":"string"}]},"RequestBody":{"type":"func","owner":"*Request","parameters":[{"cached":"...bool"}],"/../":["RequestBody - RequestBody as bufio.Reader"],"<<":[{"bf":"*bufio.Reader"}]},"Close":{"type":"func","owner":"*Request","parameters":[],"/../":["Close - refer io.Closer"],"<<":[]},"Write":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Read":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"WebClient":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"Print":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":["Print helper Print(...interface) over *Request"],"<<":[{}]},"Println":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":["Println helper Println(...interface) over *Request"],"<<":[{}]},"Readln":{"type":"func","owner":"*Request","parameters":[],"/../":["Readln helper Readln() over *Request"],"<<":[]},"ReadLines":{"type":"func","owner":"*Request","parameters":[],"/../":["ReadLines helper ReadLines() over *Request"],"<<":[]},"ReadAll":{"type":"func","owner":"*Request","parameters":[],"/../":["ReadAll helper ReadAll() over *Request"],"<<":[]},"ExecutePath":{"type":"func","owner":"*Request","parameters":[{"path":"string"}],"/../":[],"<<":[{"err":"error"}]},"FS":{"type":"func","owner":"*Request","parameters":[],"/../":["FS return fsutils.FSUtils implementation for *Request"],"<<":[]},"Schedule":{"type":"func","owner":"*Request","parameters":[],"/../":["Schedule refer to scheduling.ScheduleHandler - StartedSchedule()"],"<<":[]},"StartedSchedule":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":["StartedSchedule refer to scheduling.ScheduleHandler - StartedSchedule()"],"<<":[{"err":"error"}]},"StoppedSchedule":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":["StoppedSchedule refer to scheduling.ScheduleHandler - StoppedSchedule()"],"<<":[{"err":"error"}]},"ShutdownSchedule":{"type":"func","owner":"*Request","parameters":[],"/../":["ShutdownSchedule refer to scheduling.ScheduleHandler - ShutdownSchedule()"],"<<":[]},"PrepActionArgs":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":["PrepActionArgs refer to scheduling.ScheduleHandler - PrepActionArgs()"],"<<":[{"preppedargs":"[]interface{}"},{"err":"error"}]}},"/p/":{"execute":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"/../":[],"<<":[{}]},"internWrite":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"internRead":{"type":"func","owner":"*Request","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"startReading":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"templateLookup":{"type":"func","owner":"*Request","parameters":[{"actn":"*Action"},{"tmpltpath":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"rdr":"io.Reader"},{"rdrerr":"error"}]},"processPaths":{"type":"func","owner":"*Request","parameters":[{"wrapup":"bool"}],"/../":[],"<<":[{}]},"copy":{"type":"func","owner":"*Request","parameters":[{"r":"io.Reader"},{"altw":"io.Writer"},{"istext":"bool"},{"isactive":"bool"},{"initpath":"string"}],"/../":[],"<<":[{}]},"wrapup":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"startWriting":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"executeHTTP":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"/../":[],"<<":[{}]},"executePath":{"type":"func","owner":"*Request","parameters":[{"path":"string"},{"interrupt":"func("}],"/../":[],"<<":[{}]},"ismediaExt":{"type":"func","owner":"*Request","parameters":[{"ext":"string"}],"/../":[],"<<":[{}]},"executeRW":{"type":"func","owner":"*Request","parameters":[{"interrupt":"func("}],"/../":[],"<<":[{")":"(err error)"}]},"detachAction":{"type":"func","owner":"*Request","parameters":[{"actn":"*Action"}],"/../":[],"<<":[{}]},"invokeAtv":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"removeCommand":{"type":"func","owner":"*Request","parameters":[{"cmdprcid":"int"}],"/../":[],"<<":[{}]},"removeBuffer":{"type":"func","owner":"*Request","parameters":[{"buff":"*iorw.Buffer"}],"/../":[],"<<":[{}]},"rscngmnger":{"type":"func","owner":"*Request","parameters":[],"/../":[],"<<":[]},"fsfind":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"}]},"fsls":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"}]},"fsmkdir":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...interface{}"}],"/../":[],"<<":[{}]},"fsmkdirall":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"...interface{}"}],"/../":[],"<<":[{}]},"fsrm":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"fstouch":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"fsset":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"fsappend":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"fsmv":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"},{"destpath":"string"}],"/../":[],"<<":[{}]},"fscat":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"fscats":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"fspipe":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"fspipes":{"type":"func","owner":"*Request","parameters":[{"rsngmngr":"*resources.ResourcingManager"},{"path":"string"}],"/../":[],"<<":[{}]},"executeSchdlRequest":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"executeSchdlDbms":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"executeSchdlCommand":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"executeSchdlScript":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"executeScheduleAction":{"type":"func","owner":"*Request","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]}}}},"Response":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"r":"*http.Request","w":"io.Writer","statusCode":"int","header":"http.Header","canWriteHeader":"bool"}},"==":[],"/../":["Response - struct"],"/m/":{"/g/":{"Header":{"type":"func","owner":"*Response","parameters":[],"/../":["Header refer to http.Header"],"<<":[]},"Write":{"type":"func","owner":"*Response","parameters":[{"p":"[]byte"}],"/../":["Writer refer to io.Writer"],"<<":[{"n":"int"},{"err":"error"}]},"WriteHeader":{"type":"func","owner":"*Response","parameters":[{"statusCode":"int"}],"/../":["WriteHeader - refer to http.ResponseWriter -> WriteHeader"],"<<":[{}]},"Flush":{"type":"func","owner":"*Response","parameters":[],"/../":["Flush refer to http.Flusher"],"<<":[]}},"/p/":{}}},"NewResponse":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"r":"*http.Request"}],"/../":["NewResponse - Instance of Response http.ResponseWriter helper"],"<<":[{"resp":"*Response"}]},"RequestScheduleAction":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rqst":"*Request","atvfunc":"func(goja.FunctionCall) goja.Value"}},"==":["*scheduling.ScheduleAction"],"/../":["RequestScheduleAction - struct implementing scheduling.ActionHandler and wrapping *Request"],"/m/":{"/g/":{"OnExecuteAction":{"type":"func","owner":"*RequestScheduleAction","parameters":[{"a":"...interface{}"}],"/../":["OnExecuteAction implementioan that is called by *scheduling.ScheduleAction ExecuteAction()"],"<<":[{"result":"bool"},{"err":"error"}]}},"/p/":{}}}},"/p/":{"newAction":{"type":"func","owner":"","parameters":[{"rqst":"*Request"},{"rspath":"string"}],"/../":[],"<<":[{"actn":"*Action"}]},"executeAction":{"type":"func","owner":"","parameters":[{"actn":"*Action"}],"/../":[],"<<":[{"err":"error"}]},"rqstdbms":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"dbms":"*database.DBMS","rqst":"*Request"}},"==":[],"/../":[],"/m/":{"/g/":{"Query":{"type":"func","owner":"*rqstdbms","parameters":[{"a":"interface{}"},{"qryargs":"...interface{}"}],"/../":[],"<<":[{"reader":"*database.Reader"}]},"Execute":{"type":"func","owner":"*rqstdbms","parameters":[{"a":"interface{}"},{"excargs":"...interface{}"}],"/../":[],"<<":[{"exctr":"*database.Executor"}]},"InOutS":{"type":"func","owner":"*rqstdbms","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"out":"string"},{"err":"error"}]},"InOut":{"type":"func","owner":"*rqstdbms","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"Connection":{"type":"func","owner":"*rqstdbms","parameters":[{"alias":"string"}],"/../":[],"<<":[{"cn":"*database.Connection"}]},"Connections":{"type":"func","owner":"*rqstdbms","parameters":[],"/../":[],"<<":[]},"RegisterConnection":{"type":"func","owner":"*rqstdbms","parameters":[{"alias":"string"},{"driver":"string"},{"datasource":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"registered":"bool"}]}},"/p/":{}}},"internalNewRequest":{"type":"func","owner":"","parameters":[{"initPath":"string"},{"chnl":"*Channel"},{"prntrqst":"*Request"},{"rdr":"io.Reader"},{"wtr":"io.Writer"},{"httpw":"http.ResponseWriter"},{"httpr":"*http.Request"},{"httpflshr":"http.Flusher"},{"a":"...interface{}"}],"/../":[],"<<":[{"rqst":"*Request"},{"interrupt":"func()"}]},"internalExecuteRequest":{"type":"func","owner":"","parameters":[{"rqst":"*Request"},{"interrupt":"func("}],"/../":[],"<<":[{}]},"processingRequestIO":{"type":"func","owner":"","parameters":[{"initpath":"string"},{"chnl":"*Channel"},{"prntrqst":"*Request"},{"rdr":"io.Reader"},{"wtr":"io.Writer"},{"httpw":"http.ResponseWriter"},{"httpflshr":"http.Flusher"},{"httpr":"*http.Request"},{"a":"...interface{}"}],"/../":[],"<<":[{}]}}}},"database":{"/":{"/g/":{"Connection":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"dbms":"*DBMS","driverName,":"dataSourceName string","dbi":"interface{}","db":"*sql.DB","args":"[]interface{}","dbinvoker":"func(string, ...interface{}) (*sql.DB, error)"}},"==":[],"/../":["Connection - struct"],"/m/":{"/g/":{"IsRemote":{"type":"func","owner":"*Connection","parameters":[],"/../":[],"<<":[]},"Ping":{"type":"func","owner":"*Connection","parameters":[],"/../":[],"<<":[]},"DataSource":{"type":"func","owner":"*Connection","parameters":[],"/../":[],"<<":[]},"Driver":{"type":"func","owner":"*Connection","parameters":[],"/../":[],"<<":[]},"IsConnected":{"type":"func","owner":"*Connection","parameters":[],"/../":[],"<<":[]},"GblExecute":{"type":"func","owner":"*Connection","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"/../":["GblExecute - public for query()*Executor"],"<<":[{"exctr":"*Executor"},{"err":"error"}]},"GblQuery":{"type":"func","owner":"*Connection","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"/../":["GblQuery - public for query() *Reader"],"<<":[{"reader":"*Reader"},{"err":"error"}]},"InOut":{"type":"func","owner":"*Connection","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":["InOut - OO{ in interface{} -> out io.Writer } loop till no input"],"<<":[{}]}},"/p/":{"inReaderOut":{"type":"func","owner":"*Connection","parameters":[{"rin":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]},"inMapOut":{"type":"func","owner":"*Connection","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]}}}},"NewConnection":{"type":"func","owner":"","parameters":[{"dbms":"*DBMS"},{},{"dataSourceName":"string"}],"/../":["NewConnection - dbms,driver name and datasource name (cn-string)"],"<<":[{"cn":"*Connection"}]},"CSVReader":{"type":"type","base":"struct","/f/":{"/g/":{"Headers":"bool","ColDelim":"string","RowDelim":"string","IncludeEOF":"bool","AltHeaders":"[]string"},"/p/":{"rdr":"*Reader","bfr":"*bufio.Reader","err":"error","pr":"*io.PipeReader","pw":"*io.PipeWriter"}},"==":[],"/../":["CSVReader -"],"/m/":{"/g/":{"Read":{"type":"func","owner":"*CSVReader","parameters":[{"p":"[]byte"}],"/../":["Read - refer to io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*CSVReader","parameters":[],"/../":["ReadRune - refer to io.RuneReader"],"<<":[]}},"/p/":{}}},"NewCSVReader":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"},{"err":"error"},{"a":"...interface{}"}],"/../":["NewCSVReader - over rdr*Reader"],"<<":[{"csvr":"*CSVReader"}]},"DBMS":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"cnctns":"map[string]*Connection","drivers":"map[string]func(string, ...interface{}) (*sql.DB, error)"}},"==":[],"/../":["DBMS - struct"],"/m/":{"/g/":{"Connection":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"}],"/../":["Connection return registered connections"],"<<":[{"cn":"*Connection"}]},"Connections":{"type":"func","owner":"*DBMS","parameters":[],"/../":["Connections return list of registered connection aliases"],"<<":[]},"RegisterConnection":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"driver":"string"},{"datasource":"string"},{"a":"...interface{}"}],"/../":["RegisterConnection - alias, driverName, dataSourceName"],"<<":[{"registered":"bool"}]},"RegisterDriver":{"type":"func","owner":"*DBMS","parameters":[{"driver":"string"},{"invokedbcall":"func(string"},{}],"/../":["RegisterDriver - register driver name for invokable db call"],"<<":[{},{}]},"AliasExists":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"}],"/../":["AliasExists - alias exist <= exist[true], dbcn[*Connection]"],"<<":[{"exists":"bool"},{"dbcn":"*Connection"}]},"Query":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"query":"interface{}"},{"prms":"...interface{}"}],"/../":[],"<<":[{"reader":"*Reader"}]},"QueryJSON":{"type":"func","owner":"*DBMS","parameters":[{"query":"interface{}"},{"prms":"...interface{}"}],"/../":[],"<<":[{"reader":"*Reader"}]},"InOutS":{"type":"func","owner":"*DBMS","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"/../":["InOutS - OO{ in io.Reader -> out string } loop till no input"],"<<":[{"out":"string"},{"err":"error"}]},"InOut":{"type":"func","owner":"*DBMS","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"<<":[{"err":"error"}]},"Execute":{"type":"func","owner":"*DBMS","parameters":[{"alias":"string"},{"query":"interface{}"},{"prms":"...interface{}"}],"/../":[],"<<":[{"exctr":"*Executor"}]}},"/p/":{"driverDbInvoker":{"type":"func","owner":"*DBMS","parameters":[{"driver":"string"}],"/../":[],"<<":[{"dbinvoker":"func(string"},{"...interface{})":"(*sql.DB"},{},{"hasdbinvoker":"bool"}]},"inReaderOut":{"type":"func","owner":"*DBMS","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]},"inMapOut":{"type":"func","owner":"*DBMS","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]}}}},"NewDBMS":{"type":"func","owner":"","parameters":[],"/../":["NewDBMS - instance"],"<<":[]},"GLOBALDBMS":{"type":"func","owner":"","parameters":[],"/../":["GLOBALDBMS - Global DBMS instance"],"<<":[]},"Executor":{"type":"type","base":"struct","/f/":{"/g/":{"OnSuccess":"interface{}","OnError":"interface{}","OnFinalize":"interface{}"},"/p/":{"orgstmnt":"string","stmnt":"string","jsndcdr":"*json.Decoder","lastdlm":"string","tknlvl":"int","db":"*sql.DB","cn":"*Connection","stmt":"*sql.Stmt","lasterr":"error","lastInsertID":"int64","rowsAffected":"int64","mappedArgs":"map[string]interface{}","argNames":"[]string","qryArgs":"[]interface{}","script":"active.Runtime","canRepeat":"bool"}},"==":[],"/../":["Executor - struct"],"/m/":{"/g/":{"Repeat":{"type":"func","owner":"*Executor","parameters":[{"args":"...interface{}"}],"/../":["Repeat - repeat last query by repopulating parameters but dont regenerate last statement"],"<<":[{"err":"error"}]},"ToJSON":{"type":"func","owner":"*Executor","parameters":[{"w":"io.Writer"}],"/../":["ToJSON write *Executor out to json"],"<<":[{"err":"error"}]},"JSONReader":{"type":"func","owner":"*Executor","parameters":[],"/../":["JSONReader return *JSONReader"],"<<":[]},"JSON":{"type":"func","owner":"*Executor","parameters":[],"/../":["JSON execute *Executor and return json as string"],"<<":[]},"Close":{"type":"func","owner":"*Executor","parameters":[],"/../":["Close - Executor"],"<<":[]},"Err":{"type":"func","owner":"*Executor","parameters":[],"/../":["Err - return last Error"],"<<":[]}},"/p/":{"isRemote":{"type":"func","owner":"*Executor","parameters":[],"/../":[],"<<":[]},"execute":{"type":"func","owner":"*Executor","parameters":[{"forrows":"...bool"}],"/../":[],"<<":[{"rws":"*sql.Rows"},{"cltpes":"[]*ColumnType"},{"cls":"[]string"}]},"webquery":{"type":"func","owner":"*Executor","parameters":[{"forrows":"bool"},{"out":"io.Writer"},{"iorags":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]}}}},"ExecError":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"err":"error","stmnt":"string"}},"==":[],"/../":["ExecError - struct"],"/m/":{"/g/":{"Statement":{"type":"func","owner":"*ExecError","parameters":[],"/../":["Statement return statement executed that caused error"],"<<":[]},"Error":{"type":"func","owner":"*ExecError","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"JSONReader":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rdr":"*Reader","bfr":"*bufio.Reader","exctr":"*Executor","pr":"*io.PipeReader","pw":"*io.PipeWriter","err":"error"}},"==":[],"/../":["JSONReader - struct"],"/m/":{"/g/":{"Read":{"type":"func","owner":"*JSONReader","parameters":[{"p":"[]byte"}],"/../":["Read - refer to io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*JSONReader","parameters":[],"/../":["ReadRune - refer to io.RuneReader"],"<<":[]}},"/p/":{}}},"NewJSONReader":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"},{"exctr":"*Executor"},{"err":"error"}],"/../":["NewJSONReader - over rdr*Reader or exctr*Executor"],"<<":[{"jsnr":"*JSONReader"}]},"ReaderHandle":{"type":"type","base":"interface","/f/":{"/g/":{"ColumnTypes":"() []ColumnTypeHandle","Columns":"() []string","Data":"() []interface{}","Next":"() (bool, error)","ToJSON":"(w io.Writer) error","JSON":"() (string, error)","Close":"() error"},"/p/":{}},"==":[],"/../":[]},"JSONEntry":{"type":"type","base":"interface","/f/":{"/g/":{"JSON":"() string"},"/p/":{}},"==":[],"/../":[]},"JSONDataEntry":{"type":"type","base":"interface","/f/":{"/g/":{"JSON":"() string"},"/p/":{}},"==":[],"/../":[]},"Reader":{"type":"type","base":"struct","/f/":{"/g/":{"OnColumns":"interface{}","OnRow":"interface{}","OnValidData":"interface{}"},"/p/":{"rws":"*sql.Rows","rownr":"int64","strtrdng":"bool","isfocused":"bool","islast":"bool","isfirst":"bool","cls":"[]string","cltpes":"[]*ColumnType","data":"[]interface{}","datamap":"map[string]interface{}","dispdata":"[]interface{}","dataref":"[]interface{}"}},"==":["*Executor"],"/../":["Reader - struct"],"/m/":{"/g/":{"ColumnTypes":{"type":"func","owner":"*Reader","parameters":[],"/../":["ColumnTypes return Column types in form of a slice, 'array', of []*ColumnType values"],"<<":[]},"Columns":{"type":"func","owner":"*Reader","parameters":[],"/../":["Columns return Column names in form of a slice, 'array', of string values"],"<<":[]},"Data":{"type":"func","owner":"*Reader","parameters":[],"/../":["Data return Displayable data in the form of a slice, 'array', of interface{} values"],"<<":[]},"DataMap":{"type":"func","owner":"*Reader","parameters":[],"/../":["DataMap return Displayable data in the form of a map[string]interface{} column and values"],"<<":[]},"DATAJSONFPrintln":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{"err":"error"}]},"DATAJSONFPrint":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{"err":"error"}]},"IsFocused":{"type":"func","owner":"*Reader","parameters":[],"/../":["IsFocused - indicate if Reader focus is on a record"],"<<":[]},"IsMore":{"type":"func","owner":"*Reader","parameters":[],"/../":["IsMore - indicate if Reader is able to more records"],"<<":[]},"IsLast":{"type":"func","owner":"*Reader","parameters":[],"/../":["IsLast - indicate if Reader focus is on last record"],"<<":[]},"IsFirst":{"type":"func","owner":"*Reader","parameters":[],"/../":["IsFirst - indicate if Reader focus is on first record"],"<<":[]},"Next":{"type":"func","owner":"*Reader","parameters":[],"/../":[" or false if the end is reached","Next return true if able to move focus of Reader to the next underlying record"],"<<":[]},"ToJSON":{"type":"func","owner":"*Reader","parameters":[{"w":"io.Writer"}],"/../":["ToJSON write *Reader out to json"],"<<":[{"err":"error"}]},"JSONReader":{"type":"func","owner":"*Reader","parameters":[],"/../":["JSONReader return *JSONReader"],"<<":[]},"JSON":{"type":"func","owner":"*Reader","parameters":[],"/../":["JSON readall *Readee and return json as string"],"<<":[]},"Close":{"type":"func","owner":"*Reader","parameters":[],"/../":["After this action the Reader is 'empty' or cleaned up in a golang world","Close the Reader as well as the underlying Executor related to this Reader"],"<<":[]},"Repeat":{"type":"func","owner":"*Reader","parameters":[{"a":"...interface{}"}],"/../":["Repeat - repeat last query by repopulating parameters but dont regenerate last statement"],"<<":[{"err":"error"}]}},"/p/":{"internNext":{"type":"func","owner":"*Reader","parameters":[],"/../":[],"<<":[]},"execute":{"type":"func","owner":"*Reader","parameters":[],"/../":[],"<<":[]}}}},"ColumnTypeHandle":{"type":"type","base":"interface","/f/":{"/g/":{"Name":"() string","Numeric":"() bool","HasNullable":"() bool","HasLength":"() bool","HasPrecisionScale":"() bool","Nullable":"() bool","Length":"() int64","DatabaseType":"() string","Precision":"() int64","Scale":"() int64","Type":"() reflect.Type"},"/p/":{}},"==":[],"/../":["ColumnTypeHandle interface defining column type api"]},"ColumnType":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"name":"string","hasNullable":"bool","hasLength":"bool","hasPrecisionScale":"bool","nullable":"bool","length":"int64","databaseType":"string","precision":"int64","scale":"int64","scanType":"reflect.Type"}},"==":[],"/../":["ColumnType structure defining column definition"],"/m/":{"/g/":{"Name":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Name ColumnType.Name()"],"<<":[]},"Numeric":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Numeric ColumnType is Numeric() bool"],"<<":[]},"HasNullable":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["HasNullable ColumnType content has NULL able content"],"<<":[]},"HasLength":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["HasLength ColumnType content has Length definition"],"<<":[]},"HasPrecisionScale":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["HasPrecisionScale ColumnType content has PrecisionScale"],"<<":[]},"Nullable":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Nullable ColumnType content is Nullable"],"<<":[]},"Length":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Length ColumnType content lenth must be used in conjunction with HasLength"],"<<":[]},"DatabaseType":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["DatabaseType ColumnType underlying db type as defined by driver of Connection"],"<<":[]},"Precision":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Precision ColumnType numeric Precision. Used in conjunction with HasPrecisionScale"],"<<":[]},"Scale":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Scale ColumnType Scale. Used in conjunction with HasPrecisionScale"],"<<":[]},"Type":{"type":"func","owner":"*ColumnType","parameters":[],"/../":["Type ColumnType reflect.Type as specified by golang sql/database"],"<<":[]}},"/p/":{}}},"Field":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rdr":"*Reader","index":"int"}},"==":[],"/../":["Field - struct"],"/m/":{"/g/":{"Value":{"type":"func","owner":"*Field","parameters":[],"/../":["Value - of Field"],"<<":[]},"Name":{"type":"func","owner":"*Field","parameters":[],"/../":["Name - of Field"],"<<":[]},"Type":{"type":"func","owner":"*Field","parameters":[],"/../":["Type - ColumnType of Field"],"<<":[]}},"/p/":{}}},"Statement":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"cn":"*Connection"}},"==":[],"/../":["Statement - struct"]}},"/p/":{"runeReaderToString":{"type":"func","owner":"","parameters":[{"rnr":"io.RuneReader"}],"/../":[],"<<":[{"s":"string"}]},"parseParam":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"},{"prmval":"interface{}"},{"argi":"int"}],"/../":[],"<<":[{"s":"string"}]},"queryToStatement":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"},{"query":"interface{}"},{"args":"...interface{}"}],"/../":[],"<<":[{"stmnt":"string"},{"validNames":"[]string"},{"mappedVals":"map[string]interface{}"}]},"internquery":{"type":"func","owner":"","parameters":[{"cn":"*Connection"},{"query":"interface{}"},{"noreader":"bool"},{},{},{"onfinalize":"interface{}"},{"args":"...interface{}"}],"/../":[],"<<":[{"reader":"*Reader"},{"exctr":"*Executor"},{"err":"error"}]},"invokeError":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"err":"error"},{"onerror":"interface{}"}],"/../":[],"<<":[{}]},"invokeSuccess":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onsuccess":"interface{}"},{"args":"...interface{}"}],"/../":[],"<<":[{}]},"invokeFinalize":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onfinalize":"interface{}"}],"/../":[],"<<":[{}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"newExecutor":{"type":"func","owner":"","parameters":[{"cn":"*Connection"},{"db":"*sql.DB"},{"query":"interface{}"},{"canRepeat":"bool"},{"script":"active.Runtime"},{},{},{"onfinalize":"interface{}"},{"args":"...interface{}"}],"/../":[],"<<":[{"exctr":"*Executor"}]},"getTypeByName":{"type":"func","owner":"","parameters":[{"tpmn":"string"}],"/../":[],"<<":[{"t":"reflect.Type"}]},"newExecErr":{"type":"func","owner":"","parameters":[{"err":"error"},{"stmnt":"string"}],"/../":[],"<<":[{"execerr":"*ExecError"}]},"populateRecordData":{"type":"func","owner":"","parameters":[{"rdr":"*Reader"}],"/../":[],"<<":[{"err":"error"}]},"cleanupStringData":{"type":"func","owner":"","parameters":[{"str":"string"}],"/../":[],"<<":[{"strcleaned":"string"}]},"castSQLTypeValue":{"type":"func","owner":"","parameters":[{"valToCast":"interface{}"},{"colType":"*ColumnType"}],"/../":[],"<<":[{"castedVal":"interface{}"}]},"newReader":{"type":"func","owner":"","parameters":[{"exctr":"*Executor"}],"/../":[],"<<":[{"rdr":"*Reader"}]},"invokeDataValid":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"ondatavalid":"interface{}"},{"rownr":"int64"},{"rdr":"*Reader"}],"/../":[],"<<":[{"validdata":"bool"}]},"invokeRow":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"onrow":"interface{}"},{"rownr":"int64"},{"rdr":"*Reader"}],"/../":[],"<<":[{"nextrow":"bool"}]},"invokeColumns":{"type":"func","owner":"","parameters":[{"script":"active.Runtime"},{"oncolumns":"interface{}"},{"rdr":"*Reader"}],"/../":[],"<<":[{}]},"columnTypes":{"type":"func","owner":"","parameters":[{"sqlcoltypes":"[]*sql.ColumnType"},{"cls":"[]string"}],"/../":[],"<<":[{"coltypes":"[]*ColumnType"}]}}},"db2":{"/":{"/g/":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"/../":["Open -wrap sql.Open(\"mysql\", datasource)"],"<<":[{},{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"mysql":{"/":{"/g/":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"/../":["Open -wrap sql.Open(\"mysql\", datasource)"],"<<":[{},{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"ora":{"/":{"/g/":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"/../":["Open -wrap sql.Open(\"oracle\", datasource)"],"<<":[{},{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"postgres":{"/":{"/g/":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"/../":["Open -wrap sql.Open(\"pgx\", datasource)"],"<<":[{},{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"sqlserver":{"/":{"/g/":{"Open":{"type":"func","owner":"","parameters":[{"datasource":"string"}],"/../":["Open -wrap sql.Open(\"sqlserver\", datasource)"],"<<":[{},{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}}},"enumeration":{"/":{"/g/":{"Chain":{"type":"type","base":"struct","/f/":{"/g/":{"DoLink":"func(*Link) (bool, error)","DoneLink":"func(*Link) error","ErrorDoneLink":"func(*Link, error) bool","ErrorDoLink":"func(*Link, error) bool"},"/p/":{"head":"*Link","tale":"*Link","reversemap":"map[*Link]*Link","forwardmap":"map[*Link]*Link"}},"==":[],"/../":["Chain struct"],"/m/":{"/g/":{"Add":{"type":"func","owner":"*Chain","parameters":[{"value":"interface{}"},{"settings":"...map[string]interface{}"}],"/../":["Add value interface{} and return *Link in *Chain that represents value interface{}"],"<<":[{"lnk":"*Link"}]},"InsertBefore":{"type":"func","owner":"*Chain","parameters":[{"settings":"map[string]interface{}"},{"lnk":"*Link"},{"values":"...interface{}"}],"/../":["InsertBefore insert values ...interface{} before lnk*Link"],"<<":[{}]},"InsertAfter":{"type":"func","owner":"*Chain","parameters":[{"settings":"map[string]interface{}"},{"lnk":"*Link"},{"values":"...interface{}"}],"/../":["InsertAfter insert values ...interface{} after lnk*Link"],"<<":[{}]},"Remove":{"type":"func","owner":"*Chain","parameters":[{"link":"...*Link"}],"/../":["Remove ...*Link from *Chain - note *Link is also disposed"],"<<":[{"rmvd":"bool"}]},"Back":{"type":"func","owner":"*Chain","parameters":[],"/../":["Back of chain"],"<<":[]},"Front":{"type":"func","owner":"*Chain","parameters":[],"/../":["Front of chain"],"<<":[]},"Size":{"type":"func","owner":"*Chain","parameters":[],"/../":["Size of chain"],"<<":[]},"Do":{"type":"func","owner":"*Chain","parameters":[{"dolnk":"FuncDoLink"},{"errdolnk":"FuncErrorDoLink"},{"donelnk":"FuncDoneLink"},{"errdonelnk":"FuncErrorDoneLink"}],"/../":[" iterate until end or dolnk return true or error","Do dolnk (func(*Link) (boolm,error)) iterate over *Chain"],"<<":[{"diddo":"bool"}]}},"/p/":{"newLink":{"type":"func","owner":"*Chain","parameters":[{"value":"interface{}"},{"settings":"...map[string]interface{}"}],"/../":[],"<<":[{"lnk":"*Link"}]}}}},"NewChain":{"type":"func","owner":"","parameters":[{"settings":"...map[string]interface{}"}],"/../":["NewChain isntance"],"<<":[{"chn":"*Chain"}]},"Link":{"type":"type","base":"struct","/f/":{"/g/":{"DoLink":"func(*Link) (bool, error)","DoneLink":"func(*Link) error","ErrorDoneLink":"func(*Link, error) bool","ErrorDoLink":"func(*Link, error) bool","Removed":"func(*Link)"},"/p/":{"chn":"*Chain","value":"interface{}","done":"bool"}},"==":[],"/../":["Link struct"],"/m/":{"/g/":{"Done":{"type":"func","owner":"*Link","parameters":[],"/../":["Done  set lnk.done to true"],"<<":[]},"Value":{"type":"func","owner":"*Link","parameters":[],"/../":["Value of *Link"],"<<":[]},"Next":{"type":"func","owner":"*Link","parameters":[],"/../":["Next *Link"],"<<":[]},"NextValue":{"type":"func","owner":"*Link","parameters":[],"/../":["NextValue *Link value interface{}"],"<<":[]},"Prev":{"type":"func","owner":"*Link","parameters":[],"/../":["Prev *Link"],"<<":[]},"PrevValue":{"type":"func","owner":"*Link","parameters":[],"/../":["PrevValue *Link value interface{}"],"<<":[]},"Chain":{"type":"func","owner":"*Link","parameters":[],"/../":["Chain that *Link belongs to"],"<<":[]}},"/p/":{}}},"Node":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"lst":"*List","val":"interface{}"}},"==":[],"/../":[],"/m/":{"/g/":{"Value":{"type":"func","owner":"*Node","parameters":[],"/../":[],"<<":[]},"Next":{"type":"func","owner":"*Node","parameters":[],"/../":[],"<<":[]},"Previous":{"type":"func","owner":"*Node","parameters":[],"/../":[],"<<":[]},"InsertAfter":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"InsertBefore":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Set":{"type":"func","owner":"*Node","parameters":[{"val":"interface{}"},{"forceset":"...bool"}],"/../":[],"<<":[{}]},"Dispose":{"type":"func","owner":"*Node","parameters":[{"eventRemoved":"func(nde *Node"},{"val":"interface{}"}],"/../":[],"<<":[{},{"disposingRemoving":"func(nde *Node"},{"val":"interface{}))"}]}},"/p/":{}}},"List":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"head":"*Node","tail":"*Node","vnds":"map[interface{}]*Node","reversemap":"map[*Node]*Node","forwardmap":"map[*Node]*Node","distinct":"bool"}},"==":[],"/../":[],"/m/":{"/g/":{"Head":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"Tail":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"IsDistinct":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"Length":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"ValueNode":{"type":"func","owner":"*List","parameters":[{"val":"interface{}"}],"/../":[],"<<":[{"nde":"*Node"}]},"Dispose":{"type":"func","owner":"*List","parameters":[{"eventRemoving":"func(*Node"},{}],"/../":[],"<<":[{},{"eventDisposing":"func(*Node"},{}]},"Push":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"/../":[],"<<":[{},{"mdfied":"func(bool"},{},{},{},{},{"val":"...interface{}) int"}]},"Shift":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"/../":[],"<<":[{},{"mdfied":"func(bool"},{},{},{},{},{"val":"...interface{}) int"}]},"Pop":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"Unshift":{"type":"func","owner":"*List","parameters":[],"/../":[],"<<":[]},"InsertBefore":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"/../":[],"<<":[{},{"mdfied":"func(bool"},{},{},{},{},{"ndefrm":"*Node"},{"val":"...interface{})"}]},"InsertAfter":{"type":"func","owner":"*List","parameters":[{"mdfying":"func(interface{}"}],"/../":[],"<<":[{},{"mdfied":"func(bool"},{},{},{},{},{"ndefrm":"*Node"},{"val":"...interface{})"}]}},"/p/":{"newNode":{"type":"func","owner":"*List","parameters":[{"val":"interface{}"}],"/../":[],"<<":[{"nde":"*Node"}]}}}},"NewList":{"type":"func","owner":"","parameters":[{"distinct":"...bool"}],"/../":[],"<<":[{"lst":"*List"}]}},"/p/":{"insert":{"type":"func","owner":"","parameters":[{"cm":"chainmode"},{"chn":"*Chain"},{"lnk":"*Link"},{"slnks":"...*Link"}],"/../":[],"<<":[{}]},"previousNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"}],"/../":[],"<<":[{"prvnde":"*Node"}]},"nextNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"}],"/../":[],"<<":[{"nxtnde":"*Node"}]},"disposeNode":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"nde":"*Node"},{"eventRemoved":"func(*Node"},{}],"/../":[],"<<":[{},{"eventDisposing":"func(*Node"},{}]},"internalInput":{"type":"func","owner":"","parameters":[{"lst":"*List"},{"modifying":"func(value interface{}"}],"/../":[],"<<":[{},{"modified":"func(changed bool"},{"validval":"bool"},{"vindex":"int"},{"node":"*Node"},{"value":"interface{})"},{"ndefrm":"*Node"},{"action":"listaction"},{"val":"...interface{})"}]}}}},"env":{"/":{"/g/":{"ShutdownEnvironment":{"type":"func","owner":"","parameters":[],"/../":["ShutdownEnvironment - cleanup (shutdown) environment"],"<<":[]},"WrapupCall":{"type":"func","owner":"","parameters":[{"wrpupcall":"...func("}],"/../":["WrapupCall - set WrapupCall"],"<<":[{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"fsutils":{"/":{"/g/":{"LS":{"type":"func","owner":"","parameters":[{"path":"string"},{"altpath":"...string"}],"/../":["LS List dir content"],"<<":[{"finfos":"[]FileInfo"},{"err":"error"}]},"FileInfo":{"type":"type","base":"interface","/f/":{"/g/":{"Name":"() string         // base name of the file","Path":"() string         // relative path of the file","AbsolutePath":"() string // absolute path of the file","Size":"() int64          // length in bytes for regular files; system-dependent for others","Mode":"() os.FileMode    // file mode bits","ModTime":"() time.Time   // modification time","IsDir":"() bool          // abbreviation for Mode().IsDir()","JSON":"() string         //json representation as a string"},"/p/":{}},"==":[],"/../":[" A FileInfo describes a file"]},"FIND":{"type":"func","owner":"","parameters":[{"path":"string"},{"altpath":"...string"}],"/../":["FIND list recursive dir content"],"<<":[{"finfos":"[]FileInfo"},{"err":"error"}]},"MKDIR":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["MKDIR make directory"],"<<":[{}]},"MKDIRALL":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["MKDIRALL make directory with all necessary parents"],"<<":[{}]},"RM":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["RM Remove file or directory recursive"],"<<":[{"err":"error"}]},"MV":{"type":"func","owner":"","parameters":[{"path":"string"},{"destpath":"string"}],"/../":["MV Move file or directory"],"<<":[{"err":"error"}]},"TOUCH":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":[" if the file already exists then update the modified time of the file","TOUCH Create an empty file if the file doesn’t already exist or"],"<<":[{"err":"error"}]},"CAT":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["CAT return file content if file exists else empty string"],"<<":[{"r":"io.Reader"},{"err":"error"}]},"CATS":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["CATS return file content if file exists else empty string"],"<<":[{"cntnt":"string"},{"err":"error"}]},"PIPE":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["PIPE return file content if file exists else empty string"],"<<":[{"r":"io.Reader"},{"err":"error"}]},"PIPES":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":["PIPES return file content if file exists else empty string"],"<<":[{"cntnt":"string"},{"err":"error"}]},"SET":{"type":"func","owner":"","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":["SET if file exists replace content else create file and append content"],"<<":[{"err":"error"}]},"APPEND":{"type":"func","owner":"","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":["APPEND if file exists append content else create file and append content"],"<<":[{"err":"error"}]},"FINFOPATHSJSON":{"type":"func","owner":"","parameters":[{"a":"...FileInfo"}],"/../":["FINFOPATHSJSON []FileInfo to JSON array"],"<<":[{"s":"string"}]},"FSUtils":{"type":"type","base":"struct","/f/":{"/g/":{"LS":"func(path ...string) (finfos []FileInfo) `json:\"ls\"`","FIND":"func(path ...string) (finfos []FileInfo) `json:\"find\"`","MKDIR":"func(path ...interface{}) bool `json:\"mkdir\"`","MKDIRALL":"func(path ...interface{}) bool `json:\"mkdirall\"`","RM":"func(path string) bool `json:\"rm\"`","MV":"func(path string, destpath string) bool `json:\"mv\"`","TOUCH":"func(path string) bool `json:\"touch\"`","FINFOPATHSJSON":"func(a ...FileInfo) (s string) `json:\"finfopathsjson\"`","PIPE":"func(path string) (r io.Reader) `json:\"pipe\"`","PIPES":"func(path string) (s string) `json:\"pipes\"`","CAT":"func(path string) (r io.Reader) `json:\"cat\"`","CATS":"func(path string) (s string) `json:\"cats\"`","SET":"func(path string, a ...interface{}) bool `json:\"set\"`","APPEND":"func(path string, a ...interface{}) bool `json:\"append\"`","DUMMYFINFO":"func(name string, path string, absolutepath string, size int64, mod os.FileMode, modtime time.Time) FileInfo `json:\"dummyfino\"`"},"/p/":{}},"==":[],"/../":["FSUtils struct"]},"NewFSUtils":{"type":"func","owner":"","parameters":[],"/../":["NewFSUtils return instance of FSUtils"],"<<":[]}},"/p/":{"internalFind":{"type":"func","owner":"","parameters":[{"fi":"os.FileInfo"},{"rootpath":"string"},{"altrootpath":"string"}],"/../":[],"<<":[{"finfos":"[]os.FileInfo"},{"fipath":"string"},{"fialtpath":"string"},{"err":"error"}]},"fileInfo":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"name":"string","path":"string","absolutepath":"string","size":"int64","mode":"os.FileMode","modtime":"time.Time"}},"==":[],"/../":[],"/m/":{"/g/":{"Name":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"Path":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"AbsolutePath":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"Size":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"Mode":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"ModTime":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"IsDir":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]},"JSON":{"type":"func","owner":"*fileInfo","parameters":[],"/../":[],"<<":[]}},"/p/":{}}}}}},"iorw":{"/":{"/g/":{"Printer":{"type":"type","base":"interface","/f/":{"/g/":{"Print":"(a ...interface{})","Println":"(a ...interface{})","Write":"(p []byte) (int, error)"},"/p/":{}},"==":[],"/../":["Printer - interface"]},"Reader":{"type":"type","base":"interface","/f/":{"/g/":{"Read":"([]byte) (int, error)","ReadRune":"() (rune, int, error)","Readln":"() (string, error)","Readlines":"() ([]string, error)","ReadAll":"() (string, error)"},"/p/":{}},"==":[],"/../":["Reader - interface"]},"PrinterReader":{"type":"type","base":"interface","/f/":{"/g/":{},"/p/":{}},"==":[],"/../":["PrinterReader - interface"]},"Fprint":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"/../":["Fprint - refer to fmt.Fprint"],"<<":[{}]},"Fprintln":{"type":"func","owner":"","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"/../":["Fprintln - refer to fmt.Fprintln"],"<<":[{}]},"ReadLines":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"/../":["ReadLines from r io.Reader as lines []string"],"<<":[{"lines":"[]string"},{"err":"error"}]},"ReadLine":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"/../":["ReadLine from r io.Reader as s string"],"<<":[{"s":"string"},{"err":"error"}]},"ReaderToString":{"type":"func","owner":"","parameters":[{"r":"interface{}"}],"/../":["ReaderToString read reader and return content as string"],"<<":[{"s":"string"},{"err":"error"}]},"ReadRunesEOFFunc":{"type":"func","owner":"","parameters":[{"r":"interface{}"},{"fncrne":"func(rune"}],"/../":["ReadRunesEOFFunc read runes from r io.Reader and call fncrne func(rune) error"],"<<":[{"error)":"(err error)"}]},"RunesToUTF8":{"type":"func","owner":"","parameters":[{"rs":"[]rune"}],"/../":[],"<<":[{}]},"Buffer":{"type":"type","base":"struct","/f/":{"/g/":{"OnClose":"func(*Buffer)"},"/p/":{"buffer":"[][]byte","bytes":"[]byte","bytesi":"int","lck":"*sync.RWMutex","bufrs":"map[*BuffReader]*BuffReader"}},"==":[],"/../":["Buffer -"],"/m/":{"/g/":{"BuffersLen":{"type":"func","owner":"*Buffer","parameters":[],"/../":["BuffersLen - return len() of internal byte[][] buffer"],"<<":[]},"Clone":{"type":"func","owner":"*Buffer","parameters":[],"/../":["Clone - return *Buffer clone"],"<<":[]},"Print":{"type":"func","owner":"*Buffer","parameters":[{"a":"...interface{}"}],"/../":["Print - same as fmt.Print just on buffer"],"<<":[{}]},"Println":{"type":"func","owner":"*Buffer","parameters":[{"a":"...interface{}"}],"/../":["Println - same as fmt.Println just on buffer"],"<<":[{}]},"SubString":{"type":"func","owner":"*Buffer","parameters":[{"offset":"...int64"}],"/../":["SubString - return buffer as string value based on offset ...int64"],"<<":[{"s":"string"}]},"String":{"type":"func","owner":"*Buffer","parameters":[],"/../":["String - return buffer as string value"],"<<":[]},"Size":{"type":"func","owner":"*Buffer","parameters":[],"/../":["Size - total size of Buffer"],"<<":[]},"ReadFrom":{"type":"func","owner":"*Buffer","parameters":[{"r":"io.Reader"}],"/../":["ReadFrom - fere io.ReaderFrom"],"<<":[{"n":"int64"},{"err":"error"}]},"WriteRune":{"type":"func","owner":"*Buffer","parameters":[{"r":"rune"}],"/../":["WriteRune - Write singe rune"],"<<":[{"err":"error"}]},"WriteRunes":{"type":"func","owner":"*Buffer","parameters":[{"p":"...rune"}],"/../":["WriteRunes - Write runes"],"<<":[{"err":"error"}]},"Write":{"type":"func","owner":"*Buffer","parameters":[{"p":"[]byte"}],"/../":["Write - refer io.Writer"],"<<":[{"n":"int"},{"err":"error"}]},"Reader":{"type":"func","owner":"*Buffer","parameters":[],"/../":["Reader -"],"<<":[]},"Close":{"type":"func","owner":"*Buffer","parameters":[],"/../":["Close - refer io.Closer"],"<<":[]},"Clear":{"type":"func","owner":"*Buffer","parameters":[],"/../":["Clear - Buffer"],"<<":[]}},"/p/":{}}},"NewBuffer":{"type":"func","owner":"","parameters":[],"/../":["NewBuffer -"],"<<":[]},"BuffReader":{"type":"type","base":"struct","/f/":{"/g/":{"MaxRead":"int64"},"/p/":{"buffer":"*Buffer","rnr":"*bufio.Reader","roffset":"int64","rbufferi":"int","rbytes":"[]byte","rbytesi":"int"}},"==":[],"/../":["BuffReader -"],"/m/":{"/g/":{"WriteTo":{"type":"func","owner":"*BuffReader","parameters":[{"w":"io.Writer"}],"/../":["WriteTo - helper for io.Copy"],"<<":[{"n":"int64"},{"err":"error"}]},"Close":{"type":"func","owner":"*BuffReader","parameters":[],"/../":["Close - refer io.Closer"],"<<":[]},"RuneAt":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"int64"}],"/../":["RuneAt - rune at offset int64"],"<<":[{"rn":"rune"}]},"LastIndex":{"type":"func","owner":"*BuffReader","parameters":[{"s":"string"},{"offset":"...int64"}],"/../":["LastIndex - Last index of s string - n int64"],"<<":[{}]},"LastByteIndexWithinOffsets":{"type":"func","owner":"*BuffReader","parameters":[{},{"endoffset":"int64"},{"bs":"...byte"}],"/../":["LastByteIndexWithinOffsets - Last index of bs byte... - n int64 within startoffset and endoffset"],"<<":[{"index":"int64"}]},"Index":{"type":"func","owner":"*BuffReader","parameters":[{"s":"string"}],"/../":["Index - Index of s string - n int64"],"<<":[{}]},"ByteIndex":{"type":"func","owner":"*BuffReader","parameters":[{"bs":"...byte"}],"/../":["ByteIndex - Index of bs ...byte - n int64"],"<<":[{"index":"int64"}]},"Read":{"type":"func","owner":"*BuffReader","parameters":[{"p":"[]byte"}],"/../":["Read - refer io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"SubString":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"...int64"}],"/../":["SubString - return buffer as string value based on offset ...int64"],"<<":[{"s":"string"}]},"ReadRune":{"type":"func","owner":"*BuffReader","parameters":[],"/../":["ReadRune - refer io.RuneReader"],"<<":[]},"Readln":{"type":"func","owner":"*BuffReader","parameters":[],"/../":[],"<<":[]},"Readlines":{"type":"func","owner":"*BuffReader","parameters":[],"/../":[],"<<":[]},"ReadAll":{"type":"func","owner":"*BuffReader","parameters":[],"/../":[],"<<":[]},"Seek":{"type":"func","owner":"*BuffReader","parameters":[{"offset":"int64"},{"whence":"int"}],"/../":["Seek - refer to io.Seeker","\tReadAll() (string, error)","\tReadlines() ([]string, error)","\tReadln() (string, error)"],"<<":[{"n":"int64"},{"err":"error"}]}},"/p/":{}}},"CachingReader":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"refr":"io.Reader","refs":"io.Seeker","refc":"io.Closer","rnr":"io.RuneReader","buffer":"*Buffer","maxbuffersize":"int64","choffset":"int64","bufr":"*BuffReader"}},"==":[],"/../":["CachingReader - struct"],"/m/":{"/g/":{"Read":{"type":"func","owner":"*CachingReader","parameters":[{"p":"[]byte"}],"/../":["Read - refer io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"ReadRune":{"type":"func","owner":"*CachingReader","parameters":[],"/../":["ReadRune - refer io.RuneReader"],"<<":[]},"Close":{"type":"func","owner":"*CachingReader","parameters":[],"/../":["Close - refer io.Closer"],"<<":[]},"WriteTo":{"type":"func","owner":"*CachingReader","parameters":[{"w":"io.Writer"}],"/../":["WriteTo - helper for io.Copy"],"<<":[{"n":"int64"},{"err":"error"}]},"Seek":{"type":"func","owner":"*CachingReader","parameters":[{"offset":"int64"},{"whence":"int"}],"/../":["Seek - refer to io.Seeker"],"<<":[{"n":"int64"},{"err":"error"}]}},"/p/":{}}},"NewCachingReader":{"type":"func","owner":"","parameters":[{"r":"io.Reader"},{"maxbuffersize":"int64"}],"/../":["NewCachingReader - instance"],"<<":[{"chngrdr":"*CachingReader"}]},"EOFCloseSeekReader":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"r":"io.Reader","rc":"io.Closer","rs":"io.Seeker","size":"int64","bfr":"*bufio.Reader","canclose":"bool"}},"==":[],"/../":[],"/m/":{"/g/":{"ReadRune":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]},"Readln":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]},"Readlines":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]},"ReadAll":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]},"Size":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]},"Seek":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[{"offset":"int64"},{"whence":"int"}],"/../":[],"<<":[{"n":"int64"},{"err":"error"}]},"Read":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]}},"/p/":{"disposeReader":{"type":"func","owner":"*EOFCloseSeekReader","parameters":[],"/../":[],"<<":[]}}}},"NewEOFCloseSeekReader":{"type":"func","owner":"","parameters":[{"r":"io.Reader"},{"canclose":"...bool"}],"/../":[],"<<":[{"eofclsr":"*EOFCloseSeekReader"}]}},"/p/":{}},"active":{"/":{"/g/":{"Active":{"type":"type","base":"struct","/f/":{"/g/":{"Namespace":"string","Print":"func(a ...interface{})","Println":"func(a ...interface{})","FPrint":"func(w io.Writer, a ...interface{})","FPrintLn":"func(w io.Writer, a ...interface{})","Readln":"func() (string, error)","ReadLines":"func() ([]string, error)","ReadAll":"func() (string, error)","FReadln":"func(r io.Reader) (string, error)","FReadLines":"func(r io.Reader) ([]string, error)","FReadAll":"func(r io.Reader) (string, error)","LookupTemplate":"func(string, ...interface{}) (io.Reader, error)","ObjectMapRef":"func() map[string]interface{}","InterruptVM":"func(v interface{})"},"/p/":{"lckprnt":"*sync.Mutex"}},"==":["*atvruntime"],"/../":["Active - struct"],"/m/":{"/g/":{"InvokeFunction":{"type":"func","owner":"*Active","parameters":[{"functocall":"interface{}"},{"args":"...interface{}"}],"/../":["InvokeFunction ivoke *Acive.actvruntime function"],"<<":[{"result":"interface{}"}]},"ExtractGlobals":{"type":"func","owner":"*Active","parameters":[{"extrglbs":"map[string]interface{}"}],"/../":["ExtractGlobals extract globals from atv.atvruntime"],"<<":[{}]},"ImportGlobals":{"type":"func","owner":"*Active","parameters":[{"imprtglbs":"map[string]interface{}"}],"/../":["ImportGlobals import globals into atv.atvruntime"],"<<":[{}]},"InvokeVM":{"type":"func","owner":"*Active","parameters":[{"callback":"func(vm *goja.Runtime"}],"/../":["InvokeVM invoke vm"],"<<":[{}]},"Eval":{"type":"func","owner":"*Active","parameters":[{"wout":"io.Writer"},{"rin":"io.Reader"},{"initpath":"string"},{"a":"...interface{}"}],"/../":["Eval - parse a ...interface{} arguments, execute if neaded and output to wou io.Writer"],"<<":[{"err":"error"}]},"Close":{"type":"func","owner":"*Active","parameters":[],"/../":["Close - refer to  io.Closer"],"<<":[]},"Interrupt":{"type":"func","owner":"*Active","parameters":[],"/../":["Interrupt - Active processing"],"<<":[]}},"/p/":{"namespace":{"type":"func","owner":"*Active","parameters":[],"/../":[],"<<":[]},"print":{"type":"func","owner":"*Active","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"println":{"type":"func","owner":"*Active","parameters":[{"w":"io.Writer"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"readln":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"/../":[],"<<":[{"ln":"string"},{"err":"error"}]},"readlines":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"/../":[],"<<":[{"lines":"[]string"},{"err":"error"}]},"readAll":{"type":"func","owner":"*Active","parameters":[{"r":"io.Reader"}],"/../":[],"<<":[{"s":"string"},{"err":"error"}]},"vm":{"type":"func","owner":"*Active","parameters":[],"/../":[],"<<":[]},"atvrun":{"type":"func","owner":"*Active","parameters":[{"prsng":"*parsing"}],"/../":[],"<<":[{"err":"error"}]}}}},"NewActive":{"type":"func","owner":"","parameters":[{"namespace":"...string"}],"/../":["NewActive - instance"],"<<":[{"atv":"*Active"}]},"CodeException":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"cde":"string","err":"error","execpath":"string"}},"==":[],"/../":[],"/m/":{"/g/":{"Error":{"type":"func","owner":"*CodeException","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"Runtime":{"type":"type","base":"interface","/f/":{"/g/":{"InvokeFunction":"(interface{}, ...interface{}) interface{}"},"/p/":{}},"==":[],"/../":["Runtime - interface"]}},"/p/":{"codeException":{"type":"func","owner":"","parameters":[{"cde":"string"},{"execpath":"string"},{"err":"error"}],"/../":[],"<<":[{"cdeerr":"*CodeException"}]},"parsing":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rnrdrsbeingparsed":"*enumeration.List","crntrnrdrbeingparsed":"io.RuneReader","tmpltbuf":"*iorw.Buffer","tmpltmap":"map[string][]int64","atv":"*Active","wout":"io.Writer","rin":"io.Reader","prntrs":"[]io.Writer","rdrs":"[]io.Reader","prslbli":"[]int","prslblprv":"[]rune","prntprsng":"*parsing","foundcde":"bool","hascde":"bool","cdetxt":"rune","cdebuf":"*iorw.Buffer","cdeoffsetstart":"int64","cdeoffsetend":"int64","cdemap":"map[int][]int64","cder":"[]rune","cderi":"int","psvoffsetstart":"int64","psvoffsetend":"int64","psvmap":"map[int][]int64","psvr":"[]rune","psvri":"int","tmpbuf":"*iorw.Buffer","elmlbli":"[]int","elmoffset":"int","elmprvrns":"[]rune","prvelmrn":"rune","crntpsvsctn":"*psvsection","headpsvsctn":"*psvsection","tailpsvsctn":"*psvsection","prsvpth":"string"}},"==":["*iorw.Buffer"],"/../":[],"/m/":{"/g/":{"ReadRune":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]}},"/p/":{"tempbuf":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"cdeBuff":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"tmpltBuf":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"tmpltMap":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"tmpltrdr":{"type":"func","owner":"*parsing","parameters":[{"tmpltnme":"string"}],"/../":[],"<<":[{"rdr":"*iorw.BuffReader"},{"mxlen":"int64"}]},"print":{"type":"func","owner":"*parsing","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"println":{"type":"func","owner":"*parsing","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"incprint":{"type":"func","owner":"*parsing","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{}]},"resetprint":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"decprint":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"readLn":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"readLines":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"readAll":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"incread":{"type":"func","owner":"*parsing","parameters":[{"r":"io.Reader"}],"/../":[],"<<":[{}]},"resetread":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"decread":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"dispose":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"topprsng":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"setcdepos":{"type":"func","owner":"*parsing","parameters":[{"startoffset":"int64"},{"endoffset":"int64"}],"/../":[],"<<":[{}]},"setpsvpos":{"type":"func","owner":"*parsing","parameters":[{"startoffset":"int64"},{"endoffset":"int64"}],"/../":[],"<<":[{"pos":"int"}]},"writePsv":{"type":"func","owner":"*parsing","parameters":[{"p":"...rune"}],"/../":[],"<<":[{"err":"error"}]},"writeCde":{"type":"func","owner":"*parsing","parameters":[{"p":"[]rune"}],"/../":[],"<<":[{"err":"error"}]},"foundCode":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"flushPsv":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]},"flushCde":{"type":"func","owner":"*parsing","parameters":[],"/../":[],"<<":[]}}}},"parsepsvrunes":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"p":"[]rune"}],"/../":[],"<<":[{"err":"error"}]},"parseatvrunes":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"p":"[]rune"}],"/../":[],"<<":[{"err":"error"}]},"loadRuneReaders":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"parseprsng":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"canexec":"bool"},{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"parseprsngrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"prslbli":"[]int"},{"prslblprv":"[]rune"},{"pr":"rune"}],"/../":[],"<<":[{"err":"error"}]},"nextparsing":{"type":"func","owner":"","parameters":[{"atv":"*Active"},{"prntprsng":"*parsing"},{"rin":"io.Reader"},{"wout":"io.Writer"},{"initpath":"string"}],"/../":[],"<<":[{"prsng":"*parsing"}]},"atvruntime":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"prsng":"*parsing","atv":"*Active","vm":"*goja.Runtime","intrnbuffs":"map[*iorw.Buffer]*iorw.Buffer","includedpgrms":"map[string]*goja.Program","rntmeche":"map[int]map[string]interface{}"}},"==":[],"/../":[],"/m/":{"/g/":{"InvokeFunction":{"type":"func","owner":"*atvruntime","parameters":[{"functocall":"interface{}"},{"args":"...interface{}"}],"/../":[],"<<":[{"result":"interface{}"}]}},"/p/":{"decrntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"/../":[],"<<":[]},"incrntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"/../":[],"<<":[]},"rntimecache":{"type":"func","owner":"*atvruntime","parameters":[],"/../":[],"<<":[]},"run":{"type":"func","owner":"*atvruntime","parameters":[],"/../":[],"<<":[]},"corerun":{"type":"func","owner":"*atvruntime","parameters":[{"code":"string"},{"objmapref":"map[string]interface{}"},{"includelibs":"...string"}],"/../":[],"<<":[{"val":"interface{}"},{"err":"error"}]},"parseEval":{"type":"func","owner":"*atvruntime","parameters":[{"forceCode":"bool"},{"a":"...interface{}"}],"/../":[],"<<":[{"val":"interface{}"},{"err":"error"}]},"removeBuffer":{"type":"func","owner":"*atvruntime","parameters":[{"buff":"*iorw.Buffer"}],"/../":[],"<<":[{}]},"code":{"type":"func","owner":"*atvruntime","parameters":[{"coords":"...int64"}],"/../":[],"<<":[{"c":"string"}]},"passiveout":{"type":"func","owner":"*atvruntime","parameters":[{"i":"int"}],"/../":[],"<<":[{}]},"dispose":{"type":"func","owner":"*atvruntime","parameters":[],"/../":[],"<<":[]}}}},"transformCode":{"type":"func","owner":"","parameters":[{"code":"string"},{"namespace":"string"},{"opts":"map[string]interface{}"}],"/../":[],"<<":[{"trsnfrmdcde":"string"},{"isrequired":"bool"},{"err":"error"}]},"defaultAtvRuntimeInternMap":{"type":"func","owner":"","parameters":[{"atvrntme":"*atvruntime"}],"/../":[],"<<":[{"internmapref":"map[string]interface{}"}]},"atvruntimeFinalize":{"type":"func","owner":"","parameters":[{"atvrntme":"*atvruntime"}],"/../":[],"<<":[{}]},"newatvruntime":{"type":"func","owner":"","parameters":[{"atv":"*Active"},{"parsing":"*parsing"}],"/../":[],"<<":[{"atvrntme":"*atvruntime"},{"err":"error"}]},"init":{"type":"func","owner":"","parameters":[],"/../":["var GlobelModules map[string]*"],"<<":[]},"parsepsvrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"rn":"rune"}],"/../":[],"<<":[{"err":"error"}]},"parsepsvphrase":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"psvsctn":"*psvsection"},{"phrslbli":"[]int"},{"rn":"rune"}],"/../":[],"<<":[{"err":"error"}]},"parseelmpsvrrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmoffset":"int"},{"elmlbli":"[]int"},{"elmprvrns":"[]rune"},{"rn":"rune"}],"/../":[],"<<":[{"err":"error"}]},"validElemParsing":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmoffset":"int"},{"crntpsvsctn":"*psvsection"}],"/../":[],"<<":[{"valid":"bool"},{"elmTpe":"elemtype"},{"psvsctn":"*psvsection"},{"err":"error"}]},"psvsection":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"prsng":"*parsing","elmtpe":"elemtype","tmpbuf":"*iorw.Buffer","prvsctn":"*psvsection","nxtsctn":"*psvsection","chcdbf":"*iorw.Buffer","phrsbuf":"*iorw.Buffer","phrstmpltbuf":"*iorw.Buffer","phrsmap":"map[string][]int64","canphrs":"bool","phrslbli":"[]int","phrsprvrn":"rune","tmpltpath":"string","tmpstrti":"int64","tmpendi":"int16"}},"==":[],"/../":[],"/m/":{"/g/":{"PhraseBuf":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]},"PhraseTemplateBuf":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]},"Elemtype":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]},"CachedBuf":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]}},"/p/":{"dispose":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]},"path":{"type":"func","owner":"*psvsection","parameters":[],"/../":[],"<<":[]}}}},"removePsvSection":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"psvsctn":"*psvsection"}],"/../":[],"<<":[{}]},"newPsvSection":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"elmtpe":"elemtype"},{"tmpbuf":"*iorw.Buffer"},{"crntsctn":"*psvsection"}],"/../":[],"<<":[{"psvsctn":"*psvsection"}]},"processPsvSection":{"type":"func","owner":"","parameters":[{"psvsctn":"*psvsection"}],"/../":[],"<<":[{"err":"error"}]},"decpsvcsection":{"type":"func","owner":"","parameters":[{"psvsctn":"*psvsection"}],"/../":[],"<<":[{}]},"parseatvrune":{"type":"func","owner":"","parameters":[{"prsng":"*parsing"},{"rn":"rune"}],"/../":[],"<<":[{"err":"error"}]}}}},"jsonrw":{"/":{"/g/":{"ReaderParser":{"type":"type","base":"struct","/f/":{"/g/":{"Delim":"json.Delim","IsDelim":"bool","String":"string","IsString":"bool","IsNumber":"bool","Float":"float64","Int":"int64","IsFloat":"bool","IsBool":"bool","Bool":"bool","IsNull":"bool","PrevToken":"json.Token","Token":"json.Token","Depth":"int"},"/p/":{"rdr":"io.Reader","dcdr":"*json.Decoder"}},"==":[],"/../":["ReaderParser - struct"],"/m/":{"/g/":{"PopulateMap":{"type":"func","owner":"*ReaderParser","parameters":[{"mptopop":"map[string]interface{}"}],"/../":["PopulateMap - populate map[string]interface{}"],"<<":[{"err":"error"}]},"PopulateArray":{"type":"func","owner":"*ReaderParser","parameters":[{"arr":"[]interface{}"}],"/../":["PopulateArray - populate []interface{}"],"<<":[{"err":"error"}]},"More":{"type":"func","owner":"*ReaderParser","parameters":[{"jsonevent":"...func(*ReaderParser"},{}],"/../":["More - wrap arround json.Decoder.More"],"<<":[{"error)":"(more bool"},{"err":"error)"}]}},"/p/":{"setValueState":{"type":"func","owner":"*ReaderParser","parameters":[],"/../":[],"<<":[]}}}},"NewReaderParser":{"type":"func","owner":"","parameters":[{"r":"io.Reader"}],"/../":["NewReaderParser - JSON Reader Parser"],"<<":[{"jsnr":"*ReaderParser"}]}},"/p/":{}}},"messaging":{"/":{"/g/":{"MessageManager":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"messangers":"map[string]*Messanger"}},"==":[],"/../":["MessageManager - struct"],"/m/":{"/g/":{"Print":{"type":"func","owner":"*MessageManager","parameters":[{"pr":"iorw.PrinterReader"},{"a":"...interface{}"}],"/../":["Print print to"],"<<":[{"err":"error"}]}},"/p/":{}}},"Messanger":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"guid":"string","name":"string","prntrdr":"iorw.PrinterReader"}},"==":[],"/../":["Messanger - struct"]}},"/p/":{}}}},"listen":{"/":{"/g/":{"ListnerHandler":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"ln":"net.Listener","backlog":"int","backcon":"chan *ConnHandler","backLogStarted":"bool","lck":"*sync.Mutex"}},"==":[],"/../":[],"/m/":{"/g/":{"Accept":{"type":"func","owner":"*ListnerHandler","parameters":[],"/../":[" Accept waits for and returns the next connection to the listener."],"<<":[]},"Close":{"type":"func","owner":"*ListnerHandler","parameters":[],"/../":[" Any blocked Accept operations will be unblocked and return errors."," Close closes the listener."],"<<":[]},"Addr":{"type":"func","owner":"*ListnerHandler","parameters":[],"/../":[" Addr returns the listener's network address."],"<<":[]}},"/p/":{}}},"ConnHandler":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"con":"*net.TCPConn","maxread":"int64","maxwrite":"int64"}},"==":[],"/../":[],"/m/":{"/g/":{"Read":{"type":"func","owner":"*ConnHandler","parameters":[{"b":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Write":{"type":"func","owner":"*ConnHandler","parameters":[{"b":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Readln":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"Readlines":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"ReadAll":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"Print":{"type":"func","owner":"*ConnHandler","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Println":{"type":"func","owner":"*ConnHandler","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Close":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"LocalAddr":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"RemoteAddr":{"type":"func","owner":"*ConnHandler","parameters":[],"/../":[],"<<":[]},"SetDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"/../":[],"<<":[{"err":"error"}]},"SetReadDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"/../":[],"<<":[{"err":"error"}]},"SetWriteDeadline":{"type":"func","owner":"*ConnHandler","parameters":[{"t":"time.Time"}],"/../":[],"<<":[{"err":"error"}]}},"/p/":{}}},"Listener":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"hndlr":"http.Handler","lstnrservers":"map[string]*lstnrserver","dne":"chan bool"}},"==":[],"/../":["Listener - struct"],"/m/":{"/g/":{"ServeHTTP":{"type":"func","owner":"*Listener","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"/../":["ServeHTTP - refer http.Handler"],"<<":[{}]},"Shutdown":{"type":"func","owner":"*Listener","parameters":[],"/../":["Shutdown - Listener gracefully"],"<<":[]},"WaitOnShutdown":{"type":"func","owner":"*Listener","parameters":[],"/../":["WaitOnShutdown - wait on internal done chan to close"],"<<":[]},"Listen":{"type":"func","owner":"*Listener","parameters":[{"addr":"string"},{"ish2c":"...bool"}],"/../":["Listen - on addr and indicate if ish2c"],"<<":[{}]}},"/p/":{}}},"NewListener":{"type":"func","owner":"","parameters":[{"hndlr":"http.Handler"}],"/../":["NewListener - instance"],"<<":[{"lstnr":"*Listener"}]},"Listening":{"type":"func","owner":"","parameters":[],"/../":["Listening - Global Listening"],"<<":[]}},"/p/":{"lstnrserver":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"h2s":"*http2.Server","srvr":"*http.Server","addr":"string"}},"==":[],"/../":[],"/m/":{"/g/":{},"/p/":{"startListening":{"type":"func","owner":"*lstnrserver","parameters":[{"lstnr":"*Listener"},{"backlog":"...int"}],"/../":[],"<<":[{}]},"stopListening":{"type":"func","owner":"*lstnrserver","parameters":[{"lstnr":"*Listener"}],"/../":[],"<<":[{}]}}}},"newConnHandler":{"type":"func","owner":"","parameters":[{"con":"net.Conn"}],"/../":[],"<<":[{"cnhdnlr":"*ConnHandler"}]},"contextKey":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"key":"string"}},"==":[],"/../":[]},"newlstnrserver":{"type":"func","owner":"","parameters":[{"hndlr":"http.Handler"},{"addr":"string"},{"unencrypted":"bool"}],"/../":[],"<<":[{"lstnrsrvr":"*lstnrserver"}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"logging":{"/":{"/g/":{"Log":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{}},"==":[],"/../":[],"/m/":{"/g/":{"Write":{"type":"func","owner":"*Log","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"WriteLevel":{"type":"func","owner":"*Log","parameters":[{"level":"zerolog.Level"},{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]}},"/p/":{}}},"NewLogger":{"type":"func","owner":"","parameters":[{"lg":"*Log"}],"/../":[],"<<":[{"lggr":"interface{}"}]}},"/p/":{}}},"mimes":{"/":{"/g/":{"MimeTypesCSV":{"type":"func","owner":"","parameters":[],"/../":["MimeTypesCSV - return Mime Types CSV reader"],"<<":[]},"FindMimeType":{"type":"func","owner":"","parameters":[{"ext":"string"},{"defaulttype":"string"}],"/../":["FindMimeType - ext or defaulttype"],"<<":[{"mimetype":"string"},{"texttype":"bool"}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"mqtt":{"/":{"/g/":{"MQTTConnection":{"type":"type","base":"struct","/f/":{"/g/":{"ClientId":"string"},"/p/":{"mqttmngr":"*MQTTManager","pahomqtt":"mqtt.Client","connectHandler":"mqtt.OnConnectHandler","messagePubHandler":"mqtt.MessageHandler","connectLostHandler":"mqtt.ConnectionLostHandler","broker":"string","port":"int","user":"string","password":"string","autoack":"bool","subscrptns":"map[string]*mqttsubscription","lcksubscrptns":"*sync.RWMutex"}},"==":[],"/../":[],"/m/":{"/g/":{"Fprint":{"type":"func","owner":"*MQTTConnection","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{}]},"String":{"type":"func","owner":"*MQTTConnection","parameters":[],"/../":[],"<<":[]},"IsConnected":{"type":"func","owner":"*MQTTConnection","parameters":[],"/../":[],"<<":[]},"Disconnect":{"type":"func","owner":"*MQTTConnection","parameters":[{"quiesce":"uint"}],"/../":[],"<<":[{"err":"error"}]},"Connect":{"type":"func","owner":"*MQTTConnection","parameters":[],"/../":[],"<<":[]},"UpdateConnection":{"type":"func","owner":"*MQTTConnection","parameters":[{"autoconnect":"bool"},{"broker":"string"},{"port":"int"},{"user":"string"},{"password":"string"}],"/../":[],"<<":[{}]},"Publish":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"},{"qos":"byte"},{"retained":"bool"},{"message":"string"}],"/../":[],"<<":[{"err":"error"}]},"IsSubscribed":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"}],"/../":[],"<<":[{"issbscrbed":"bool"}]},"Subscriptions":{"type":"func","owner":"*MQTTConnection","parameters":[{"alreadylck":"...bool"}],"/../":[],"<<":[{"subscrptns":"[]*mqttsubscription"}]},"SubscribedTopics":{"type":"func","owner":"*MQTTConnection","parameters":[{"alreadylck":"...bool"}],"/../":[],"<<":[{"subscrbdtpcs":"[]string"}]},"Subscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"string"},{"qos":"byte"}],"/../":[],"<<":[{"err":"error"}]},"Resubscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"unsubscribefirst":"bool"},{"topic":"...string"}],"/../":[],"<<":[{"err":"error"}]},"UnsubscribeAll":{"type":"func","owner":"*MQTTConnection","parameters":[],"/../":[],"<<":[]},"Unsubscribe":{"type":"func","owner":"*MQTTConnection","parameters":[{"topic":"...string"}],"/../":[],"<<":[{"err":"error"}]}},"/p/":{}}},"NewMQTTConnections":{"type":"func","owner":"","parameters":[{"clientid":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"mqttcn":"*MQTTConnection"}]},"Message":{"type":"type","base":"interface","/f/":{"/g/":{"Duplicate":"() bool","Qos":"() byte","Retained":"() bool","Topic":"() string","MessageID":"() uint16","Payload":"() []byte","Connection":"() *MQTTConnection","TopicPath":"() string","Manager":"() *MQTTManager","Ack":"()"},"/p/":{}},"==":[],"/../":[]},"Topic":{"type":"type","base":"interface","/f/":{"/g/":{"Topic":"() string","TopicPath":"() string"},"/p/":{}},"==":[],"/../":[]},"MqttEvent":{"type":"type","base":"interface","/f/":{"/g/":{"Event":"() string","EventPath":"() string","MqttConnection":"() *MQTTConnection","MqttManager":"() *MQTTManager","Args":"() map[string]interface{}"},"/p/":{}},"==":[],"/../":[]},"MQTTManager":{"type":"type","base":"struct","/f/":{"/g/":{"MqttMessaging":"MqttMessaging","MqttEventing":"MqttEventing"},"/p/":{"lck":"*sync.RWMutex","cntns":"map[string]*MQTTConnection","activeTopics":"map[string]*activeTopic","defaulttopicpath":"string","lcktpcs":"*sync.RWMutex","mqttevents":"map[string]*mqttEventContainer","lckevents":"*sync.RWMutex","defaulteventpath":"string"}},"==":[],"/../":[],"/m/":{"/g/":{"ActiveTopics":{"type":"func","owner":"*MQTTManager","parameters":[],"/../":[],"<<":[]},"Connections":{"type":"func","owner":"*MQTTManager","parameters":[],"/../":[],"<<":[]},"Connection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"mqttcn":"*MQTTConnection"}]},"ConnectionInfo":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"mqttcninfo":"string"}]},"ConnectionExist":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"exists":"bool"}]},"RegisterConnection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Fprint":{"type":"func","owner":"*MQTTManager","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{}]},"String":{"type":"func","owner":"*MQTTManager","parameters":[],"/../":[],"<<":[]},"UnregisterConnection":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"...string"}],"/../":[],"<<":[{}]},"Connected":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{}]},"Disconnected":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"err":"error"}],"/../":[],"<<":[{}]},"IsConnect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"connected":"bool"}]},"Connect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"err":"error"}]},"Disconnect":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"quiesce":"uint"}],"/../":[],"<<":[{"err":"error"}]},"IsSubscribed":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"}],"/../":[],"<<":[{"issbscrbed":"bool"}]},"Subscriptions":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"}],"/../":[],"<<":[{"subscrptns":"[]*mqttsubscription"}]},"Subscribe":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"},{"qos":"byte"}],"/../":[],"<<":[{"err":"error"}]},"Unsubscribe":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"}],"/../":[],"<<":[{"err":"error"}]},"Publish":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"topic":"string"},{"qos":"byte"},{"retained":"bool"},{"message":"string"}],"/../":[],"<<":[{"err":"error"}]},"ActivateTopic":{"type":"func","owner":"*MQTTManager","parameters":[{"topic":"string"},{"topicpath":"...string"}],"/../":[],"<<":[{}]},"DeactivateTopic":{"type":"func","owner":"*MQTTManager","parameters":[{"topic":"string"}],"/../":[],"<<":[{}]},"ValidEvents":{"type":"func","owner":"*MQTTManager","parameters":[],"/../":[],"<<":[]},"ActivateEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"event":"string"},{"eventpath":"string"},{"args":"...map[string]interface{}"}],"/../":[],"<<":[{}]},"DeactivateEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"event":"string"}],"/../":[],"<<":[{}]}},"/p/":{"messageReceived":{"type":"func","owner":"*MQTTManager","parameters":[{"mqttcn":"*MQTTConnection"},{"alias":"string"},{"msg":"*mqttMessage"}],"/../":[],"<<":[{}]},"fireAliasEvent":{"type":"func","owner":"*MQTTManager","parameters":[{"alias":"string"},{"event":"string"},{"err":"error"}],"/../":[],"<<":[{}]}}}},"NewMQTTManager":{"type":"func","owner":"","parameters":[{"a":"...interface{}"}],"/../":[],"<<":[{"mqttmngr":"*MQTTManager"}]},"GLOBALMQTTMANAGER":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"mqttsubscription":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"topic":"string","qos":"byte"}},"==":[],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*mqttsubscription","parameters":[],"/../":[],"<<":[]},"Fprint":{"type":"func","owner":"*mqttsubscription","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{}]}},"/p/":{}}},"newMQTTOptions":{"type":"func","owner":"","parameters":[{"clientid":"string"},{"broker":"string"},{"port":"int"},{"user":"string"},{"password":"string"}],"/../":[],"<<":[{"pahooptions":"*mqtt.ClientOptions"}]},"newPahoMqttClient":{"type":"func","owner":"","parameters":[{"pahooptions":"*mqtt.ClientOptions"}],"/../":[],"<<":[{"pahomqtt":"mqtt.Client"}]},"mqttMessage":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"mqttcn":"*MQTTConnection","mqttmmng":"*MQTTManager","msg":"mqtt.Message","tokenpath":"string"}},"==":[],"/../":[],"/m/":{"/g/":{"FPrint":{"type":"func","owner":"*mqttMessage","parameters":[{"w":"io.Writer"}],"/../":[],"<<":[{}]},"String":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"TopicPath":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Duplicate":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Qos":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Retained":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Topic":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"MessageID":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Payload":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Connection":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Manager":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]},"Ack":{"type":"func","owner":"*mqttMessage","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"subscribetotopic":{"type":"func","owner":"","parameters":[{"mqttcn":"*MQTTConnection"},{"topic":"string"},{"qos":"byte"}],"/../":[],"<<":[{"err":"error"}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"activeTopic":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"topic":"string","topicpath":"string"}},"==":[],"/../":[],"/m/":{"/g/":{"Topic":{"type":"func","owner":"*activeTopic","parameters":[],"/../":[],"<<":[]},"TopicPath":{"type":"func","owner":"*activeTopic","parameters":[],"/../":[],"<<":[]}},"/p/":{"processMessage":{"type":"func","owner":"*activeTopic","parameters":[{"mqttmsng":"MqttMessaging"},{"message":"Message"}],"/../":[],"<<":[{"err":"error"}]}}}},"mqttEvent":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"event":"string","eventpath":"string","mqttcn":"*MQTTConnection","mqttmngr":"*MQTTManager","args":"map[string]interface{}"}},"==":[],"/../":[],"/m/":{"/g/":{"Event":{"type":"func","owner":"*mqttEvent","parameters":[],"/../":[],"<<":[]},"EventPath":{"type":"func","owner":"*mqttEvent","parameters":[],"/../":[],"<<":[]},"MqttConnection":{"type":"func","owner":"*mqttEvent","parameters":[],"/../":[],"<<":[]},"MqttManager":{"type":"func","owner":"*mqttEvent","parameters":[],"/../":[],"<<":[]},"Args":{"type":"func","owner":"*mqttEvent","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"mqttEventContainer":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"event":"string","eventpath":"string","args":"map[string]interface{}"}},"==":[],"/../":[]}}}},"osprc":{"/":{"/g/":{"Command":{"type":"type","base":"struct","/f/":{"/g/":{"OnClose":"func(int)"},"/p/":{"excmd":"*exec.Cmd","excmdprcid":"int","ctx":"context.Context","ctxcancel":"context.CancelFunc","cmdin":"io.WriteCloser","bfr":"*bufio.Reader","cmdout":"io.ReadCloser","cmdoutp":"chan []byte","cmdouterr":"chan error","cmdtmpp":"[]byte","cmdtmppi":"int","cmdtmppl":"int","stdinpark":"[]byte","stdinparkl":"int","stdinparki":"int","cancmdout":"bool","milseconds":"int64"}},"==":[],"/../":["Command - struct"],"/m/":{"/g/":{"SetReadTimeout":{"type":"func","owner":"*Command","parameters":[{"milseconds":"int64"}],"/../":["SetReadTimeout set read timeout in milliseconds int64"],"<<":[{}]},"PrcID":{"type":"func","owner":"*Command","parameters":[],"/../":["PrcID underlying os Process ID"],"<<":[]},"Print":{"type":"func","owner":"*Command","parameters":[{"a":"...interface{}"}],"/../":["Print - similar to fmt.Fprint just direct on *Command"],"<<":[{}]},"Println":{"type":"func","owner":"*Command","parameters":[{"a":"...interface{}"}],"/../":["Println - similar to fmt.Fprint just direct on *Command"],"<<":[{}]},"Readln":{"type":"func","owner":"*Command","parameters":[],"/../":["Readln - read line from cmd and return s string or err error"],"<<":[]},"Readlines":{"type":"func","owner":"*Command","parameters":[],"/../":["Readlines - read lines []string from cmd or err error"],"<<":[]},"ReadAll":{"type":"func","owner":"*Command","parameters":[],"/../":["ReadAll read and return content as s string or err error"],"<<":[]},"Close":{"type":"func","owner":"*Command","parameters":[],"/../":["Close - *Command"],"<<":[]},"ReadRune":{"type":"func","owner":"*Command","parameters":[],"/../":["ReadRune - refer to io.RuneReader"],"<<":[]},"Dir":{"type":"func","owner":"*Command","parameters":[],"/../":["Dir return executing command directory"],"<<":[]},"Read":{"type":"func","owner":"*Command","parameters":[{"p":"[]byte"}],"/../":["Read - refer to io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"Write":{"type":"func","owner":"*Command","parameters":[{"p":"[]byte"}],"/../":["Write - refer to io.Writer"],"<<":[{"n":"int"},{"err":"error"}]}},"/p/":{}}},"NewCommand":{"type":"func","owner":"","parameters":[{"execpath":"string"},{"execargs":"...string"}],"/../":["NewCommand return cmd *Command instance or err error"],"<<":[{"cmd":"*Command"},{"err":"error"}]}},"/p/":{}}},"parameters":{"/":{"/g/":{"Parameters":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"standard":"map[string][]string","filesdata":"map[string][]interface{}"}},"==":[],"/../":["Parameters -> structure containing parameters"],"/m/":{"/g/":{"StandardKeys":{"type":"func","owner":"*Parameters","parameters":[],"/../":["StandardKeys - list of standard parameters names (keys)"],"<<":[]},"FileKeys":{"type":"func","owner":"*Parameters","parameters":[],"/../":["FileKeys - list of file parameters names (keys)"],"<<":[]},"SetParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"clear":"bool"},{"pvalue":"...string"}],"/../":["clear : clear existing value of parameter","pvalue : value of strings to add","pname : name","SetParameter -> set or append parameter value"],"<<":[{}]},"ContainsParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"/../":["pname : name","ContainsParameter -> check if parameter exist"],"<<":[{}]},"RemoveParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"/../":["RemoveParameter  -> remove parameter and return any slice of string value"],"<<":[{"value":"[]string"}]},"SetFileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"clear":"bool"},{"pfile":"...interface{}"}],"/../":["clear : clear existing value of parameter","pfile : value of interface to add either FileHeader from mime/multipart or any io.Reader implementation","pname : name","SetFileParameter -> set or append file parameter value"],"<<":[{}]},"ContainsFileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"}],"/../":["pname : name","ContainsFileParameter -> check if file parameter exist"],"<<":[{}]},"Parameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"/../":["Parameter - return a specific parameter values"],"<<":[{}]},"StringParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"sep":"string"},{"index":"...int"}],"/../":["StringParameter return parameter as string concatenated with sep"],"<<":[{"s":"string"}]},"FileReader":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"/../":["FileReader return file parameter - array of io.Reader"],"<<":[{"rdrs":"[]io.Reader"}]},"FileName":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"/../":["FileName return file parameter name - array of string"],"<<":[{"nmes":"[]string"}]},"FileSize":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"/../":["FileSize return file parameter size - array of int64)"],"<<":[{"sizes":"[]int64"}]},"FileParameter":{"type":"func","owner":"*Parameters","parameters":[{"pname":"string"},{"index":"...int"}],"/../":["FileParameter return file paramater - array of file"],"<<":[{}]},"CleanupParameters":{"type":"func","owner":"*Parameters","parameters":[],"/../":["CleanupParameters function that can be called to assist in cleaning up instance of Parameter container"],"<<":[]}},"/p/":{}}},"NewParameters":{"type":"func","owner":"","parameters":[],"/../":["NewParameters return new instance of Paramaters container"],"<<":[]},"LoadParametersFromRawURL":{"type":"func","owner":"","parameters":[{"params":"*Parameters"},{"rawURL":"string"}],"/../":["LoadParametersFromRawURL - populate paramaters just from raw url"],"<<":[{}]},"LoadParametersFromHTTPRequest":{"type":"func","owner":"","parameters":[{"params":"*Parameters"},{"r":"*http.Request"}],"/../":["LoadParametersFromHTTPRequest - Load Parameters from http.Request"],"<<":[{}]}},"/p/":{}}},"requirejs":{"/":{"/g/":{"RequireJS":{"type":"func","owner":"","parameters":[],"/../":["RequireJS return io.Reader of require.js code"],"<<":[]},"RequireJSString":{"type":"func","owner":"","parameters":[],"/../":["RequireJSString return string of require.js code"],"<<":[]},"RequireMinJS":{"type":"func","owner":"","parameters":[],"/../":["RequireMinJS return io.Reader of require.min.js code"],"<<":[]},"RequireMinJSString":{"type":"func","owner":"","parameters":[],"/../":["RequireMinJSString return string of require.min.js code"],"<<":[]}},"/p/":{}}},"resources":{"/":{"/g/":{"Resource":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rsngepnt":"*ResourcingEndpoint","rspath":"string","isText":"bool","isBin":"bool","r":"io.Reader","rs":"io.Seeker","rc":"io.Closer"}},"==":[],"/../":["Resource - struct"],"/m/":{"/g/":{"Seek":{"type":"func","owner":"*Resource","parameters":[{"offset":"int64"},{"whence":"int"}],"/../":["Seek - refer to io.Seeker"],"<<":[{"n":"int64"},{"err":"error"}]},"Read":{"type":"func","owner":"*Resource","parameters":[{"p":"[]byte"}],"/../":[],"<<":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*Resource","parameters":[],"/../":["Close - refer to io.Closer"],"<<":[]}},"/p/":{}}},"EmbeddedResource":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rscngendpnt":"*ResourcingEndpoint","modified":"time.Time","path":"string"}},"==":["*iorw.Buffer"],"/../":[],"/m/":{"/g/":{"Name":{"type":"func","owner":"*EmbeddedResource","parameters":[],"/../":[],"<<":[]},"Clear":{"type":"func","owner":"*EmbeddedResource","parameters":[],"/../":[],"<<":[]},"Close":{"type":"func","owner":"*EmbeddedResource","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"NewEmbeddedResource":{"type":"func","owner":"","parameters":[{"rscngendpnt":"*ResourcingEndpoint"}],"/../":[],"<<":[{"embdrs":"*EmbeddedResource"}]},"ResourcingEndpoint":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"fsutils":"*fsutils.FSUtils","path":"string","epnttype":"string","isLocal":"bool","isRemote":"bool","isEmbedded":"bool","remoteHeaders":"map[string]string","host":"string","schema":"string","querystring":"string","embeddedResources":"map[string]*EmbeddedResource","rsngmngr":"*ResourcingManager"}},"==":[],"/../":["ResourcingEndpoint - struct"],"/m/":{"/g/":{"FS":{"type":"func","owner":"*ResourcingEndpoint","parameters":[],"/../":["FS return fsutils.FSUtils implementation for *ResourcingEndPoint"],"<<":[]},"RemoveResource":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":["RemoveResource - remove inline resource - true if found and removed and false if not exists"],"<<":[{"rmvd":"bool"}]},"Resource":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":["Resource - return mapped resource interface{} by path"],"<<":[{"rs":"interface{}"}]}},"/p/":{"fsappend":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"fsset":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"fscat":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"r":"io.Reader"}]},"fscats":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"s":"string"}]},"fspipe":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"r":"io.Reader"}]},"fspipes":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"s":"string"}]},"fstouch":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{}]},"fsmv":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"},{"destpath":"string"}],"/../":[],"<<":[{}]},"fsrm":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"rmvd":"bool"}]},"fsmkdirall":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{}]},"fsmkdir":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{}]},"fsls":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"}]},"fsfind":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"},{"err":"error"}]},"dispose":{"type":"func","owner":"*ResourcingEndpoint","parameters":[],"/../":[],"<<":[]},"findRS":{"type":"func","owner":"*ResourcingEndpoint","parameters":[{"path":"string"}],"/../":[],"<<":[{"rs":"io.ReadCloser"},{"err":"error"}]}}}},"ResourcingManager":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"fsutils":"*fsutils.FSUtils","rsngpaths":"map[string]string","rsngrootpaths":"map[string]*ResourcingEndpoint"}},"==":[],"/../":["ResourcingManager - struct"],"/m/":{"/g/":{"FS":{"type":"func","owner":"*ResourcingManager","parameters":[],"/../":["FS return fsutils.FSUtils implementation for *ResourcingManager"],"<<":[]},"RemovePathResource":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["RemovePathResource - Remove Endpoint Resource via path"],"<<":[{"rmvd":"bool"}]},"EndpointViaRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"rootpath":"string"}],"/../":["EndpointViaRootPath return ResourcingEndpoint via root path"],"<<":[{"rsngendpt":"*ResourcingEndpoint"}]},"EndpointViaPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["EndpointViaPath return ResourcingEndpoint via path"],"<<":[{"rsngendpt":"*ResourcingEndpoint"}]},"EndpointResource":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["EndpointResource - Endpoint embedded resource via path"],"<<":[{"epntrs":"interface{}"}]},"UnregisterPaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"/../":["UnregisterPaths unregister multiple paths"],"<<":[{}]},"RegisteredRootPaths":{"type":"func","owner":"*ResourcingManager","parameters":[],"/../":["RegisteredRootPaths return registered rootpaths"],"<<":[]},"IsRegisteredPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["IsRegisteredPath return true indicating if a path is registered"],"<<":[{"exists":"bool"}]},"IsRegisteredRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"rootpath":"string"}],"/../":["IsRegisteredRootPath return true indicating if a rootpath is registered"],"<<":[{"exists":"bool"}]},"RegisteredPaths":{"type":"func","owner":"*ResourcingManager","parameters":[],"/../":["RegisteredPaths return registered paths"],"<<":[]},"UnregisterPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["UnregisterPath - register path string"],"<<":[{"rmvd":"bool"}]},"UnregisterRootPaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"epntpath":"...string"}],"/../":["UnregisterRootPaths unregister multiple RootPaths and their ResourcingEndPoints"],"<<":[{}]},"UnregisterRootPath":{"type":"func","owner":"*ResourcingManager","parameters":[{"epntpath":"string"}],"/../":["UnregisterRootPath unregister RootPath and dispose the ResourcingEndPoint"],"<<":[{"rmvd":"bool"}]},"RegisterEndpoints":{"type":"func","owner":"*ResourcingManager","parameters":[{"args":"...interface{}"}],"/../":["RegisterEndpoints register multiple Endpoints"],"<<":[{}]},"RegisterEndpoint":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"rootpath":"string"},{"prms":"...interface{}"}],"/../":["RegisterEndpoint - register ResourcingEndPoint"],"<<":[{}]},"FindRSString":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["FindRSString - find Resource"],"<<":[{"s":"string"},{"err":"error"}]},"FindRS":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":["FindRS - find Resource"],"<<":[{"rs":"io.ReadCloser"},{"err":"error"}]},"Close":{"type":"func","owner":"*ResourcingManager","parameters":[],"/../":["Close *ResouringManager"],"<<":[]}},"/p/":{"findrsendpnt":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"epnt":"*ResourcingEndpoint"},{"rpath":"string"}]},"findrsendpnts":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"/../":[],"<<":[{"epnts":"[]*ResourcingEndpoint"},{"epnttphs":"[]string"}]},"findrsendpntpaths":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"/../":[],"<<":[{"epnts":"[]*ResourcingEndpoint"},{},{"paths":"[]string"}]},"fsappend":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"fnd":"bool"}]},"fsset":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"set":"bool"}]},"fscat":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"r":"io.Reader"}]},"fscats":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"s":"string"}]},"fspipe":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"r":"io.Reader"}]},"fspipes":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"s":"string"}]},"fstouch":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"tchd":"bool"}]},"fsmv":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"},{"destpath":"string"}],"/../":[],"<<":[{"mvd":"bool"}]},"fsrm":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"string"}],"/../":[],"<<":[{"rmd":"bool"}]},"fsmkdirall":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...interface{}"}],"/../":[],"<<":[{"mkdall":"bool"}]},"fsmkdir":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...interface{}"}],"/../":[],"<<":[{"mkd":"bool"}]},"fsls":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"}]},"fsfind":{"type":"func","owner":"*ResourcingManager","parameters":[{"path":"...string"}],"/../":[],"<<":[{"finfos":"[]fsutils.FileInfo"},{"err":"error"}]}}}},"NewResourcingManager":{"type":"func","owner":"","parameters":[],"/../":["NewResourcingManager - instance"],"<<":[]},"GLOBALRSNG":{"type":"func","owner":"","parameters":[],"/../":["GLOBALRSNG - GLOBAL Resourcing for app"],"<<":[]}},"/p/":{"newRS":{"type":"func","owner":"","parameters":[{"rsngepnt":"*ResourcingEndpoint"},{"rspath":"string"},{"r":"io.Reader"}],"/../":[],"<<":[{"rs":"*Resource"}]},"isValidLocalPath":{"type":"func","owner":"","parameters":[{"path":"string"}],"/../":[],"<<":[{}]},"nextResourcingEndpoint":{"type":"func","owner":"","parameters":[{"rsngmngr":"*ResourcingManager"},{"path":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"rsngepnt":"*ResourcingEndpoint"},{"rsngepntpath":"string"}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"scheduling":{"/":{"/g/":{"ScheduleHandler":{"type":"type","base":"interface","/f/":{"/g/":{"StartedSchedule":"(...interface{}) error","StoppedSchedule":"(...interface{}) error","ShutdownSchedule":"() error","PrepActionArgs":"(...interface{}) ([]interface{}, error)","Schedule":"() *Schedule"},"/p/":{}},"==":[],"/../":["ScheduleHandler - interface"]},"Schedule":{"type":"type","base":"struct","/f/":{"/g/":{"From":"time.Time","To":"time.Time","StartArgs":"[]interface{}","OnError":"func(*Schedules, *Schedule, error)","OnStart":"func(a ...interface{}) error","StopArgs":"[]interface{}","OnStop":"func(a ...interface{}) error","OnShutdown":"func() error","Milliseconds":"int64","Seconds":"int64","Minutes":"int64","Hours":"int64"},"/p/":{"actnmde":"scheduleactiontype","initstart":"bool","schdlid":"string","once":"bool","schdlhndlr":"ScheduleHandler","schdlrs":"*Schedules","actns":"*enumeration.Chain","initactns":"*enumeration.Chain","wrapupactns":"*enumeration.Chain","actnslck":"*sync.Mutex","prcintrvl":"int64","intrvl":"time.Duration","running":"bool","wg":"*sync.WaitGroup"}},"==":[],"/../":["Schedule - struct"],"/m/":{"/g/":{"AddAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"/../":["AddAction - add action(s) to *Schedule"],"<<":[{"err":"error"}]},"AddInitAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"/../":["AddInitAction - add action(s) to *Schedule that will be execute initially"],"<<":[{"err":"error"}]},"AddWrapupAction":{"type":"func","owner":"*Schedule","parameters":[{"a":"...interface{}"}],"/../":[" main list fo action(s) to execute","AddWrapupAction - add action(s) to *Schedule that will be execute when there are no more"],"<<":[{"err":"error"}]},"Start":{"type":"func","owner":"*Schedule","parameters":[],"/../":["Start - Schedule"],"<<":[]},"Stop":{"type":"func","owner":"*Schedule","parameters":[],"/../":["Stop - Schedule"],"<<":[]},"Shutdown":{"type":"func","owner":"*Schedule","parameters":[],"/../":["after this Schedule is destroyed adn not accessable anymore","Shutdown - Schedule"],"<<":[]},"InOut":{"type":"func","owner":"*Schedule","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"<<":[{"err":"error"}]}},"/p/":{"internalAction":{"type":"func","owner":"*Schedule","parameters":[{"actntpe":"scheduleactiontype"},{"a":"...interface{}"}],"/../":[],"<<":[{"err":"error"}]},"doLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"}],"/../":[],"<<":[{"done":"bool"},{"err":"error"}]},"errDoLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"},{"err":"error"}],"/../":[],"<<":[{"done":"bool"}]},"doneLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"}],"/../":[],"<<":[{"err":"error"}]},"errDoneLink":{"type":"func","owner":"*Schedule","parameters":[{"lnk":"*enumeration.Link"},{"err":"error"}],"/../":[],"<<":[{"done":"bool"}]},"executeMain":{"type":"func","owner":"*Schedule","parameters":[],"/../":[],"<<":[]},"executeInit":{"type":"func","owner":"*Schedule","parameters":[],"/../":[],"<<":[]},"execute":{"type":"func","owner":"*Schedule","parameters":[],"/../":[],"<<":[]},"ticking":{"type":"func","owner":"*Schedule","parameters":[],"/../":[],"<<":[]},"process":{"type":"func","owner":"*Schedule","parameters":[],"/../":[],"<<":[]},"inMapOut":{"type":"func","owner":"*Schedule","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]},"inReaderOut":{"type":"func","owner":"*Schedule","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]}}}},"ScheduleAction":{"type":"type","base":"struct","/f/":{"/g/":{"OnExecute":"func(...interface{}) (bool, error)"},"/p/":{"schdl":"*Schedule","schdls":"*Schedules","settings":"map[string]interface{}","actnargs":"[]interface{}"}},"==":[],"/../":["ScheduleAction - struct core implementation of ActionHandler"],"/m/":{"/g/":{"ExecuteAction":{"type":"func","owner":"*ScheduleAction","parameters":[{"a":"...interface{}"}],"/../":["ExecuteAction implementation of ActionHandler"],"<<":[{"result":"bool"},{"err":"error"}]}},"/p/":{}}},"NewScheduleAction":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"settings":"map[string]interface{}"},{"args":"...interface{}"}],"/../":["NewScheduleAction return new ScheduleAction instance"],"<<":[{"schdlactn":"*ScheduleAction"}]},"SchedulesHandler":{"type":"type","base":"interface","/f/":{"/g/":{"NewSchedule":"(*Schedule, ...interface{}) ScheduleHandler","Schedules":"() *Schedules"},"/p/":{}},"==":[],"/../":["SchedulesHandler - interface"]},"Schedules":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"schdls":"map[string]*Schedule","schdlshndlr":"SchedulesHandler","lck":"*sync.Mutex"}},"==":[],"/../":["Schedules - struct"],"/m/":{"/g/":{"InOutS":{"type":"func","owner":"*Schedules","parameters":[{"in":"interface{}"},{"ioargs":"...interface{}"}],"/../":["InOutS - OO{ in io.Reader -> out string } loop till no input"],"<<":[{"out":"string"},{"err":"error"}]},"InOut":{"type":"func","owner":"*Schedules","parameters":[{"in":"interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":["InOut - OO{ in io.Reader -> out io.Writer } loop till no input"],"<<":[{"err":"error"}]},"Get":{"type":"func","owner":"*Schedules","parameters":[{"schdlname":"string"}],"/../":["Get - Scheduler by schdlname"],"<<":[{"schdl":"*Schedule"}]},"RegisterSchedule":{"type":"func","owner":"*Schedules","parameters":[{"schdlname":"string"},{"a":"...interface{}"}],"/../":[" will the schedule be registered","RegisterSchedule - If schedule  with same name do not exists"],"<<":[{"schdl":"*Schedule"}]},"ScheduleExists":{"type":"func","owner":"*Schedules","parameters":[{"scdhkid":"string"}],"/../":["ScheduleExists returns true if *Schedule with schdlid string exists"],"<<":[{"schdlexist":"bool"},{"schdl":"*Schedule"}]},"Schedules":{"type":"func","owner":"*Schedules","parameters":[{"schdlids":"...string"}],"/../":["Schedules return []*Schedule of schdlid(s) ..string"],"<<":[{"scls":"[]*Schedule"}]}},"/p/":{"inMapOut":{"type":"func","owner":"*Schedules","parameters":[{"mpin":"map[string]interface{}"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]},"inReaderOut":{"type":"func","owner":"*Schedules","parameters":[{"ri":"io.Reader"},{"out":"io.Writer"},{"ioargs":"...interface{}"}],"/../":[],"<<":[{"hasoutput":"bool"},{"err":"error"}]},"removeSchedule":{"type":"func","owner":"*Schedules","parameters":[{"schdl":"*Schedule"}],"/../":[],"<<":[{}]}}}},"NewSchedules":{"type":"func","owner":"","parameters":[{"schdlshndlr":"SchedulesHandler"}],"/../":["NewSchedules instance"],"<<":[{"schdls":"*Schedules"}]},"GLOBALSCHEDULES":{"type":"func","owner":"","parameters":[],"/../":["GLOBALSCHEDULES - Global *Schedules instance"],"<<":[]}},"/p/":{"newSchedule":{"type":"func","owner":"","parameters":[{"schdlrs":"*Schedules"},{"a":"...interface{}"}],"/../":[],"<<":[{"schdl":"*Schedule"}]},"addactns":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actntpe":"scheduleactiontype"},{"schdlactns":"...*schdlaction"}],"/../":[],"<<":[{}]},"addactn":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actntpe":"scheduleactiontype"},{"schdlactn":"*schdlaction"}],"/../":[],"<<":[{}]},"removeactns":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"schdlactns":"...*schdlaction"}],"/../":[],"<<":[{}]},"removeactn":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"schdlactn":"*schdlaction"}],"/../":[],"<<":[{}]},"schdlaction":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"schdl":"*Schedule","prvactn":"*schdlaction","nxtactn":"*schdlaction","args":"[]interface{}","actn":"func(...interface{}) error","valid":"bool"}},"==":[],"/../":[],"/m/":{"/g/":{},"/p/":{"dispose":{"type":"func","owner":"*schdlaction","parameters":[],"/../":[],"<<":[]},"execute":{"type":"func","owner":"*schdlaction","parameters":[],"/../":[],"<<":[]}}}},"newSchdlAction":{"type":"func","owner":"","parameters":[{"schdl":"*Schedule"},{"actn":"func(...interface{}"}],"/../":[],"<<":[{},{"a":"...interface{}) (scdhlactn *schdlaction)"}]},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"service":{"/":{"/g/":{"LnkService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"brkrfnc":"func(exenme string, exealias string, args ...string)"}},"==":["*serving.Service"],"/../":["LnkService LnkService"],"/m/":{"/g/":{},"/p/":{"startLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"/../":[],"<<":[{}]},"runLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"/../":[],"<<":[{}]},"stopLnkService":{"type":"func","owner":"*LnkService","parameters":[{"args":"...string"}],"/../":[],"<<":[{}]}}}},"NewLnkService":{"type":"func","owner":"","parameters":[{"name":"string"},{"displayName":"string"},{"description":"string"},{"brokerfunc":"...interface{}"}],"/../":["NewLnkService NewLnkService"],"<<":[{"lnksrvs":"*LnkService"},{"err":"error"}]},"RunService":{"type":"func","owner":"","parameters":[{"args":"...string"}],"/../":["RunService - startup Service pasing args...string"],"<<":[{}]},"RunBroker":{"type":"func","owner":"","parameters":[{"exename":"string"},{"exealias":"string"},{"args":"...string"}],"/../":["RunBroker - RunBroker command as request in global channel"],"<<":[{}]}},"/p/":{}}},"serving":{"/":{"/g/":{"Service":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"isService":"bool","isConsole":"bool","isBroker":"bool","start":"func(*Service, ...string)","run":"func(*Service, ...string)","stop":"func(*Service, ...string)","execname":"string","execfolder":"string","name":"string","displayName":"string","description":"string","svcConfig":"*service.Config","args":"[]string"}},"==":[],"/../":["Service struct"],"/m/":{"/g/":{"Start":{"type":"func","owner":"*Service","parameters":[{"s":"service.Service"}],"/../":["Start Service"],"<<":[{}]},"Stop":{"type":"func","owner":"*Service","parameters":[{"s":"service.Service"}],"/../":["Stop Service"],"<<":[{}]},"IsBroker":{"type":"func","owner":"*Service","parameters":[],"/../":["IsBroker Service"],"<<":[]},"IsConsole":{"type":"func","owner":"*Service","parameters":[],"/../":["IsConsole Service"],"<<":[]},"IsService":{"type":"func","owner":"*Service","parameters":[],"/../":["IsService Service"],"<<":[]},"ServiceExeName":{"type":"func","owner":"*Service","parameters":[],"/../":["ServiceExeName Service Executable Name"],"<<":[]},"ServiceName":{"type":"func","owner":"*Service","parameters":[],"/../":["ServiceName Service Name"],"<<":[]},"ServiceExeFolder":{"type":"func","owner":"*Service","parameters":[],"/../":["ServiceExeFolder local folder where Service Executable resides"],"<<":[]},"ServiceDisplayName":{"type":"func","owner":"*Service","parameters":[],"/../":["ServiceDisplayName Service Display Name"],"<<":[]},"ServiceDescription":{"type":"func","owner":"*Service","parameters":[],"/../":["ServiceDescription Service Description"],"<<":[]},"Execute":{"type":"func","owner":"*Service","parameters":[{"args":"...string"}],"/../":["args - args from os gets passed into here","called in main() func of golang app,","Execute main Service Execute method when executing Service"],"<<":[{"err":"error"}]}},"/p/":{"exec":{"type":"func","owner":"*Service","parameters":[],"/../":[],"<<":[]}}}},"Executable":{"type":"func","owner":"","parameters":[],"/../":[" It may not be valid after the current program exits."," re-invoke the current program."," Executable returns an absolute path that can be used to"],"<<":[]},"ExecutableFolder":{"type":"func","owner":"","parameters":[],"/../":[" path. Excludes the executable name and any trailing slash."," ExecutableFolder returns same path as Executable, returns just the folder"],"<<":[]}},"/p/":{"executableClean":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"executable":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}},"service":{"/":{"/g/":{"WindowsLogger":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"ev":"*eventlog.Log","errs":"chan<- error"}},"==":[],"/../":[" WindowsLogger allows using windows specific logging methods."],"/m/":{"/g/":{"Error":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"/../":[" Error logs an error message."],"<<":[{}]},"Warning":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"/../":[" Warning logs an warning message."],"<<":[{}]},"Info":{"type":"func","owner":"WindowsLogger","parameters":[{"v":"...interface{}"}],"/../":[" Info logs an info message."],"<<":[{}]},"Errorf":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[" Errorf logs an error message."],"<<":[{}]},"Warningf":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[" Warningf logs an warning message."],"<<":[{}]},"Infof":{"type":"func","owner":"WindowsLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[" Infof logs an info message."],"<<":[{}]},"NError":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"/../":[" NError logs an error message and an event ID."],"<<":[{}]},"NWarning":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"/../":[" NWarning logs an warning message and an event ID."],"<<":[{}]},"NInfo":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"v":"...interface{}"}],"/../":[" NInfo logs an info message and an event ID."],"<<":[{}]},"NErrorf":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"/../":[" NErrorf logs an error message and an event ID."],"<<":[{}]},"NWarningf":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"/../":[" NWarningf logs an warning message and an event ID."],"<<":[{}]},"NInfof":{"type":"func","owner":"WindowsLogger","parameters":[{"eventID":"uint32"},{"format":"string"},{"a":"...interface{}"}],"/../":[" NInfof logs an info message and an event ID."],"<<":[{}]}},"/p/":{"send":{"type":"func","owner":"WindowsLogger","parameters":[{"err":"error"}],"/../":[],"<<":[{}]}}}},"Config":{"type":"type","base":"struct","/f/":{"/g/":{"Name":"string","DisplayName":"string","Description":"string","UserName":"string","Arguments":"[]string","Executable":"string","Dependencies":"[]string","WorkingDirectory":"string","ChRoot":"string","Option":"KeyValue"},"/p/":{}},"==":[],"/../":[" Config provides the setup for a Service. The Name field is required."]},"New":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"c":"*Config"}],"/../":[" New creates a new service based on a service interface and configuration."],"<<":[{},{}]},"Platform":{"type":"func","owner":"","parameters":[],"/../":[" Platform returns a description of the system service."],"<<":[]},"Interactive":{"type":"func","owner":"","parameters":[],"/../":[" and true otherwise."," Interactive returns false if running under the OS service manager"],"<<":[]},"ChooseSystem":{"type":"func","owner":"","parameters":[{"a":"...System"}],"/../":[" Calling this may change what Interactive and Platform return."," SystemServices are considered in the order they are suggested."," ChooseSystem chooses a system from the given system services."],"<<":[{}]},"ChosenSystem":{"type":"func","owner":"","parameters":[],"/../":[" ChosenSystem returns the system that service will use."],"<<":[]},"AvailableSystems":{"type":"func","owner":"","parameters":[],"/../":[" when choosing the system service."," AvailableSystems returns the list of system services considered"],"<<":[]},"System":{"type":"type","base":"interface","/f/":{"/g/":{"String":"() string","Detect":"() bool","Interactive":"() bool","New":"(i Interface, c *Config) (Service, error)"},"/p/":{}},"==":[],"/../":[" System represents the service manager that is available."]},"Interface":{"type":"type","base":"interface","/f/":{"/g/":{"Start":"(s Service) error","Stop":"(s Service) error"},"/p/":{}},"==":[],"/../":["   9. User program should quickly exit.","   8. Service.Run returns.","      - For a successful exit, os.Exit should not be called in Interface.Stop().","   7. Interface.Stop() is called and quickly returns.","   6. OS service manager signals the user program to stop.","   5. User program runs.","   4. Interface.Start() is called and quickly returns.","   3. User program calls Service.Run() which blocks.","   2. User program sees it is executed from a service manager (IsInteractive is false).","   1. OS service manager executes user program.",""," the hosting process is granted control and Stop runs when control is returned."," Interface represents the service interface for a program. Start runs before"]},"Service":{"type":"type","base":"interface","/f/":{"/g/":{"Run":"() error","Start":"() error","Stop":"() error","Restart":"() error","Install":"() error","Uninstall":"() error","Logger":"(errs chan<- error) (Logger, error)","SystemLogger":"(errs chan<- error) (Logger, error)","String":"() string","Platform":"() string","Status":"() (Status, error)"},"/p/":{}},"==":[],"/../":[" Service represents a service that can be run or controlled."," TODO: Add Configure to Service interface."]},"Control":{"type":"func","owner":"","parameters":[{"s":"Service"},{"action":"string"}],"/../":[" Control issues control functions to the service from a given action string."],"<<":[{}]},"Logger":{"type":"type","base":"interface","/f/":{"/g/":{"Error":"(v ...interface{}) error","Warning":"(v ...interface{}) error","Info":"(v ...interface{}) error","Errorf":"(format string, a ...interface{}) error","Warningf":"(format string, a ...interface{}) error","Infof":"(format string, a ...interface{}) error"},"/p/":{}},"==":[],"/../":[" Logger writes to the system log."]}},"/p/":{"consoleLogger":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"info,":"warn, err *log.Logger"}},"==":[],"/../":[],"/m/":{"/g/":{"Error":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Warning":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Info":{"type":"func","owner":"consoleLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Errorf":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Warningf":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Infof":{"type":"func","owner":"consoleLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]}},"/p/":{}}},"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"getPidOfSvcMaster":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"isInteractive":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"aixService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Run":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*aixService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*aixService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]}},"/p/":{"template":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]},"configPath":{"type":"func","owner":"*aixService","parameters":[],"/../":[],"<<":[]}}}},"darwinLaunchdService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface","userService":"bool"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Run":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*darwinLaunchdService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*darwinLaunchdService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]}},"/p/":{"getHomeDir":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"getServiceFilePath":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]},"template":{"type":"func","owner":"*darwinLaunchdService","parameters":[],"/../":[],"<<":[]}}}},"freebsdService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Run":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*freebsdService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*freebsdService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]}},"/p/":{"template":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]},"configPath":{"type":"func","owner":"*freebsdService","parameters":[],"/../":[],"<<":[]}}}},"linuxSystemService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"name":"string","detect":"func() bool","interactive":"func() bool","new":"func(i Interface, platform string, c *Config) (Service, error)"}},"==":[],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"linuxSystemService","parameters":[],"/../":[],"<<":[]},"Detect":{"type":"func","owner":"linuxSystemService","parameters":[],"/../":[],"<<":[]},"Interactive":{"type":"func","owner":"linuxSystemService","parameters":[],"/../":[],"<<":[]},"New":{"type":"func","owner":"linuxSystemService","parameters":[{"i":"Interface"},{"c":"*Config"}],"/../":[],"<<":[{},{}]}},"/p/":{}}},"isInContainer":{"type":"func","owner":"","parameters":[{"cgroupPath":"string"}],"/../":[" container."," isInContainer checks if the service is being executed in docker or lxc"],"<<":[{},{}]},"solarisService":{"type":"type","base":"struct","/f/":{"/g/":{"Prefix":"string"},"/p/":{"i":"Interface"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Run":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*solarisService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*solarisService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]}},"/p/":{"template":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"configPath":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]},"getFMRI":{"type":"func","owner":"*solarisService","parameters":[],"/../":[],"<<":[]}}}},"isSystemd":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"systemd":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface","platform":"string"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*systemd","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*systemd","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"Run":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]}},"/p/":{"configPath":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"getSystemdVersion":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"hasOutputFileSupport":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]},"template":{"type":"func","owner":"*systemd","parameters":[],"/../":[],"<<":[]}}}},"newSystemdService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"/../":[],"<<":[{},{}]},"sysv":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface","platform":"string"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*sysv","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*sysv","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"Run":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]}},"/p/":{"configPath":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]},"template":{"type":"func","owner":"*sysv","parameters":[],"/../":[],"<<":[]}}}},"newSystemVService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"/../":[],"<<":[{},{}]},"newSysLogger":{"type":"func","owner":"","parameters":[{"name":"string"},{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"sysLogger":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"errs":"chan<- error"}},"==":["*syslog.Writer"],"/../":[],"/m/":{"/g/":{"Error":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Warning":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Info":{"type":"func","owner":"sysLogger","parameters":[{"v":"...interface{}"}],"/../":[],"<<":[{}]},"Errorf":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Warningf":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]},"Infof":{"type":"func","owner":"sysLogger","parameters":[{"format":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{}]}},"/p/":{"send":{"type":"func","owner":"sysLogger","parameters":[{"err":"error"}],"/../":[],"<<":[{}]}}}},"run":{"type":"func","owner":"","parameters":[{"command":"string"},{"arguments":"...string"}],"/../":[],"<<":[{}]},"runWithOutput":{"type":"func","owner":"","parameters":[{"command":"string"},{"arguments":"...string"}],"/../":[],"<<":[{},{},{}]},"runCommand":{"type":"func","owner":"","parameters":[{"command":"string"},{"readStdout":"bool"},{"arguments":"...string"}],"/../":[],"<<":[{},{},{}]},"isExitError":{"type":"func","owner":"","parameters":[{"err":"error"}],"/../":[],"<<":[{},{}]},"isUpstart":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"upstart":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface","platform":"string"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Install":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*upstart","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*upstart","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"Run":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]}},"/p/":{"configPath":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"hasKillStanza":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"hasSetUIDStanza":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"getUpstartVersion":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]},"template":{"type":"func","owner":"*upstart","parameters":[],"/../":[],"<<":[]}}}},"newUpstartService":{"type":"func","owner":"","parameters":[{"i":"Interface"},{"platform":"string"},{"c":"*Config"}],"/../":[],"<<":[{},{}]},"windowsService":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"i":"Interface","errSync":"sync.Mutex","stopStartErr":"error"}},"==":["*Config"],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Platform":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Execute":{"type":"func","owner":"*windowsService","parameters":[{"args":"[]string"},{"r":"<-chan svc.ChangeRequest"},{"changes":"chan<- svc.Status"}],"/../":[],"<<":[{},{}]},"Install":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Uninstall":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Run":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Status":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Start":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Stop":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Restart":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"Logger":{"type":"func","owner":"*windowsService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]},"SystemLogger":{"type":"func","owner":"*windowsService","parameters":[{"errs":"chan<- error"}],"/../":[],"<<":[{},{}]}},"/p/":{"setError":{"type":"func","owner":"*windowsService","parameters":[{"err":"error"}],"/../":[],"<<":[{}]},"getError":{"type":"func","owner":"*windowsService","parameters":[],"/../":[],"<<":[]},"stopWait":{"type":"func","owner":"*windowsService","parameters":[{"s":"*mgr.Service"}],"/../":[],"<<":[{}]}}}},"getStopTimeout":{"type":"func","owner":"","parameters":[],"/../":[" getStopTimeout fetches the time before windows will kill the service."],"<<":[]},"newSystem":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"versionAtMost":{"type":"func","owner":"","parameters":[{},{"max":"[]int"}],"/../":[" versionAtMost will return true if the provided version is less than or equal to max"],"<<":[{},{}]},"versionCompare":{"type":"func","owner":"","parameters":[{},{"v2":"[]int"}],"/../":[" 1  - v1 is greater than v2"," 0  - v1 is equal to v2"," -1 - v1 is less than v2"," Return values are as follows"," An error will be returned if there is an array length mismatch."," versionCompare take to versions split into integer arrays and attempts to compare them"],"<<":[{},{}]},"parseVersion":{"type":"func","owner":"","parameters":[{"v":"string"}],"/../":[" This does not fully support semver style versions."," parseVersion will parse any integer type version seperated by periods."],"<<":[{}]}}}}},"sourcemap_test":{"/":{"/g/":{"BenchmarkParse":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"/../":[],"<<":[{}]},"BenchmarkSource":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"/../":[],"<<":[{}]},"TestSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"TestIndexedSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"TestSourceRootURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"TestEmptySourceRootURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"TestAbsSourceURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"TestJQuerySourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"Consumer":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"sourcemapURL":"string","file":"string","sections":"[]section"}},"==":[],"/../":[],"/m/":{"/g/":{"SourcemapURL":{"type":"func","owner":"*Consumer","parameters":[],"/../":[],"<<":[]},"File":{"type":"func","owner":"*Consumer","parameters":[],"/../":[" that this source map is associated with."," File returns an optional name of the generated code"],"<<":[]},"SourceContent":{"type":"func","owner":"*Consumer","parameters":[{"source":"string"}],"/../":[" SourceContent returns the original source content for the source."],"<<":[{}]}},"/p/":{}}},"Parse":{"type":"func","owner":"","parameters":[{"sourcemapURL":"string"},{"b":"[]byte"}],"/../":[],"<<":[{},{}]},"ExampleParse":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"sourceMapTest":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"genLine":"int","genColumn":"int","wantedSource":"string","wantedName":"string","wantedLine":"int","wantedColumn":"int"}},"==":[],"/../":[],"/m/":{"/g/":{"String":{"type":"func","owner":"*sourceMapTest","parameters":[],"/../":[],"<<":[]}},"/p/":{"assert":{"type":"func","owner":"*sourceMapTest","parameters":[{"t":"*testing.T"},{"smap":"*sourcemap.Consumer"}],"/../":[],"<<":[{}]}}}},"testSourceMap":{"type":"func","owner":"","parameters":[{"t":"*testing.T"},{"json":"string"}],"/../":[],"<<":[{}]},"testAbsSourceURL":{"type":"func","owner":"","parameters":[{"t":"*testing.T"},{},{"jsonStr":"string"}],"/../":[],"<<":[{}]},"j":{"type":"func","owner":"","parameters":[{"v":"interface{}"}],"/../":[],"<<":[{}]},"sourceMap":{"type":"type","base":"struct","/f/":{"/g/":{"Version":"int `json:\"version\"`","File":"string `json:\"file\"`","SourceRoot":"string `json:\"sourceRoot\"`","Sources":"[]string `json:\"sources\"`","SourcesContent":"[]string `json:\"sourcesContent\"`","Names":"[]json.RawMessage `json:\"names,string\"`","Mappings":"string `json:\"mappings\"`"},"/p/":{"mappings":"[]mapping"}},"==":[],"/../":[],"/m/":{"/g/":{},"/p/":{"parse":{"type":"func","owner":"*sourceMap","parameters":[{"sourcemapURL":"string"}],"/../":[],"<<":[{}]},"absSource":{"type":"func","owner":"*sourceMap","parameters":[{"root":"*url.URL"},{"source":"string"}],"/../":[],"<<":[{}]},"name":{"type":"func","owner":"*sourceMap","parameters":[{"idx":"int"}],"/../":[],"<<":[{}]}}}},"v3":{"type":"type","base":"struct","/f/":{"/g/":{"Sections":"[]section `json:\"sections\"`"},"/p/":{}},"==":["sourceMap"],"/../":[]},"section":{"type":"type","base":"struct","/f/":{"/g/":{"Offset":"struct {","Line":"int `json:\"line\"`","Column":"int `json:\"column\"`","Map":"*sourceMap `json:\"map\"`"},"/p/":{"}":"`json:\"offset\"`"}},"==":[],"/../":[]},"checkVersion":{"type":"func","owner":"","parameters":[{"version":"int"}],"/../":[],"<<":[{}]},"reverse":{"type":"func","owner":"","parameters":[{"ss":"[]section"}],"/../":[],"<<":[{}]},"mapping":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"genLine":"int32","genColumn":"int32","sourcesInd":"int32","sourceLine":"int32","sourceColumn":"int32","namesInd":"int32"}},"==":[],"/../":[]},"mappings":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"rd":"*strings.Reader","dec":"base64vlq.Decoder","hasName":"bool","value":"mapping","values":"[]mapping"}},"==":[],"/../":[],"/m/":{"/g/":{},"/p/":{"parse":{"type":"func","owner":"*mappings","parameters":[],"/../":[],"<<":[]},"pushValue":{"type":"func","owner":"*mappings","parameters":[],"/../":[],"<<":[]}}}},"parseMappings":{"type":"func","owner":"","parameters":[{"s":"string"}],"/../":[],"<<":[{},{}]},"mappingsNumber":{"type":"func","owner":"","parameters":[{"s":"string"}],"/../":[],"<<":[{}]},"parseGenCol":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"/../":[],"<<":[{},{}]},"parseSourcesInd":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"/../":[],"<<":[{},{}]},"parseSourceLine":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"/../":[],"<<":[{},{}]},"parseSourceCol":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"/../":[],"<<":[{},{}]},"parseNamesInd":{"type":"func","owner":"","parameters":[{"m":"*mappings"}],"/../":[],"<<":[{},{}]}}},"internal":{"base64vlq_test":{"/":{"/g/":{"TestEncodeDecode":{"type":"func","owner":"","parameters":[{"t":"*testing.T"}],"/../":[],"<<":[{}]},"BenchmarkEncode":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"/../":[],"<<":[{}]},"BenchmarkEncodeDecode":{"type":"func","owner":"","parameters":[{"b":"*testing.B"}],"/../":[],"<<":[{}]},"Encoder":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"w":"io.ByteWriter"}},"==":[],"/../":[],"/m/":{"/g/":{"Encode":{"type":"func","owner":"Encoder","parameters":[{"n":"int32"}],"/../":[],"<<":[{}]}},"/p/":{}}},"NewEncoder":{"type":"func","owner":"","parameters":[{"w":"io.ByteWriter"}],"/../":[],"<<":[{}]},"Decoder":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"r":"io.ByteReader"}},"==":[],"/../":[],"/m/":{"/g/":{"Decode":{"type":"func","owner":"Decoder","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"NewDecoder":{"type":"func","owner":"","parameters":[{"r":"io.ByteReader"}],"/../":[],"<<":[{}]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"toVLQSigned":{"type":"func","owner":"","parameters":[{"n":"int32"}],"/../":[],"<<":[{}]},"fromVLQSigned":{"type":"func","owner":"","parameters":[{"n":"int32"}],"/../":[],"<<":[{}]}}}}}},"ssh":{"/":{"/g/":{"SSHConnection":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"host":"string","user":"string","password":"string","sshclnts":"map[*sshclient]*sshclient"}},"==":[],"/../":[],"/m/":{"/g/":{"Connect":{"type":"func","owner":"*SSHConnection","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"NewSSHConnection":{"type":"func","owner":"","parameters":[{"host":"string"},{"username":"string"},{"password":"string"}],"/../":[],"<<":[{"sshcn":"*SSHConnection"}]},"SSHAgent":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"sshclient":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"sshcn":"*SSHConnection","sshclnt":"*ssh.Client"}},"==":[],"/../":[]},"newSSHClient":{"type":"func","owner":"","parameters":[{"sshcn":"*SSHConnection"}],"/../":[],"<<":[{},{}]}}}},"web":{"/":{"/g/":{"ClientHandle":{"type":"type","base":"struct","/f/":{"/g/":{"SendReceive":"func(rqstpath string, a ...interface{}) (rw ReaderWriter, err error)","SendRespondString":"func(rqstpath string, a ...interface{}) (rspstr string, err error)","Send":"func(rqstpath string, a ...interface{}) (rspr io.Reader, err error)","Close":"func()"},"/p/":{}},"==":["*Client"],"/../":[]},"Client":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"httpclient":"*http.Client"}},"==":[],"/../":["Client - struct"],"/m/":{"/g/":{"Close":{"type":"func","owner":"*Client","parameters":[],"/../":["Close *Client"],"<<":[]},"SendReceive":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"/../":["SendReceive return ReaderWriter that implement io.Reader,io.Writer"],"<<":[{"rw":"ReaderWriter"},{"err":"error"}]},"SendRespondString":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"/../":["SendRespondString - Client Send but return response as string"],"<<":[{"rspstr":"string"},{"err":"error"}]},"Send":{"type":"func","owner":"*Client","parameters":[{"rqstpath":"string"},{"a":"...interface{}"}],"/../":["Send - Client send"],"<<":[{"rspr":"iorw.Reader"},{"err":"error"}]},"Do":{"type":"func","owner":"*Client","parameters":[{"rqst":"*http.Request"}],"/../":["Do - refer tp http.Client Do interface"],"<<":[{"rspnse":"*http.Response"},{"err":"error"}]}},"/p/":{}}},"NewClient":{"type":"func","owner":"","parameters":[],"/../":["NewClient - instance"],"<<":[]},"ReaderWriter":{"type":"type","base":"interface","/f/":{"/g/":{"Flush":"() error"},"/p/":{}},"==":[],"/../":["ReaderWriter interface"]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"webactions":{"/":{"/g/":{"WebactionsJS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"JqueryJS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"ParsingJS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"WebactionsBundleJS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{}}},"ws":{"/":{"/g/":{"ReaderWriter":{"type":"type","base":"struct","/f/":{"/g/":{},"/p/":{"ws":"*websocket.Conn","r":"io.Reader","rbuf":"*bufio.Reader","rerr":"error","w":"io.WriteCloser","wbuf":"*bufio.Writer","werr":"error","isText":"bool","isBinary":"bool"}},"==":[],"/../":["ReaderWriter - struct"],"/m/":{"/g/":{"ReadRune":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["ReadRune - refer to io.RuneReader"],"<<":[]},"WriteRune":{"type":"func","owner":"*ReaderWriter","parameters":[{"r":"rune"}],"/../":["WriteRune - refer to bufio.Writer - WriteRune"],"<<":[{"size":"int"},{"err":"error"}]},"CanRead":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["CanRead - can Read"],"<<":[]},"CanWrite":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["CanWrite - can Write"],"<<":[]},"Read":{"type":"func","owner":"*ReaderWriter","parameters":[{"p":"[]byte"}],"/../":["Read - refer io.Reader"],"<<":[{"n":"int"},{"err":"error"}]},"Readln":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["Readln - read single line"],"<<":[]},"Readlines":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["Readlines - return lines []string slice"],"<<":[]},"ReadAll":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["ReadAll - return all read content as string"],"<<":[]},"Flush":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["Flush - flush invoke done onmessage"],"<<":[]},"Print":{"type":"func","owner":"*ReaderWriter","parameters":[{"a":"...interface{}"}],"/../":["Print - refer to fmt.Fprint"],"<<":[{}]},"Println":{"type":"func","owner":"*ReaderWriter","parameters":[{"a":"...interface{}"}],"/../":["Println - refer to fmt.Fprintln"],"<<":[{}]},"Write":{"type":"func","owner":"*ReaderWriter","parameters":[{"p":"[]byte"}],"/../":["Write - refer io.Writer"],"<<":[{"n":"int"},{"err":"error"}]},"Close":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":["Close - refer io.Closer"],"<<":[]}},"/p/":{"socketIOType":{"type":"func","owner":"*ReaderWriter","parameters":[],"/../":[],"<<":[]}}}},"NewServerReaderWriter":{"type":"func","owner":"","parameters":[{"w":"http.ResponseWriter"},{"r":"*http.Request"}],"/../":["NewServerReaderWriter - instance"],"<<":[{"wsrw":"*ReaderWriter"},{"err":"error"}]},"NewClientReaderWriter":{"type":"func","owner":"","parameters":[{"rqstpath":"string"},{"headers":"http.Header"}],"/../":[],"<<":[{"wsrw":"*ReaderWriter"},{"resp":"*http.Response"},{"err":"error"}]}},"/p/":{}}},"ecma":{"jsext":{"/":{"/g/":{"Register_jsext_consoleutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"Register_jsext_executils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"Register_jsext_fsutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"EntryInfo":{"type":"type","base":"struct","/f/":{"/g/":{"Name":"string `json:\"name\"`","Path":"string `json:\"path\"`","Type":"string `json:\"type\"`","Size":"int64 `json:\"size\"`"},"/p/":{}},"==":[],"/../":[]},"Register_jsext_gfxutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"Register_jsext_httputils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"Register_jsext_osutils":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]},"Register":{"type":"func","owner":"","parameters":[{"vm":"*goja.Runtime"}],"/../":[],"<<":[{}]}},"/p/":{}}}},"examples":{"main":{"/":{"/g/":{},"/p/":{"main":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"myconnect":{"type":"func","owner":"","parameters":[{"datasource":"string"},{"a":"...interface{}"}],"/../":[],"<<":[{"db":"*sql.DB"},{"err":"error"}]}}}}},"fonts":{"material":{"/":{"/g/":{"MaterialCSS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"MaterialdesigniconsWebfontEOT":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"MaterialdesigniconsWebfontTTF":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"MaterialdesigniconsWebfontWOFF":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"MaterialdesigniconsWebfontWOFF2":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}},"robotov27latin":{"/":{"/g/":{"IndexCSS":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]},"RobotoV27LatinRegularWOFF":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}},"/p/":{"init":{"type":"func","owner":"","parameters":[],"/../":[],"<<":[]}}}}}}